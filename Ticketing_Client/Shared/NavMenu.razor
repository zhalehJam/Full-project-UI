@using Framework.Core.UserDataManagement;
@using Microsoft.AspNetCore.Components.Authorization;
@using Ticketing.Client.Contracts.Persons;
@using Ticketing.Models.Persons.Dto;
@using Ticketing.Models.Persons.Repository;
@inject AuthenticationStateProvider authenticationStateProvider
@inject IPersonRepository personRepository

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" style="font:menu; font-size:larger; margin:inherit" href="">مدیریت پشتیبانی</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div dir="rtl" class="@NavMenuCssClass" style="font:menu;" @onclick="ToggleNavMenu">
    <nav class="flex-column">
       
        @if (userInfo.PersonRole == RoleType.Admin)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="CentersList">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> مراکز
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="PersonsList">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> پرسنل
                    </NavLink>
                </div>
            }
        @if (userInfo.PersonRole == RoleType.Admin || userInfo.PersonRole == RoleType.Supporter)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="ProgramsList">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> برنامه ها
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="TicketsList">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> تیکت ها
                </NavLink>
            </div>
        }
            
        
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    public PersonDto userInfo = new PersonDto();
    [Parameter]
    public string userName { get; set; } = "";

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (userName != "" && userInfo.PersonID == 0)
        {
            if (userInfo != await GetPersonInfo(Convert.ToInt32(userName)))
            {
                userInfo = await GetPersonInfo(Convert.ToInt32(userName));
                StateHasChanged();
            }
        }
    }
    private async Task<PersonDto> GetPersonInfo(int personCode)
    {
        return await personRepository.GetPersonInfoByPersonelCode(personCode);
    }
}
