@using Blazored.Modal
@using Blazored.Modal.Services
<div dir="rtl" style="animation-delay">
    <h3>@Message</h3>
    <cener>
        @if(MessageType == "Alert")
        {
            <button style="cen" class="btn btn-outline-warning" @onclick="(()=>Action(true))">بستن</button>
        }
        @if(MessageType == "Confrim")
        {
            <button class="btn btn-outline-warning" @onclick="(()=>Action(true))">تایید</button>
            <button class="btn btn-outline-warning" @onclick="(()=>Action(false))">لغو</button>

        }
    </cener>
</div>
@code {
    [Parameter]
    public string Message { get; set; }
    [Parameter]
    public string MessageType { get; set; }
    [CascadingParameter] BlazoredModalInstance blazoredModalInstance { get; set; }

    private async void Action(bool userchose)
    {
        if(MessageType == "Alert")
        {
            blazoredModalInstance.CloseAsync(ModalResult.Ok());
        }
        else if(MessageType == "Confrim")
        {
            if(userchose == true)
            {
                blazoredModalInstance.CloseAsync(ModalResult.Ok());
            }
            else
            {
                blazoredModalInstance.CloseAsync(ModalResult.Cancel());

            }
        }

    }

}
