@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using Syncfusion.Blazor.Cards
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<div dir="rtl" class="page">
    <div class="sidebar">
        <NavMenu userName="@userName" />
    </div>


    <main>
        @* <AuthorizeView>
        <Authorized>
        </Authorized>
        </AuthorizeView>*@
        <div class="top-row px-4">
            <div class="d-flex flex-column-auto flex-center">
                <Syncfusion.Blazor.Buttons.SfButton style="color:ivory ;">
                    خروج
                    <img class="thumbnail" style="width: 27px; height: 23px;" src="images/icons/signout-icon.jpg" @onclick="BeginSignOut" title="خروج از سیستم" />
                </Syncfusion.Blazor.Buttons.SfButton>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {
    private string userName = "";

    private void BeginSignOut(MouseEventArgs args)
    {
        Microsoft.AspNetCore.Components.WebAssembly.Authentication.NavigationManagerExtensions.NavigateToLogout(Navigation, "authentication/logout");
        //Navigation.NavigateTo("authentication/logout");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            userName = user.Identity.Name ?? "";
            if(user.Identity!.IsAuthenticated == false) return;
        }
        else
        {
            var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            userName = user.Identity.Name ?? "";
        }
    }
}
