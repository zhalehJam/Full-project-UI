<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.RichTextEditor</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ColorItemBase">
            <summary>
            A class used for configuring the font or background color properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ColorItemBase.Parent">
            <summary>
            A class is used to configure the quick toolbar settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ColorItemBase.ColorCode">
            <summary>
            Gets or sets the color code in the color picker palette for content background and font color.
            </summary>
            <remarks>
            Passing <c>string.Empty</c> as a value in the array will display it as a transparant color in the palette.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ColorItemBase.Columns">
            <summary>
            Gets or sets the number of columns that is displayed on a row in the color picker palette.
            </summary>
            <value>
            The number of columns that is displayed in the color picker palette. The default value is <c>10</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ColorItemBase.Default">
            <summary>
            Specifies the color value that is displayed by default in the color picker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ColorItemBase.Mode">
            <summary>
            Gets or sets the color picker default rendering palette or picker mode.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.Inputs.ColorPickerMode"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Palette"/>
            </value>
            <remarks>
            If the <c>ColorPickerMode</c> is <c>Palette</c>, the color picker popup display as color palette.
            If the <c>ColorPickerMode</c> is <c>Picker</c>, the color picker popup display as color picking panel.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ColorItemBase.ModeSwitcher">
            <summary>
            Gets or sets whether to enable or disable the color picker diaplay mode switcher button.
            </summary>
            <value>
             <c>true</c>, if the diaplay mode switcher button is enabled for color picker. otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.ColorItemBase.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.ColorItemBase.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.ColorItemBase.GetColorType">
            <summary>
            Used to get the Color type.
            </summary>
            <returns>Returns the dropdown type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.ColorItemBase.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.ColorItemBase.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.ColorItemBase.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase">
            <summary>
            A class is used as a base class for the DropDownButton related properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.Parent">
            <summary>
            A class is used to configure the quick toolbar settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.Default">
            <summary>
            Gets or sets the default value of DropDownButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.Items">
            <summary>
            Specifies the dropdown button items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.Width">
            <summary>
            Specifies the width.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.GetDropDownType">
            <summary>
            Used to get the dropdown type.
            </summary>
            <returns>Returns the dropdown type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.DropDownButtonItemBase.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings">
            <summary>
            A class used for configuring the audio settings in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings.AllowedTypes">
            <summary>
            Gets or sets the an audio extensions that populate the allowed type of audio on browse.
            </summary>
            <value>
            The list of audio types that are allowed to be uploaded. The default values are <c>.wav</c>, <c>.mp3</c>, <c>.m4a</c>, <c>.wma</c>. 
            </value>
            <remarks>
            The File Browser allows secified extenions audio files and restricts uploading of other types of files.
            </remarks>
             <example>
             The following code example allows uploading of only mp3 and wav audio files.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorAudioSettings AllowedTypes="@TypeList" />
            </SfRichTextEditor>
            @code {
                List<string> TypeList = new List<string>() { ".mp3", ".wav" };
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.Audio }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorAudioSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorBackgroundColor">
            <summary>
            A class used for configuring the background color properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <remarks>
            Configure the background color tool appearance by specifying the value for the corresponding property.
            </remarks>
            <example>
            In the following code example, configure the <c>Default</c>, <c>ColorCode</c>, and <c>ModeSwitcher</c> properties added using the <see cref="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorBackgroundColor"/> tag directive.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                 < RichTextEditorBackgroundColor ColorCode="@ColorList" ModeSwitcher="true" Default="#a5a5a5"/>
            </SfRichTextEditor>
            @code {
                    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                    {
                        new ToolbarItemModel() { Command = ToolbarCommand.BackgroundColor }
                    };
                    private Dictionary<string, string[]> ColorList = new Dictionary<string, string[]>()
                    {
                    { "Custom", new string[]
                       {
                           string.Empty, "#000000", "#e7e6e6", "#44546a", "#4472c4", "#ed7d31", "#a5a5a5", "#ffc000", "#70ad47", "#ff0000"
                       }
                   }
               };
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorBackgroundColor.Parent">
            <summary>
            A class is used to configure the quick toolbar settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorBackgroundColor.Default">
            <summary>
            Gets or sets the default background color and the typed content in the editor.
            </summary>
            <value>
            The color of the selected content background color. The default value is <c>#ffff00</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorBackgroundColor.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorBackgroundColor.GetColorType">
            <summary>
            Used to get the dropdown type.
            </summary>
            <returns>Returns the dropdown type.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorBulletFormatList">
            <summary>
            A class used for configuring the BulletFormatList properties in <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorBulletFormatList Items="@BulletList" />
            </SfRichTextEditor>
            @code {
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.BulletFormatList }
                };
                List<DropDownItemModel> BulletList = new List<DropDownItemModel>() {
                new DropDownItemModel() { Text = "None", Value = "none" },
                new DropDownItemModel() { Text = "Circle", Value = "circle" },
                new DropDownItemModel() { Text = "Square", Value = "square" }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorBulletFormatList.Items">
            <summary>
            Gets or sets the format list collection to be shown in the bulleted list tool item in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <value>
             <see cref="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel"/>
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorBulletFormatList.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorBulletFormatList.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItem">
            <summary>
            A class used for configuring the custom toolbar item properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <example>
            In the following example, insert the horizontal line using the custom tool option.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor @ref="RTEInstance">
                <RichTextEditorToolbarSettings Items="@Tools">
                    <RichTextEditorCustomToolbarItems>
                        <RichTextEditorCustomToolbarItem Name="Symbol">
                             <Template>
                                <button class="e-btn e-tbar-btn" @onclick="ClickHandler">
                                     <div class="e-tbar-btn-text" style="font-weight: 500;">__</div>
                                </button>
                             </Template>
                        </RichTextEditorCustomToolbarItem>
                    </RichTextEditorCustomToolbarItems>
                </RichTextEditorToolbarSettings>
            </SfRichTextEditor>
            @code {
                SfRichTextEditor RTEInstance;
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Name = "Symbol", TooltipText = "Insert horizontal line" }
                };
                private async Task ClickHandler() {
                    await this.RTEInstance.ExecuteCommandAsync(CommandName.InsertHTML, "<hr>");
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItem.Name">
            <summary>
            Gets or sets the custom tool name.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItem.Template">
            <summary>
            Gets or sets the template to customize the toolbar item.
            </summary>
            <value>
            The template content. The default value in <c>null</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItem.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItem.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItem.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItems">
            <summary>
            A class used for configuring the custom toolbar items in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItems.ChildContent">
            <summary>
            Set the child content for the custom toolbar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorCustomToolbarItems.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents">
            <summary>
            A class used for configuring the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Blur">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> loses focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Created">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> gets rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Destroyed">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.DialogClosed">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> dialog after closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.DialogOpened">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> dialog after opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Focus">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> is focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ImageDelete">
            <summary>
            Gets or sets the event callback that will be invoked when the selected image is deleted from the editor content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.MediaDeleted">
            <summary>
            Gets or sets the event callback that will be invoked when the selected media is deleted from the editor content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ImageUploadChange">
            <summary>
            Gets or sets the event callback that will be invoked when the image is successfully uploaded and inserted into editor content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploadChange">
            <summary>
            Gets or sets the event callback that will be invoked when the media is successfully uploaded and inserted into editor content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnActionBegin">
            <summary>
            Gets or sets the event callback that will be invoked before executing the commands using the toolbar items click or <see cref="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName)"/>method call.
            </summary>
            <remarks>
            You can prevent the current executing action using <see cref="P:Syncfusion.Blazor.RichTextEditor.ActionBeginEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents OnActionBegin="ActionBeginHandler" />
            </SfRichTextEditor>
            @code {
                public void ActionBeginHandler(ActionBeginEventArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnActionComplete">
            <summary>
            Gets or sets the event callback that will be invoked after executing the commands using the toolbar items click or <see cref="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName)"/>method call.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnDialogClose">
            <summary>
            Gets or sets the event callback that will be invoked before editor dialog close.
            </summary>
            <remarks>
            You can prevent the dialog close action using <see cref="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            @using Syncfusion.Blazor.Popups
            <SfRichTextEditor>
                <RichTextEditorEvents OnDialogClose="DialogCloseHandler" />
            </SfRichTextEditor>
            @code {
                public void DialogCloseHandler(BeforeCloseEventArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnDialogOpen">
            <summary>
            Gets or sets the event callback that will be invoked before the editor dialog is opened.
            </summary>
            <remarks>
            You can prevent the dialog open action using <see cref="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Cancel"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageDrop">
            <summary>
            Gets or sets the event callback that will be invoked when the image is being dropped in editor content.
            </summary>
            <remarks>
            You can prevent the image drag and drop action using <see cref="P:Syncfusion.Blazor.RichTextEditor.BeforeImageDropEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents OnImageDrop="ImageDragHandler" />
            </SfRichTextEditor>
            @code {
                public void ImageDragHandler(BeforeImageDropEventArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageRemoving">
            <summary>
            Gets or sets the event callback that will be invoked when the selected image is remove from the upload location.
            </summary>
            <remarks>
            You can pass the custom parameters with key and value pair format using <see cref="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CustomFormData"/> on XHR's current request for image removing action.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            @using Syncfusion.Blazor.Inputs
            <SfRichTextEditor>
                <RichTextEditorEvents OnImageRemoving="FileRemoveHandler" />
            </SfRichTextEditor>
            @code {
                public void FileRemoveHandler(RemovingEventArgs args) {
                // adding custom Form Data
                args.CustomFormData = new List<object> {new { path = "Your path"}};
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileRemoving">
            <summary>
            Gets or sets the event callback that will be invoked when the selected media is remove from the upload location.
            </summary>
            <remarks>
            You can pass the custom parameters with key and value pair format using <see cref="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CustomFormData"/> on XHR's current request for media removing action.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            @using Syncfusion.Blazor.Inputs
            <SfRichTextEditor>
                <RichTextEditorEvents FileRemoving="FileRemoveHandler" />
            </SfRichTextEditor>
            @code {
                public void FileRemoveHandler(RemovingEventArgs args) {
                // adding custom Form Data
                args.CustomFormData = new List<object> {new { path = "Your path"}};
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageSelected">
            <summary>
            Gets or sets the event callback that will be invoked when the image is selected or dragged into the insert image dialog.
            </summary>
            <remarks>
            You can prevent the image selection action using <see cref="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            @using Syncfusion.Blazor.Inputs
            <SfRichTextEditor>
                <RichTextEditorEvents OnImageSelected="ImageSelectionHandler" />
            </SfRichTextEditor>
            @code {
                public void ImageSelectionHandler(SelectedEventArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileSelected">
            <summary>
            Gets or sets the event callback that will be invoked when the media is selected or dragged into the insert media dialog.
            </summary>
            <remarks>
            You can prevent the media selection action using <see cref="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            @using Syncfusion.Blazor.Inputs
            <SfRichTextEditor>
                <RichTextEditorEvents FileSelected="FileSelectionHandler" />
            </SfRichTextEditor>
            @code {
                public void FileSelectionHandler(SelectedEventArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.BeforeUploadImage">
            <summary>
            Gets or sets the event callback that will be invoked when the selected image begins to upload to the server.
            </summary>
            <remarks>
            You can pass the custom parameters with key and value pair format using <see cref="P:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs.CustomFormData"/> on XHR's current request for image upload action.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents BeforeUploadImage="OnImageUploading"/>
            </SfRichTextEditor>
            @code {
                public void OnImageUploading(ImageUploadingEventArgs args) {
                // adding custom Form Data
                args.CustomFormData = new List<object> {new { path = "Your path"}};
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploading">
            <summary>
            Gets or sets the event callback that will be invoked when the selected media begins to upload to the server.
            </summary>
            <remarks>
            You can pass the custom parameters with key and value pair format using <see cref="P:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs.CustomFormData"/> on XHR's current request for media upload action.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents FileUploading="OnMediaUploading"/>
            </SfRichTextEditor>
            @code {
                public void OnMediaUploading(FileUploadingEventArgs args) {
                // adding custom Form Data
                args.CustomFormData = new List<object> {new { path = "Your path"}};
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageUploadFailed">
            <summary>
            Gets or sets the event callback that will be invoked when the image upload process gets failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploadFailed">
            <summary>
            Gets or sets the event callback that will be invoked when the media upload process gets failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageUploadSuccess">
            <summary>
            Gets or sets the event callback that will be invoked when the image is successfully uploaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploadSuccess">
            <summary>
            Gets or sets the event callback that will be invoked when the media is successfully uploaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnQuickToolbarOpen">
            <summary>
            Gets or sets the event callback that will be invoked before the quick toolbar is opened.
            </summary>
            <remarks>
            You can prevent the quick toolbar open action using <see cref="P:Syncfusion.Blazor.RichTextEditor.BeforeQuickToolbarOpenArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents OnQuickToolbarOpen="QuickToobarHandler" />
            </SfRichTextEditor>
            @code {
                public void QuickToobarHandler(BeforeQuickToolbarOpenArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnResizeStart">
            <summary>
            Gets or sets the event callback that will be invoked when you start resizing the image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnResizeStop">
            <summary>
            Gets or sets the event callback that will be invoked when you stop resizing the image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnToolbarClick">
            <summary>
            Gets or set the event callback that will be invoked when the toolbar items are clicked.
            </summary>
            <remarks>
            You can prevent the quick toolbar item click action using <see cref="P:Syncfusion.Blazor.RichTextEditor.ToolbarClickEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents OnToolbarClick="ToobarHandler" />
            </SfRichTextEditor>
            @code {
                public void ToobarHandler(ToolbarClickEventArgs args) {
                    args.Cancel = true;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.QuickToolbarClosed">
            <summary>
            Gets or sets the event callback that will be invoked after the quick toolbar has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.QuickToolbarOpened">
            <summary>
            Gets or sets the event callback that will be invoked after the quick toolbar is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.UpdatedToolbarStatus">
            <summary>
            Gets or sets the event callback that will be invoked when the toolbar items status is updated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ValueChange">
            <summary>
            Gets or sets the event callback that will be invoked when the editor content gets changed on every <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveInterval"/> time or when the editor loses focus.
            </summary>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorEvents ValueChange="OnValueChange"/>
            </SfRichTextEditor>
            @code {
                public void OnValueChange(Syncfusion.Blazor.RichTextEditor.ChangeEventArgs args) {
                // Get Rich Text Editor updated value.
                var RTEValue = args.Value;
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.BeforePasteCleanup">
            <summary>
            Gets or sets the event callback that will be invoked before pasting the copied content into the editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.AfterPasteCleanup">
            <summary>
            Gets or sets the event callback that will be invoked after pasted the copied content into the editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontColor">
            <summary>
            A class used for configuring the font color properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
             <remarks>
            Configure the font color tool appearance by specifying the value for the corresponding property.
            </remarks>
            <example>
            In the following code example, configure the <c>Default</c>, <c>ColorCode</c>, and <c>ModeSwitcher</c> properties added using the <see cref="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontColor"/> tag directive.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                 < RichTextEditorFontColor ColorCode="@ColorList" ModeSwitcher="true" Default="#a5a5a5"/>
            </SfRichTextEditor>
            @code {
                    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                    {
                        new ToolbarItemModel() { Command = ToolbarCommand.BackgroundColor }
                    };
                    private Dictionary<string, string[]> ColorList = new Dictionary<string, string[]>()
                    {
                    { "Custom", new string[]
                       {
                           string.Empty, "#000000", "#e7e6e6", "#44546a", "#4472c4", "#ed7d31", "#a5a5a5", "#ffc000", "#70ad47", "#ff0000"
                       }
                   }
               };
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontColor.Parent">
            <summary>
            A class used for configuring the FontFamily properties in Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontColor.Default">
            <summary>
            Gets or sets the default font color and the typed text in the editor.
            </summary>
            <value>
            The color of the selected text font color. The default value is <c>#ff0000</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontColor.GetColorType">
            <summary>
            Used to get the font color.
            </summary>
            <returns>Returns the font color.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontColor.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontFamily">
            <summary>
            A class used for configuring the font family properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
             <remarks>
            You can configure the font family tool appearance by specifying the value for the corresponding property.
            </remarks>
             <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorFontFamily Items="FontFamilyItems" Width="70px" Default="Tahoma"/>
            </SfRichTextEditor>
            @code {
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.FontName }
                };
               private List<DropDownItemModel> FontFamilyItems = new List<DropDownItemModel>()
               {
                   new DropDownItemModel() { Text = "Impact", Value = "Impact,Charcoal,sans-serif" },
                   new DropDownItemModel() { Text = "Tahoma", Value = "Tahoma,Geneva,sans-serif" }
               };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontFamily.Parent">
            <summary>
            The Blazor Rich Text Editor is a feature-rich WYSIWYG HTML editor and WYSIWYG Markdown editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontFamily.Items">
            <summary>
            Gets or sets the fonts that diaply under the Font Family tool button in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> toolbar.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontFamily.Width">
            <summary>
            Gets or sets the width of the font family dropdown button in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> toolbar.
            </summary>
            <value>
            This property contains wisth value as string. The default value is <c>65px</c>. 
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontFamily.GetDropDownType">
            <summary>
            Used to get the font family.
            </summary>
            <returns>Returns the font family.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontFamily.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontSize">
            <summary>
            A class used for configuring the font size properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
             <remarks>
            You can configure the font size tool appearance by specifying the value for the corresponding property.
            </remarks>
             <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorFontSize Items="FontSizeItems" Default="10pt" Width="40px"/>
            </SfRichTextEditor>
            @code {
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.FontSize }
                };
               private List<DropDownItemModel> FontSizeItems = new List<DropDownItemModel>()
               {
                   new DropDownItemModel() { Text = "8 pt", Value = "8pt" },
                   new DropDownItemModel() { Text = "10 pt", Value = "10pt" },
                   new DropDownItemModel() { Text = "12 pt", Value = "12pt" }
               };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontSize.Parent">
            <summary>
            The Blazor Rich Text Editor is a feature-rich WYSIWYG HTML editor and WYSIWYG Markdown editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontSize.Items">
            <summary>
            Gets or sets the fonts that diaply under the Font Size tool button in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> toolbar.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontSize.Width">
            <summary>
            Gets or sets the width of the font size dropdown button the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> toolbar.
            </summary>
            <value>
            This property contains wisth value as string. The default value is <c>35px</c>. 
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontSize.GetDropDownType">
            <summary>
            Used to get the font size.
            </summary>
            <returns>Returns the font size.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFontSize.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorFormat">
            <summary>
            A class used for configuring the paragraph format properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
             <remarks>
            You can configure the paragraph format tool appearance by specifying the value for the corresponding property.
            </remarks>
             <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorFormat Items="FormatItems" Default="Paragraph" Width="70px"/>
            </SfRichTextEditor>
            @code {
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.Formats }
                };
               private List<DropDownItemModel> FormatItems = new List<DropDownItemModel>()
               {
                   new DropDownItemModel() { Text = "Paragraph", Value = "P" },
                   new DropDownItemModel() { Text = "Heading 1", Value = "H1" },
                   new DropDownItemModel() { Text = "Heading 2", Value = "H2" }
               };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFormat.Parent">
            <summary>
            The Blazor Rich Text Editor is a feature-rich WYSIWYG HTML editor and WYSIWYG Markdown editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFormat.Items">
            <summary>
            Gets or sets the paragraph format that diaply under the Format tool button in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> toolbar.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorFormat.Width">
            <summary>
            Gets or sets the width of the paragraph format dropdown button the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> toolbar.
            </summary>
            <value>
            This property contains wisth value as string. The default value is <c>65px</c>. 
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFormat.GetDropDownType">
            <summary>
            Used to get the dropdown type.
            </summary>
            <returns>Returns the dropdown type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorFormat.PropertyChangeHandler(System.Collections.Generic.Dictionary{System.String,System.Object}.KeyCollection)">
            <summary>
            Used to handle the dynamic property changes.
            </summary>
            <param name="keys">Specifies the changed keys.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings">
            <summary>
            A class used for configuring the IFrame rendring properties in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.Attributes">
            <summary>
            Gets or sets a collection of additional attributes to be added in the iframe element for customization.
            </summary>
             <example>
             In the below code example, enable the iframe spellcheck and autocorrect attributes.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                 <RichTextEditorIFrameSettings Enable="true" Attributes="IframeAttributes"/>
            </SfRichTextEditor>
            @code {
                private Dictionary<string, object> IframeAttributes = new Dictionary<string, object>() {
                   {"spellcheck", "true" },
                   {"autocorrect", "on"}
               }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.Enable">
            <summary>
            Gets or sets the editor content will be render in an iframe and isolated from the rest of the page.
            </summary>
            <value>
            <c>true</c>, if the editor content will be render in an iframe. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.Resources">
            <summary>
            Gets or sets the resources for injecting the styles and scripts into the iframe element.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.ResourcesModel"/>
            </value>
            <example>
            In the following code example, the external style and script files are added in the iframe body element.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                 <RichTextEditorIFrameSettings Enable="true" Resources="NewResources" />
            </SfRichTextEditor>
            @code {
                private ResourcesModel NewResources { get; set; } = new ResourcesModel()
                {
                   Styles = new string[] { "/styles.css" },
                   Scripts = new string[] { "/script.js" }
               };
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorIFrameSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings">
            <summary>
            A class used for configuring the image inserting settings in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.AllowedTypes">
            <summary>
            Gets or sets image extensions that populate the allowed type of images on the browse.
            </summary>
            <value>
            The list of image types that are allowed to be uploaded. The default values are <c>jpeg</c>, <c>jpg</c>, and <c>png</c>. 
            </value>
            <remarks>
            The File Browser allows secified extenions audio files and restricts uploading of other types of files.
            </remarks>
            <example>
            The following code example allows uploading only for JPEG and JPG image types.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorImageSettings AllowedTypes="@TypeList" />
            </SfRichTextEditor>
            @code {
                List<string> TypeList = new List<string>() { ".jpeg", ".jpg" };
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.Image }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.Display">
            <summary>
            Gets or sets whether the inserted image is displayed as Inline or Break.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.RichTextEditor.ImageDisplay"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.ImageDisplay.Inline"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.Height">
            <summary>
            Gets or sets the default height value of the image element when they are inserted into the editor.
            </summary>
            <value>
            This property contains height value as string. The default value is <c>auto</c>. 
            </value>
            <remarks>
            To provide the height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MaxHeight">
            <summary>
            Gets or sets the maximum height constraint of the image element.
            </summary>
            <value>
            A string value that represents the maximum height.
            </value>
            <remarks>
            To provide the maximum height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MaxWidth">
            <summary>
             Gets or sets the maximum width constraint of the image element.
            </summary>
            <value>
            A string value that represents the maximum width.
            </value>
            <remarks>
            To provide the maximum width value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MinHeight">
            <summary>
            Gets or sets the minimum height constraint of the image element.
            </summary>
            <value>
            A string value that represents the minimum height.
            </value>
            <remarks>
            To provide the minimum height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MinWidth">
            <summary>
            Gets or sets the minimum width constraint of the image element.
            </summary>
            <value>
            A string value that represents the minimum width.
            </value>
            <remarks>
            To provide the minimum height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.Path">
            <summary>
             Gets or sets the Url of image save location.
            </summary>
            <value>
            The value as a Url string to save image file in to server. The default value is <c>String.Empty</c>.
            </value>
            <example>
            In the following code example, upload images and save them into the wwwroot/images folder.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
               <RichTextEditorImageSettings Path="wwwroot/images" />
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.EnableResize">
            <summary>
             Gets or sets value indicating whether the image element can be resized in the editor’s content.
            </summary>
            <value>
            <c>true</c>, if the image can be resized; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
            <remarks>
            You can resize image width, maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MaxWidth"/> value and maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MinWidth"/> value.
            Same as resize image height maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MaxHeight"/> value and maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.MinHeight"/> value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.ResizeByPercent">
            <summary>
            Gets or sets whether the image resizing should be enable percentage calculation.
            </summary>
            <value>
            <c>true</c>, if the image can be resized based on percentage calculation; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.SaveFormat">
            <summary>
            Gets or sets the whether the inserted image is inserted as blob or base64 format.
            </summary>
            <value>
            One of the <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.SaveFormat"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.SaveFormat.Blob"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.SaveUrl">
            <summary>
            Gets or sets the width of the image when they are inserted into the editor.
            </summary>
            <value>
            The value as a Url string to save video file in to server. The default value is <c>String.Empty</c>.
            </value>
            <example>
            In the following code example, call the Save method API endpoint on the image uploading action.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
               <RichTextEditorImageSettings SaveUrl="/api/imageupload/Save" />
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.Width">
            <summary>
            Gets or sets the width of the image when they are inserted into the editor.
            </summary>
            <value>
            The width of the component in pixels or percent (%) as string type. The default value is <c>auto</c>. 
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorImageSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode">
            <summary>
            A class used for configuring the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> as inline edting.
            </summary>
            <example>
            In the following code example, enable the inline edit mode.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                 <RichTextEditorInlineMode Enable="true" ShowOnSelection="false"/>
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.Enable">
            <summary>
            Gets or sets whether to enable or disable the inline edit mode in the editor.
            </summary>
            <value>
            <c>true</c>, if the inline editing mode is enabled. The default value is <c>false</c>.
            </value>
            <remarks>
            While enabling the inline mode toolbar display on demand, when the editable text is focused or selected, the inline floating toolbar appears.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.ShowOnSelection">
            <summary>
            Gets or sets whether the inline toolbar displayed while select the content or focus on it.
            </summary>
            <value>
            <c>true</c>, if the inline floating toolbar appears on text selection; otherwise it appears on editor focus. The default value is <c>true</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions">
            <summary>
            A class used for configuring the Markdown properties in <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.FormatSyntax">
            <summary>
            Gets or sets the Markdown syntax that can be used for the heading formats in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <example>
            In the following code example, the custom syntax <c>+</c> is added for heading1 format.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor EditorMode="EditorMode.Markdown">
                <RichTextEditorMarkdownOptions FormatSyntax="@FormatSyntax" />
            </SfRichTextEditor>
            @code {
                private Dictionary<string, string> FormatSyntax { get; set; } = new Dictionary<string, string>()
                {
                    { "h1", "+ " }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.ListSyntax">
            <summary>
            Gets or sets the Markdown syntax that can be used for the list in editor.
            </summary>
            <example>
            In the following code example, the custom syntax <c>+ </c> is added for the unordered list format and <c>1.</c> for the ordered list format.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor EditorMode="EditorMode.Markdown">
                <RichTextEditorMarkdownOptions ListSyntax="@ListSyntax"/>
            </SfRichTextEditor>
            @code {
                private Dictionary<string, string> ListSyntax { get; set; } = new Dictionary<string, string>()
                {
                    { "OL", "1. " },
                    { "UL", "+ " }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.SelectionSyntax">
            <summary>
            Gets or sets the Markdown syntax that can be used for the selection in editor.
            </summary>
            <example>
            In the following code example, the custom syntax <c>__ </c> is added for bold selected text and <c>_</c> for applying the italic style.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor EditorMode="EditorMode.Markdown">
                <RichTextEditorMarkdownOptions SelectionSyntax="@SelectionSyntax"/>
            </SfRichTextEditor>
            @code {
                private Dictionary<string, string> SelectionSyntax { get; set; } = new Dictionary<string, string>()
                {
                    { "Bold", "__" },
                    { "Italic", "_" }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMarkdownOptions.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings">
            <summary>
            A class used for configuring the media settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.LayoutOption">
            <summary>
            Gets or sets whether the inserted audio/video is displayed as Inline or Break.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.RichTextEditor.DisplayLayoutOptions"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.DisplayLayoutOptions.Inline"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.Height">
            <summary>
            Gets or sets the default height value of the audio/video when they are inserted into the editor.
            </summary>
            <value>
            This property contains height value as string. The default value is <c>auto</c>. 
            </value>
            <remarks>
            To provide the height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.Path">
            <summary>
            Gets or sets the Url of audio/video file save location.
            </summary>
            <value>
            The value as a Url string to save audio/video file in to server. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.SaveFormat">
            <summary>
            Gets or sets the whether the inserted audio/video is inserted as blob or base64 format.
            </summary>
            <value>
            One of the <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.SaveFormat"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.SaveFormat.Blob"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.SaveUrl">
            <summary>
            Gets or sets the Url of save action that will receive the uploaded files and save them in the server.
            </summary>
            <value>
            The value as a Url string to save the files in to the server. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.Width">
            <summary>
            Gets or sets the width of the audio/video when they are inserted into the editor.
            </summary>
            <value>
            The width of the component in pixels or percent (%) as string type. The default value is <c>auto</c>. 
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorMediaSettings.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorNumberFormatList">
            <summary>
            A class used for configuring the NumberFormatList properties in <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorBulletFormatList Items="@NumberList" />
            </SfRichTextEditor>
            @code {
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.NumberFormatList }
                };
                List<DropDownItemModel> NumberList = new List<DropDownItemModel>() {
                    new DropDownItemModel() { Text = "None", Value = "none" },
                    new DropDownItemModel() { Text = "Number", Value = "decimal" },
                    new DropDownItemModel() { Text = "Upper Alpha", Value = "upper-alpha" },
                    new DropDownItemModel() { Text = "Lower Alpha", Value = "lower-alpha" }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorNumberFormatList.Items">
            <summary>
            Gets or sets the format list collection to be shown in the numbered list tool item in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel"/>
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorNumberFormatList.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorNumberFormatList.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings">
            <summary>
            The class is used to configure paste related settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.AllowedStyleProperties">
            <summary>
            Gets or sets the list of allowed CSS style attributes when pasting in to the editor.
            </summary>
            <value>
            The value is an array of string type.
            </value>
            <remarks>
            Allows only a provided list of CSS style attributers. Others will be removed from the pasted tags.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorPasteCleanupSettings AllowedStyleProperties="@AllowedStyles"/>
            </SfRichTextEditor>
            @code {
                 private string[] AllowedStyles = new string[] { "color", "font-size" };
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.DeniedAttributes">
            <summary>
            Gets or sets the list of CSS style attributes that are removed with their content when pasting text into the editor.
            </summary>
            <value>
            The value is an array of string type.
            </value>
            <remarks>
            Restrict the provided list of arrributes alone when pasting text into the editor.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorPasteCleanupSettings DeniedAttributes="@DeniedList"/>
            </SfRichTextEditor>
            @code {
                 private string[] DeniedList = new string[] { "class", "title", "id" };
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.DeniedTags">
            <summary>
            Gets or sets the list of HTML tags that are removed with their content when pasting text into the editor.
            </summary>
            <value>
            The value is an array of string type.
            </value>
            <remarks>
            Restrict the provided list of tags alone when pasting text into the editor.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorPasteCleanupSettings DeniedTags="@DeniedTagList"/>
            </SfRichTextEditor>
            @code {
                 private string[] DeniedTagList = new string[] { "a", "a[!href]" };
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.KeepFormat">
            <summary>
            Gets or sets whether to keep or remove the format in the copied content when pasting into the editor.
            </summary>
            <value>
            <c>true</c>, if keep the same format in the copied content. The default value is <c>true</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.PlainText">
            <summary>
            Gets or sets whether to remove text formatting when pasting content into the editor.
            </summary>
            <value>
            <c>true</c>, if remove remove text formatting in the copied content. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.Prompt">
            <summary>
            Gets or sets whether to show modal dialog to choose if to keep or clean the formatting in the copied content.
            </summary>
            <value>
            <c>true</c>, if show modal dialog to choose if to keep or clean the formatting. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings">
            <summary>
            A class is used to configure the quick toolbar settings in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.ActionOnScroll">
            <summary>
            Gets or sets a value whether the quick toolbar is hidden or not on scrolling the page or editor container.
            </summary>
            <value>
            One of the <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.ActionOnScroll"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.ActionOnScroll.Hide"/>
            </value>
            <remarks>
            If the <c>ActionOnScroll</c> is <c>Hide</c>, the quick toolbar is hidden on scrolling the page or editor container.
            If the <c>ActionOnScroll</c> is <c>None</c>, the quick toolbar is keep visible on scrolling the page or editor container.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Enable">
            <summary>
            Gets or sets whether to enable a quick toolbar in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> or not.
            </summary>
            <value>
            <c>true</c>, if the quick toolbar is enabled; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Image">
            <summary>
            Gets or sets the quick toolbar items to render when the image is selected in the editor.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.ImageToolbarItemModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Audio">
            <summary>
            Gets or sets the quick toolbar items to render when the audio is selected in the editor.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.AudioToolbarItemModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Video">
            <summary>
            Gets or sets the quick toolbar items to render when the video is selected in the editor.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.VideoToolbarItemModel"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Link">
            <summary>
            Gets or sets the quick toolbar items to render when a link is selected in the editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.ShowOnRightClick">
            <summary>
            Gets or sets whether the quick to open a quick toolbar on the right click or not.
            </summary>
            <value>
            <c>true</c>, if the quick toolbar open on right click; otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Table">
            <summary>
            Gets or sets the quick toolbar items to render when the table is selected in the editor.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.TableToolbarItemModel"/>
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings">
            <summary>
            A class that represents Rich Text Editor component table properties.
            </summary>
            <remarks>
            You can configure the table dimensions and styles by specifying the value to the corresponding property.
            </remarks>
            <example>
            In the following code example, configure the <c>Width</c>, <c>MinWidth</c>, <c>MaxWidth</c>, and <c>EnableResize</c> properties added using the <see cref="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings"/> tag directive.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorTableSettings MinWidth="200px" MaxWidth="800px" EnableResize="true" Width="500px" />
                <RichTextEditorToolbarSettings Items = "@Tools" />
            </SfRichTextEditor>
            @code {
                    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                    {
                        new ToolbarItemModel() { Command = ToolbarCommand.CreateTable }
                    };
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.MaxWidth">
            <summary>
            Gets or sets the maximum width constraint of the table.
            </summary>
            <value>
            A string value that represents the maximum width.
            </value>
            <remarks>
            To provide the maximum width value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.MinWidth">
            <summary>
            Gets or sets the minimum width constraint of the table.
            </summary>
            <value>
            A string value that represents the minimum width.
            </value>
            <remarks>
            To provide the minimum width value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.EnableResize">
            <summary>
            Gets or sets value indicating whether the table can be resized in the editor’s content.
            </summary>
            <value>
            <c>true</c>, if the table can be resized; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
            <remarks>
            You can resize maximum upto the <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.MaxWidth"/> value and maximum upto the <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.MinWidth"/> value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.Styles">
            <summary>
            Gets or sets custom styles for the selected table. The style changes the table’s appearance.
            </summary>
            <value>
             <see cref="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel"/>
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorTableSettings Styles="@StyleItems"/>
                <RichTextEditorToolbarSettings Items = "@Tools" />
            </SfRichTextEditor>
            @code {
                    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                    {
                        new ToolbarItemModel() { Command = ToolbarCommand.CreateTable }
                    };
                    private List<DropDownItemModel> StyleItems = new List<DropDownItemModel>() {
                        new DropDownItemModel() { Text = "Alternate Rows" }
                    };
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.Width">
            <summary>
            Gets or sets the width constraint of the table.
            </summary>
            <value>
            A string value that represents the width. The default value is <c>100%</c>.
            </value>
            <remarks>
            To provide the width value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorTableSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings">
            <summary>
            A class used for configuring the ToolbarSettings properties in Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.ChildContent">
            <summary>
            Gets or sets the content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.Enable">
            <summary>
            Specifies a value whether render the toolbar in Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.EnableFloating">
            <summary>
            Specifies whether to enable or disable the floating toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.Items">
            <summary>
            An array of string or object that is used to configure the toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.Type">
            <summary>
            Specifies the Toolbar display types.
            The possible types are:
            - Expand: Toolbar items will be placed within the available space and rest of the items will be placed in the extended menu section.
            - MultiRow: Toolbar which is placed at top of Rich Text Editor editing area.
            - Scrollable: All the toolbar items will be displayed in a single line with horizontal scrolling enabled.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings">
            <summary>
            A class used for configuring the video settings in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.AllowedTypes">
            <summary>
            Gets or sets the an video extensions that populate the allowed type of audio on browse.
            </summary>
            <value>
            The list of video types that are allowed to be uploaded. The default values are <c>.wmv</c>, <c>.mp4</c>, <c>.mov</c>, <c>.avi</c>. 
            </value>
            <remarks>
            The File Browser allows secified extenions video files and restricts uploading of other types of files.
            </remarks>
            <example>
            The following code example allows uploading only for mp4 and avi video files.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <RichTextEditorToolbarSettings Items = "@Tools" />
                <RichTextEditorVideoSettings AllowedTypes="@TypeList" />
            </SfRichTextEditor>
            @code {
                List<string> TypeList = new List<string>() { ".mp4", ".avi" };
                private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
                {
                    new ToolbarItemModel() { Command = ToolbarCommand.Video }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MaxHeight">
            <summary>
            Gets or sets the maximum height constraint of the video element.
            </summary>
            <value>
            A string value that represents the maximum height.
            </value>
            <remarks>
            To provide the maximum height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MaxWidth">
            <summary>
            Gets or sets the maximum width constraint of the video element.
            </summary>
            <value>
            A string value that represents the maximum width.
            </value>
            <remarks>
            To provide the maximum width value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MinHeight">
            <summary>
            Gets or sets the minimum height constraint of the video element.
            </summary>
            <value>
            A string value that represents the minimum height.
            </value>
            <remarks>
            To provide the minimum height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MinWidth">
            <summary>
            Gets or sets the minimum width constraint of the video element.
            </summary>
            <value>
            A string value that represents the minimum width.
            </value>
            <remarks>
            To provide the minimum height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.EnableResize">
            <summary>
            Gets or sets value indicating whether the video element can be resized in the editor's content.
            </summary>
            <value>
            <c>true</c>, if the video can be resized; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
            <remarks>
            You can resize video width, maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MaxWidth"/> value and maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MinWidth"/> value. 
            Same as resize video height maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MaxHeight"/> value and maximum upto <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.MinHeight"/> value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.ResizeByPercent">
            <summary>
            Gets or sets whether the video resizing should be enable percentage calculation.
            </summary>
            <value>
            <c>true</c>, if the video can be resized based on percentage calculation; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.RichTextEditorVideoSettings.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.ColorValue">
            <summary>
            Specifies the ColorValue Class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ColorValue.Hex">
            <summary>
            Specifies the Hex color value property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ColorValue.Rgba">
            <summary>
            Specifies the Rgba color value property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.LinkFormModel">
            <summary>
            Specifies the LinkFormModel Class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.LinkFormModel.Url">
            <summary>
            Specifies the link Url property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.LinkFormModel.Text">
            <summary>
            Specifies the link text property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.LinkFormModel.Title">
            <summary>
            Specifies the link title property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.LinkFormModel.Target">
            <summary>
            Specifies the link target property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.EditTableModel">
            <summary>
            Specifies the EditTableModel class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.EditTableModel.Width">
            <summary>
            Specifies the width property of the table.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.EditTableModel.Padding">
            <summary>
            Specifies the padding property of the table.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.EditTableModel.Spacing">
            <summary>
            Specifies the spacing property of the table.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel">
            <summary>
            Specifies the ShowDialogModel class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.Url">
            <summary>
            Specifies the Url property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.Mode">
            <summary>
            Specifies the Mode property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.Width">
            <summary>
            Specifies the Width property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.Height">
            <summary>
            Specifies the Height property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.NewWindow">
            <summary>
            Specifies the NewWindow property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.AltText">
            <summary>
            Specifies the AltText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel.MaxWidth">
            <summary>
            Specifies the MaxWidth property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.UndoRedoStatus">
            <summary>
            Specifies the UndoRedoStatus class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.UndoRedoStatus.Undo">
            <summary>
            Specifies the Undo status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.UndoRedoStatus.Redo">
            <summary>
            Specifies the Redo status.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.DeviceModel">
            <summary>
            Specifies the DeviceModel class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.DeviceModel.IsDevice">
            <summary>
            Specifies the IsDevice.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.DeviceModel.IsIDevice">
            <summary>
            Specifies the IsIDevice.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.ToolsItems">
            <summary>
            Specifies the ToolsItems class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ToolsItems.Key">
            <summary>
            Specifies the key of the toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ToolsItems.Value">
            <summary>
            Specifies the value of the toolbar items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.PasteEventModel">
            <summary>
            Specifies the PasteEventModel class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.PasteEventModel.Type">
            <summary>
            Specifies the Type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.AudioDialog">
            <summary>
            Specifies the Audio Class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.AudioDialog.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.AudioDialog.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.Image">
            <summary>
            Specifies the Image Class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Image.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Image.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.ImageUploadPopup">
            <summary>
            Specifies the ImageUploadPopup Class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.ImageUploadPopup.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.Link">
            <summary>
            Specifies the link class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Link.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.PasteCleanUp">
            <summary>
            Specifies the PasteCleanUp class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.PasteCleanUp.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.QuickToolbar`1">
            <summary>
            Specifies the QuickToolBar class.
            </summary>
            <typeparam name="TValue">Represents the QuickToolbar items type.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.QuickToolbar`1.Id">
            <summary>
            Specifies the id of the quicktoolbar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.QuickToolbar`1.Type">
            <summary>
            Specifies the quicktoolbar type.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.QuickToolbar`1.Items">
            <summary>
            Specifies the items in the quicktoolbar.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.CreateTablePopup">
            <summary>
            Specifies the create table popup class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.CreateTablePopup.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.Table">
            <summary>
            Specifies the table class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Table.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.MainToolbar">
            <summary>
            Specifies the main toolbar class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar">
            <summary>
            Specifies the toolbar class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.Classes">
            <summary>
            Specifies the classes of the toolbar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.Container">
            <summary>
            Specifies the container element of the toolbar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.Id">
            <summary>
            Specifies the id of the toolbar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.Items">
            <summary>
            Specifies the items in the toolbar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.Mode">
            <summary>
            Specifies the toolbar mode.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Toolbar.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.ToolbarConfig">
            <summary>
            Specifies the toolbar configuration class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.ToolbarConfig.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.ToolbarConfig.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.ToolbarConfig.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.VideoDialog">
            <summary>
            Specifies the Video Class.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.VideoDialog.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.VideoDialog.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.Color">
            <summary>
            Specifies the color(font and background color) class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Color.Container">
            <summary>
            Specifies the color container element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Color.ItemData">
            <summary>
            Specifies the item data of the color.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.Color.ItemName">
            <summary>
            Specifies the item name of the color.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.Color.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.DropDownButton">
            <summary>
            Specifies the Dropdown button class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.DropDownButton.Container">
            <summary>
            Specifies the container element of the dropdown button.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.DropDownButton.Item">
            <summary>
            Specifies the dropdown item.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.DropDownButton.ToolbarName">
            <summary>
            Specifies the toolbar name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.Internal.DropDownButton.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.EditorContent">
            <summary>
            Specifies the content class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Internal.ListDropDownButton">
            <summary>
            Specifies the ListDropDownButton class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ListDropDownButton.Container">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ListDropDownButton.Item">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Internal.ListDropDownButton.ToolbarName">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.EditorMode">
            <summary>
            Specifies which type of content is to be edited in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.EditorMode.HTML">
            <summary>
            The Rich Text Editor allows to edit HTML markup content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.EditorMode.Markdown">
            <summary>
            The Rich Text Editor allow to edit Markdown content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.EnterKeyTag">
            <summary>
            Specifies a tag to be used in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component when the enter Key is pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.EnterKeyTag.P">
            <summary>
            When the enter key is pressed a new &lt;p&gt; tag will be inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.EnterKeyTag.DIV">
            <summary>
            When the enter key is pressed a new &lt;div&gt; tag will be inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.EnterKeyTag.BR">
            <summary>
            When the enter key is pressed a new line break &lt;br&gt; tag will be inserted.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ShiftEnterKeyTag">
            <summary>
            Specifies a tag to be used in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component when the shift + enter Key is pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ShiftEnterKeyTag.BR">
            <summary>
            When the shift + enter key is pressed a new line break &lt;br&gt; tag will be inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ShiftEnterKeyTag.P">
            <summary>
            When the shift + enter key is pressed a new &lt;p&gt; tag will be inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ShiftEnterKeyTag.DIV">
             <summary>
            When the shift + enter key is pressed a new &lt;div&gt; tag will be inserted.
             </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ToolbarType">
            <summary>
            Specifies how to display toolbar items in <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component when the toolbar items exceeds container.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarType.Expand">
            <summary>
            Shows the number of Toolbar items that can be accommodated within the container space, and creates a expaned menu with the remaining items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarType.MultiRow">
            <summary>
            Wraps the toolbar items on multiple lines when the toolbar width exceeds the container space.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarType.Scrollable">
            <summary>
            Shows an scroll bar when the toolbar width exceeds the container space.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ActionOnScroll">
            <summary>
            Specifies how to display quick toolbar when scrolling the target-parent container.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ActionOnScroll.Hide">
            <summary>
            Hide the quick toolbar when scrolling the page or editor content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ActionOnScroll.None">
            <summary>
            Retain the quick toolbar when scrolling the page or editor content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.SaveFormat">
            <summary>
            Specifies the types to be used to save the image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.SaveFormat.Base64">
            <summary>
            Save the uploaded images as Base64 format.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.SaveFormat.Blob">
            <summary>
            Save the uploaded images as Blob format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageDisplay">
            <summary>
            Defines display of image in an editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageDisplay.Inline">
            <summary>
            When inserting an image into the editor and it inserts as an inline style.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageDisplay.Break">
            <summary>
            When inserting an image into the editor and it inserts as an break style.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DisplayLayoutOptions">
            <summary>
            Specifies the default display style for audio or video media files when inserted into the editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DisplayLayoutOptions.Inline">
            <summary>
            When inserting an audio or video media file into the editor and it inserts as an inline style.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DisplayLayoutOptions.Break">
            <summary>
            When inserting an audio or video media file into the editor and it inserts as a break style.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.CommandName">
            <summary>
            Defines the types to be used as the CommandName.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Bold">
            <summary>
            Defines the CommandName as Bold.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Italic">
            <summary>
            Defines the CommandName as Italic.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Underline">
            <summary>
            Defines the CommandName as Underline.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.StrikeThrough">
            <summary>
            Defines the CommandName as StrikeThrough.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Superscript">
            <summary>
            Defines the CommandName as Superscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Subscript">
            <summary>
            Defines the CommandName as Subscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Uppercase">
            <summary>
            Defines the CommandName as Uppercase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Lowercase">
            <summary>
            Defines CommandName as Lowercase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.FontColor">
            <summary>
            Defines the CommandName as FontColor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.FontName">
            <summary>
            Defines the CommandName as FontName.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.FontSize">
            <summary>
            Defines the CommandName as FontSize.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.BackgroundColor">
            <summary>
            Defines the CommandName as BackColor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.JustifyCenter">
            <summary>
            Defines the CommandName as JustifyCenter.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.JustifyFull">
            <summary>
            Defines the CommandName as JustifyFull.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.JustifyLeft">
            <summary>
            Defines the CommandName as JustifyLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.JustifyRight">
            <summary>
            Defines the CommandName as JustifyRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Undo">
            <summary>
            Defines the CommandName as Undo.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.CreateLink">
            <summary>
            Defines the CommandName as CreateLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.FormatBlock">
            <summary>
            Defines CommandName as FormatBlock.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Heading">
            <summary>
            Defines the CommandName as Heading.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Indent">
            <summary>
            Defines the CommandName as Indent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertHTML">
            <summary>
            Defines the CommandName as InsertHTML.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertOrderedList">
            <summary>
            Defines the CommandName as InsertOrderedList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertUnorderedList">
            <summary>
            Defines the CommandName as InsertUnorderedList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertParagraph">
            <summary>
            Defines the CommandName as InsertParagraph.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Outdent">
            <summary>
            Defines the CommandName as Outdent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.Redo">
            <summary>
            Defines the CommandName as Redo.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.RemoveFormat">
            <summary>
            Defines the CommandName as RemoveFormat.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertText">
            <summary>
            Defines the CommandName as InsertText.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertImage">
            <summary>
            Defines the CommandName as InsertImage.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertHorizontalRule">
            <summary>
            Defines the CommandName as InsertHorizontalRule.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertBrOnReturn">
            <summary>
            Defines the CommandName as InsertBrOnReturn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertCode">
            <summary>
            Defines the CommandName as InsertCode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.InsertTable">
            <summary>
            Defines the CommandName as InsertTable.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.EditImage">
            <summary>
            Defines the CommandName as EditImage.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.CommandName.EditLink">
            <summary>
            Defines the CommandName as EditLink.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ToolbarCommand">
            <summary>
            Defines the types to be used to configure the toolbar items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Separator">
            <summary>
            Defines the ToolbarCommand as Separator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.HorizontalSeparator">
            <summary>
            Defines the ToolbarCommand as HorizontalSeparator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Bold">
            <summary>
            Defines the ToolbarCommand as Bold.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Italic">
            <summary>
            Defines the ToolbarCommand as Italic.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Underline">
            <summary>
            Defines the ToolbarCommand as Underline.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.StrikeThrough">
            <summary>
            Defines the ToolbarCommand as StrikeThrough.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.FontName">
            <summary>
            Defines the ToolbarCommand as FontName.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.FontSize">
            <summary>
            Defines the ToolbarCommand as FontSize.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.FontColor">
            <summary>
            Defines the ToolbarCommand as FontColor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.BackgroundColor">
            <summary>
            Defines the ToolbarCommand as BackgroundColor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.LowerCase">
            <summary>
            Defines the ToolbarCommand as LowerCase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.UpperCase">
            <summary>
            Defines the ToolbarCommand as UpperCase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.SuperScript">
            <summary>
            Defines the ToolbarCommand as SuperScript.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.SubScript">
            <summary>
            Defines the ToolbarCommand as SubScript.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Formats">
            <summary>
            Defines the ToolbarCommand as Formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.NumberFormatList">
            <summary>
            Defines the ToolbarCommand as NumberFormatList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.BulletFormatList">
            <summary>
            Defines the ToolbarCommand as BulletFormatList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Alignments">
            <summary>
            Defines the ToolbarCommand as Alignments.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.UnorderedList">
            <summary>
            Defines the ToolbarCommand as UnorderedList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.OrderedList">
            <summary>
            Defines the ToolbarCommand as OrderedList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Outdent">
            <summary>
            Defines the ToolbarCommand as Outdent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Indent">
            <summary>
            Defines the ToolbarCommand as Indent.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.CreateTable">
            <summary>
            Defines the ToolbarCommand as CreateTable.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.CreateLink">
            <summary>
            Defines the ToolbarCommand as CreateLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Image">
            <summary>
            Defines the ToolbarCommand as Image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Audio">
            <summary>
            Defines the ToolbarCommand as Audio.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Video">
            <summary>
            Defines the ToolbarCommand as Video.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.ClearFormat">
            <summary>
            Defines the ToolbarCommand as ClearFormat.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Print">
            <summary>
            Defines the ToolbarCommand as Print.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.SourceCode">
            <summary>
            Defines the ToolbarCommand as SourceCode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.FullScreen">
            <summary>
            Defines the ToolbarCommand as FullScreen.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Undo">
            <summary>
            Defines the ToolbarCommand as Undo.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Redo">
            <summary>
            Defines the ToolbarCommand as Redo.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Maximize">
            <summary>
            Defines the ToolbarCommand as Maximize.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Minimize">
            <summary>
            Defines the ToolbarCommand as Minimize.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.Preview">
            <summary>
            Defines the ToolbarCommand as Preview.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.InsertCode">
            <summary>
            Defines the ToolbarCommand as InsertCode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ToolbarCommand.RemoveLink">
            <summary>
            Defines the ToolbarCommand as RemoveLink.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.LinkToolbarCommand">
            <summary>
            Defines types to be used to configure the toolbar items in Link Quick Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.LinkToolbarCommand.Open">
            <summary>
            Defines the LinkToolbarCommand as Open.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.LinkToolbarCommand.Edit">
            <summary>
            Defines the LinkToolbarCommand as Edit.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.LinkToolbarCommand.UnLink">
            <summary>
            Defines the LinkToolbarCommand as UnLink.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand">
            <summary>
            Defines types to be used to configure the toolbar items in Image Quick Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.HorizontalSeparator">
            <summary>
            Defines the ImageToolbarCommand as HorizontalSeparator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.Replace">
            <summary>
            Defines the ImageToolbarCommand as Replace.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.Align">
            <summary>
            Defines the ImageToolbarCommand as Align.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.Caption">
            <summary>
            Defines the ImageToolbarCommand as Caption.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.Remove">
            <summary>
            Defines the ImageToolbarCommand as Remove.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.InsertLink">
            <summary>
            Defines the ImageToolbarCommand as InsertLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.OpenImageLink">
            <summary>
            Defines the ImageToolbarCommand as OpenImageLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.EditImageLink">
            <summary>
            Defines the ImageToolbarCommand as EditImageLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.RemoveImageLink">
            <summary>
            Defines the ImageToolbarCommand as RemoveImageLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.Display">
            <summary>
            Defines the ImageToolbarCommand as Display.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.AltText">
            <summary>
            Defines the ImageToolbarCommand as AltText.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.Dimension">
            <summary>
            Defines the ImageToolbarCommand as Dimension.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.AudioToolbarCommand">
            <summary>
            Defines types to be used to configure the toolbar items in Audio Quick Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.AudioToolbarCommand.AudioReplace">
            <summary>
            Defines the AudioToolbarCommand as Replace.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.AudioToolbarCommand.AudioRemove">
            <summary>
            Defines the AudioToolbarCommand as Remove.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.AudioToolbarCommand.AudioLayoutOption">
            <summary>
            Defines the AudioToolbarCommand as Display.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand">
            <summary>
            Defines types to be used to configure the toolbar items in Video Quick Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand.HorizontalSeparator">
            <summary>
            Defines the VideoToolbarCommand as HorizontalSeparator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand.VideoReplace">
            <summary>
            Defines the VideoToolbarCommand as Replace.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand.VideoAlign">
            <summary>
            Defines the VideoToolbarCommand as Align.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand.VideoRemove">
            <summary>
            Defines the VideoToolbarCommand as Remove.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand.VideoLayoutOption">
            <summary>
            Defines the VideoToolbarCommand as Display.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.VideoToolbarCommand.VideoDimension">
            <summary>
            Defines the VideoToolbarCommand as Dimension.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand">
            <summary>
            Defines the types to be used to configure the toolbar items in the Table Quick Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.HorizontalSeparator">
            <summary>
            Defines the TableToolbarCommand as HorizontalSeparator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableHeader">
            <summary>
            Defines the TableToolbarCommand as TableHeader.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableRows">
            <summary>
            Defines the TableToolbarCommand as TableRows.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableColumns">
            <summary>
            Defines the TableToolbarCommand as TableColumns.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.BackgroundColor">
            <summary>
            Defines the TableToolbarCommand as BackgroundColor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableRemove">
            <summary>
            Defines the TableToolbarCommand as TableRemove.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.Alignments">
            <summary>
            Defines the TableToolbarCommand as Alignments.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableCellVerticalAlign">
            <summary>
            Defines the TableToolbarCommand as TableCellVerticalAlign.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.Styles">
            <summary>
            Defines the TableToolbarCommand as Styles.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableEditProperties">
            <summary>
            Defines the TableToolbarCommand as TableEditProperties.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.TableToolbarCommand.TableCell">
            <summary>
            Defines the TableToolbarCommand as TableCell.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DialogType">
            <summary>
            Defines the type of dialog that opens or closes in the Rich Text Editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DialogType.InsertLink">
            <summary>
            Defines the DialogType as InsertLink.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DialogType.InsertImage">
            <summary>
            Defines the DialogType as InsertImage.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DialogType.InsertAudio">
            <summary>
            Defines the DialogType as InsertAudio.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DialogType.InsertVideo">
            <summary>
            Defines the DialogType as InsertVideo.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.RichTextEditor.DialogType.InsertTable">
            <summary>
            Defines the DialogType as InsertTable.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DestroyedEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Destroyed"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DialogOpenEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.DialogOpened"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.QuickToolbarEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.QuickToolbarClosed"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ActionBeginEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnActionBegin"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ActionBeginEventArgs.Cancel">
            <summary>
            Gets or sets whether the current action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ActionBeginEventArgs.RequestType">
            <summary>
            Gets the current action or command name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ActionCompleteEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnActionComplete"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ActionCompleteEventArgs.EditorMode">
            <summary>
            Gets the types of editor mode either HTML or Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ActionCompleteEventArgs.RequestType">
            <summary>
            Gets the current action or command name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.AfterImageDeleteEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ImageDelete"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.MediaDeletedEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.MediaDeleted"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MediaDeletedEventArgs.Src">
            <summary>
            Gets the src attribute of the deleted media element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.BeforeQuickToolbarOpenArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnQuickToolbarOpen"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.BeforeQuickToolbarOpenArgs.Cancel">
            <summary>
            Gets or sets whether the quick toolbar open action should be canceled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.BlurEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Blur"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.BlurEventArgs.IsInteracted">
            <summary>
            Gets the information about whether the <c>Blur</c> event is invoked by user interaction or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ChangeEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ValueChange"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ChangeEventArgs.Value">
            <summary>
            Gets updated value of the Rich Text Editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DialogCloseEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.DialogClosed"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DialogCloseEventArgs.Cancel">
            <summary>
            Gets or sets whether the editor dialogs should be closed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DialogCloseEventArgs.IsInteracted">
            <summary>
            Gets the information about whether the <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.DialogClosed"/> event is invoked by user interaction or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.FocusEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.Focus"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FocusEventArgs.IsInteracted">
            <summary>
            Gets the information about whether the <c>Focus</c> event is invoked by user interaction or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageFailedEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageUploadFailed"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.FileUploadFailedEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploadFailed"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadFailedEventArgs.File">
            <summary>
            Gets the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadFailedEventArgs.Operation">
            <summary>
            Gets the file upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadFailedEventArgs.Response">
            <summary>
            Gets or sets the file upload event response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadFailedEventArgs.StatusText">
            <summary>
            Gets the upload file status.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageSuccessEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageUploadSuccess"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.FileUploadSuccessEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploadSuccess"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadSuccessEventArgs.File">
            <summary>
            Gets the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadSuccessEventArgs.Operation">
            <summary>
            Gets the file upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadSuccessEventArgs.Response">
            <summary>
            Gets or sets the file upload request response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadSuccessEventArgs.StatusText">
            <summary>
            Gets the file upload status message or text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageUploadingEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.BeforeUploadImage"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploading"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs.Cancel">
            <summary>
            Gets or sets whether the file upload action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs.CurrentRequest">
            <summary>
            Gets or sets the XMLHttpRequest instance that is associated with the upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs.CustomFormData">
            <summary>
            Gets or set the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadingEventArgs.FilesData">
            <summary>
            Gets the list of file will upload.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ResizeArgs">
            <summary>
            Provides information about <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnResizeStart"/> or <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnResizeStop"/> events being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResizeArgs.Cancel">
            <summary>
            Gets or sets whether the element resize action should be cancel or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResizeArgs.RequestType">
            <summary>
            Gets the whether the element resize start or resize stop event raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ResourcesModel">
            <summary>
            Provides option to configure additional scripts and CSS styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResourcesModel.Scripts">
            <summary>
            Specifies scripts that inject into the iframe.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResourcesModel.Styles">
            <summary>
            Specifies styles that inject into the iframe.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ResponseEventArgs">
            <summary>
            Provides information about <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageUploadSuccess"/> and <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageUploadFailed"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResponseEventArgs.Headers">
            <summary>
            Gets or sets the header's information of the uploaded image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResponseEventArgs.ReadyState">
            <summary>
            Gets or sets the uploaded image ReadyState information.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResponseEventArgs.StatusCode">
            <summary>
            Gets or sets the uploaded image StatusCode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResponseEventArgs.StatusText">
            <summary>
            Gets or sets the uploaded image StatusText.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ResponseEventArgs.WithCredentials">
            <summary>
            Gets or sets the credentials status of the uploaded image.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ToolbarClickEventArgs">
            <summary>
            Provides information about <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnToolbarClick"/> events being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarClickEventArgs.Cancel">
            <summary>
            Gets or sets the whether the toolbar click action should be calcel or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarClickEventArgs.Item">
            <summary>
            Gets the current toolbar Item data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarClickEventArgs.RequestType">
            <summary>
            Gets the request type of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ToolbarStatusEventArgs">
            <summary>
            Provides information about <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.UpdatedToolbarStatus"/> events being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarStatusEventArgs.Html">
            <summary>
            Gets the Html editor toolbar items status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarStatusEventArgs.Markdown">
            <summary>
            Gets the Markdown editor toolbar items status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarStatusEventArgs.Redo">
            <summary>
            Gets the Redo tool current status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarStatusEventArgs.Undo">
            <summary>
            Gets the Undo tool current status.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.HtmlStatus">
            <summary>
            Provides toolbar status data for the HTML mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.Bold">
            <summary>
            Defines the Bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.Italic">
            <summary>
            Defines the Italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.SuperScript">
            <summary>
            Defines the SuperScript.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.SubScript">
            <summary>
            Defines the SubScript.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.StrikeThrough">
            <summary>
            Defines the StrikeThrough.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.OrderedList">
            <summary>
            Defines the OrderedList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.UnorderedList">
            <summary>
            Defines the UnorderedList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.Underline">
            <summary>
            Defines the Underline.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.Alignments">
            <summary>
            Defines the Alignments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.BackgroundColor">
            <summary>
            Defines the BackgroundColor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.FontColor">
            <summary>
            Defines the FontColor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.FontName">
            <summary>
            Defines the FontName.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.FontSize">
            <summary>
            Defines the FontSize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.Formats">
            <summary>
            Defines the Formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.CreateLink">
            <summary>
            Defines the CreateLink.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.HtmlStatus.InsertCode">
            <summary>
            Defines the InsertCode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.MarkdownStatus">
            <summary>
            Provides toolbar status data for the Markdown mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.Bold">
            <summary>
            Defines the Bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.Italic">
            <summary>
            Defines the Italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.SuperScript">
            <summary>
            Defines the SuperScript.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.SubScript">
            <summary>
            Defines the SubScript.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.StrikeThrough">
            <summary>
            Defines the StrikeThrough.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.OrderedList">
            <summary>
            Defines the OrderedList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.UnorderedList">
            <summary>
            Defines the UnorderedList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.UpperCase">
            <summary>
            Defines the UpperCase.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.LowerCase">
            <summary>
            Defines the LowerCase.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.InlineCode">
            <summary>
            Defines the InlineCode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.MarkdownStatus.Formats">
            <summary>
            Defines the Formats.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption">
            <summary>
            Provides information about an ExecuteCommandOption.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption.Undo">
            <summary>
            Defines the CommandName as Undo.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.BeforeImageDropEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.OnImageDrop"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.BeforeImageDropEventArgs.Cancel">
            <summary>
            Gets or sets whether the image drop action should be canceled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ToolbarItemModel">
            <summary>
            Provides information about the toolbar items added in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarItemModel.CssClass">
            <summary>
            Gets or sets the CSS class that can be added to each toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarItemModel.Command">
            <summary>
            Gets or sets the command name of the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarItemModel.Name">
            <summary>
            Gets or sets the template name of the custom toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ToolbarItemModel.TooltipText">
            <summary>
            Gets or sets the tooltip text of the toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.LinkToolbarItemModel">
            <summary>
            The class is used to configure quick toolbar items on the links in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkToolbarItemModel.CssClass">
            <summary>
            Gets or sets the CSS class that can be added to link quick toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkToolbarItemModel.Command">
            <summary>
            Gets or sets the command name of the link quick toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkToolbarItemModel.TooltipText">
            <summary>
            Gets or sets the command name of the link quick toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageToolbarItemModel">
            <summary>
            The class is used to configure quick toolbar items on the image in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageToolbarItemModel.CssClass">
            <summary>
            Gets or sets the CSS class that can be added to image quick toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageToolbarItemModel.Command">
            <summary>
            Gets or sets the command name of the image quick toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageToolbarItemModel.TooltipText">
            <summary>
            Gets or sets the command name of the image quick toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.AudioToolbarItemModel">
            <summary>
            The class is used to configure quick toolbar items on the audio in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.AudioToolbarItemModel.CssClass">
            <summary>
            Gets or sets the CSS class that can be added to audio quick toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.AudioToolbarItemModel.Command">
            <summary>
            Gets or sets the command name of the audio quick toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.AudioToolbarItemModel.TooltipText">
            <summary>
            Gets or sets the command name of the audio quick toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.VideoToolbarItemModel">
            <summary>
            The class is used to configure quick toolbar items on the video in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoToolbarItemModel.CssClass">
            <summary>
            Gets or sets the CSS class that can be added to video quick toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoToolbarItemModel.Command">
            <summary>
            Gets or sets the command name of the video quick toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoToolbarItemModel.TooltipText">
            <summary>
            Gets or sets the command name of the video quick toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.TableToolbarItemModel">
            <summary>
            The class is used to configure quick toolbar items on the table in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.TableToolbarItemModel.CssClass">
            <summary>
            Gets or sets the CSS class that can be added to table quick toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.TableToolbarItemModel.Command">
            <summary>
            Gets or sets the command name of the table quick toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.TableToolbarItemModel.TooltipText">
            <summary>
            Gets or sets the command name of the table quick toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.Item">
            <summary>
            The class is used to configure the current toolbar Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Item.Id">
            <summary>
            Gets or sets the Id of the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Item.Icon">
            <summary>
            Gets or sets the Icon of the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Item.Command">
            <summary>
            Gets or sets the Command name of the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Item.SubCommand">
            <summary>
            Gets or sets the sub command name of the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Item.Tooltip">
            <summary>
            Gets or sets the tooltip name of the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.Item.Value">
            <summary>
            Gets or sets the value of the toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.DropDownItemModel">
            <summary>
            The class is used to configure drop down toolbar items in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.CssClass">
            <summary>
            Gets or sets the CSS class of the dropdown toolbar item to customize it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.Command">
            <summary>
            Gets or sets the command name of the dropdown toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.IconCss">
            <summary>
            Gets or sets a CSS class string to include an icon or image for the dropdown toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.SubCommand">
            <summary>
            Gets or sets the sub command of the dropdown toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.Value">
            <summary>
            Gets or sets the value of the dropdown toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.Text">
            <summary>
            Gets or sets the text of the dropdown toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.DropDownItemModel.ListImage">
            <summary>
            Gets or sets the listImage of the list dropdown toolbar item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs">
            <summary>
            The class is used to configure image settings in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs.Url">
            <summary>
            Gets or sets the Url to be set in the image's src attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs.Width">
            <summary>
            Gets or sets the Width of the image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs.Height">
            <summary>
            Gets or sets the Height of the image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs.AltText">
            <summary>
            Gets or sets the alternate text attribute of the image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs.CssClass">
            <summary>
            Gets or sets the class name to be added to the image to customize it.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.AudioCommandsArgs">
            <summary>
            The class is used to configure audio settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.AudioCommandsArgs.Url">
            <summary>
            Gets or sets the src attribute of the audio.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.AudioCommandsArgs.CssClass">
            <summary>
            Gets or sets the class name to be added to the audio to customize it.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.VideoCommandsArgs">
            <summary>
            The class is used to configure video settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoCommandsArgs.Url">
            <summary>
            Gets or sets the src attribute of the video.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoCommandsArgs.Width">
            <summary>
            Gets or sets the Width of the video tag.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoCommandsArgs.Height">
            <summary>
            Gets or sets the Height of the video tag.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.VideoCommandsArgs.CssClass">
            <summary>
            Gets or sets the class name to be added to the video to customize it.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs">
            <summary>
            The class is used to configure link settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs.Url">
            <summary>
            Gets or sets the Url attribute of the link tag.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs.Title">
            <summary>
            Gets or sets the title of the link to be inserted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs.Text">
            <summary>
            Gets or set the text of the link to be inserted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs.Target">
            <summary>
            Gets or sets the target attribute of the link.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.TableCommandsArgs">
            <summary>
            The class is used to configure table settings in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.TableCommandsArgs.Rows">
            <summary>
            Gets or sets the number of rows to be inserted in the table.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.TableCommandsArgs.Columns">
            <summary>
            Gets or sets the number of columns to be inserted in the table.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.TableCommandsArgs.Width">
            <summary>
            Gets or sets the width of the table.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.PasteCleanupArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.BeforePasteCleanup"/> event being raised..
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.PasteCleanupArgs.Value">
            <summary>
            Gets or sets the updated value of the Rich Text Editor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.CommandsWidth">
            <summary>
            Provides settings to change the width of inserted image or video in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.CommandsWidth.MinWidth">
            <summary>
            Gets or sets the MinWidth.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.CommandsWidth.MaxWidth">
            <summary>
            Gets or sets the MaxWidth.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.CommandsWidth.Width">
            <summary>
            Gets or sets the Width.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.CommandsHeight">
            <summary>
            Provides settings to change the height of inserted image in the Rich Text Editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.CommandsHeight.MinHeight">
            <summary>
            Gets or sets the MinHeight.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.CommandsHeight.MaxHeight">
            <summary>
            Gets or sets the MaxHeight.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.CommandsHeight.Height">
            <summary>
            Gets or sets the Height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ShortcutKeys">
            <summary>
            Defines the ShortcutKeys.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.ToolbarFocus">
            <summary>
            Defines the ToolbarFocus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.InsertLink">
            <summary>
            Defines the InsertLink.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.InsertImage">
            <summary>
            Defines the InsertImage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.InsertTable">
            <summary>
            Defines the InsertTable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Undo">
            <summary>
            Defines the Undo.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Redo">
            <summary>
            Defines the Redo.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Copy">
            <summary>
            Defines the Copy.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Cut">
            <summary>
            Defines the Cut.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Paste">
            <summary>
            Defines the Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Bold">
            <summary>
            Defines the Bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Italic">
            <summary>
            Defines the Italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Underline">
            <summary>
            Defines the Underline.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.StrikeThrough">
            <summary>
            Defines the StrikeThrough.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.UpperCase">
            <summary>
            Defines the UpperCase.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.LowerCase">
            <summary>
            Defines the LowerCase.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.SuperScript">
            <summary>
            Defines the SuperScript.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.SubScript">
            <summary>
            Defines the SubScript.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Indents">
            <summary>
            Defines the Indents.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.Outdents">
            <summary>
            Defines the Outdents.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.HtmlSource">
            <summary>
            Defines the HtmlSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.FullScreen">
            <summary>
            Defines the FullScreen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.JustifyCenter">
            <summary>
            Defines the JustifyCenter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.JustifyFull">
            <summary>
            Defines the JustifyFull.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.JustifyLeft">
            <summary>
            Defines the JustifyLeft.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.JustifyRight">
            <summary>
            Defines the JustifyRight.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.ClearFormat">
            <summary>
            Defines the ClearFormat.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.OrderedList">
            <summary>
            Defines the OrderedList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ShortcutKeys.UnorderedList">
            <summary>
            Defines the UnorderedList.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.ImageUploadChangeEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ImageUploadChange"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageUploadChangeEventArgs.Files">
            <summary>
            Get the list of image files that will be uploaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.ImageUploadChangeEventArgs.ImageUrl">
            <summary>
            Get or set the image URL which inserts into the editor content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.FileUploadChangeEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.FileUploadChange"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadChangeEventArgs.Files">
            <summary>
            Get the list of media files that will be uploaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.FileUploadChangeEventArgs.FileUrl">
            <summary>
            Get or set the media URL which inserts into the editor content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor">
            <summary>
            The Blazor Rich Text Editor is a feature-rich WYSIWYG HTML editor and WYSIWYG Markdown editor.
            The Rich Text Editor is widely used to create blogs, forum posts, notes sections, support
            tickets (incidents), comment sections, messaging applications, and more.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ID">
            <summary>
            Gets or sets the unique identifier for <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            You can specify only unique value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ChildContent">
            <summary>
            Gets or Sets the child content for the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <value>
            The template content. The default value in <c>null</c>.
            </value>
            <example>
            In the following code example, the content has been set to the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> using the <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ChildContent"/> property.
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor>
                <p> The Rich Text Editor component is a <b>WYSIWYG</b>("what you see is what you get") editor.</p>
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.DeniedSanitizeSelectors">
            <summary>
            Gets or sets the list of denied attributes preventing when pasting into the editor.
            </summary>
            <value>
            Accepts the array of string values. The default value is empty array.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CssClass">
            <summary>
            Gets or sets the classes for <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component to customize the appearance.
            One or more custom CSS classes can be added.
            </summary>
            <value>
            Accepts a CSS classes string separated by space to customize the appearance of the editor. The default value is <c>String.Empty</c>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EditorMode">
            <summary>
            Gets or sets a value that indicates the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> allows to edit and formatting the HTML or Markdown content.
            </summary>
            <value>
            One of the <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EditorMode"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.EditorMode.HTML"/>
            </value>
            <remarks>
            If the <c>EditorMode</c> is <c>HTML</c>, edit HTML markup content. 
            If the <c>EditorMode</c> is <c>Markdown</c>, edit the Markdown content with markdown syntax.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnterKey">
            <summary>
            Gets or sets a tag value that will be inserted when ENTER key is pressed.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.RichTextEditor.EnterKeyTag"/> enumeration values. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.EnterKeyTag.P"/>
            </value>
            <remarks>
            If the <c>EnterKey</c> is <c>EnterKeyTag.P</c>, new &lt;p&gt; tag will be inserted when ENTER key is pressed.
            If the <c>EnterKey</c> is <c>EnterKeyTag.DIV</c>, new &lt;div&gt; tag will be inserted when ENTER key is pressed.
            If the <c>EnterKey</c> is <c>EnterKeyTag.BR</c>, new &lt;br&gt; tag will be inserted when ENTER key is pressed.
            </remarks>
            <seealso cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShiftEnterKey"/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShiftEnterKey">
            <summary>
            Gets or sets a tag value that will be inserted when SHIFT + ENTER key is pressed.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.RichTextEditor.ShiftEnterKeyTag"/> enumeration values. The default value is <see cref="F:Syncfusion.Blazor.RichTextEditor.ShiftEnterKeyTag.BR"/>
            </value>
            <remarks>
            If the <c>ShiftEnterKey</c> is <c>ShiftEnterKeyTag.BR</c>, new &lt;br&gt; tag will be inserted when SHIFT + ENTER key is pressed.
            If the <c>ShiftEnterKey</c> is <c>ShiftEnterKeyTag.P</c>, new &lt;p&gt; tag will be inserted when SHIFT + ENTER key is pressed.
            If the <c>ShiftEnterKey</c> is <c>ShiftEnterKeyTag.DIV</c>, new &lt;div&gt; tag will be inserted when SHIFT + ENTER key is pressed.
            </remarks>
            <seealso cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnterKey"/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableAutoUrl">
            <summary>
            Gets or sets whether the hyperlinks URL will automatically convert to the absolute path URL by prefixing `https://` or not.
            </summary>
            <value>
            <c>true</c>, if hyperliks URL will automatically added prefixing `https://`; otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableHtmlEncode">
            <summary>
            Gets or sets whether the source code is displayed with the HTML encoded format or not.
            </summary>
            <value>
            <c>true</c>, if the source code diaply with HTML encoded format; otherwise,<b>false</b>.The default value is <c>false</c>.
            </value>
            <remarks>
            The encoding option applies only to the HTML editor, not to Markdown.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableHtmlSanitizer">
            <summary>
            Gets or sets whether to allow the cross-scripting site attacks or not.
            </summary>
            <value>
            <c>true</c>, if the eidtor content disable the cross-scripting site attacks; otherwise,<b>false</b>.The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnablePersistence">
            <summary>
            Gets or sets whether to persist component's state between page reloads. When set to <c>true</c>, the <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Value" /> property is persisted
            </summary>
            <value>
            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.
            </value>
            <remarks>
            Component's <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Value"/> property will be stored in browser local storage to persist component's state when page reloads.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableResize">
            <summary>
            Gets or sets whether the Rich Text Editor content area allow to resize or not.
            </summary>
            <value>
            <c>true</c>, if the Rich Text Editor content area allows as resizable. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.AutoSaveOnIdle">
            <summary>
            Gets or sets whether the content is saved if the editor is idle for the number of milliseconds specified in the <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveInterval" /> property or not.
            </summary>
            <value>
             <c>true</c>, if the editor is idle for the number of milliseconds specified in the <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveInterval" /> property otherwise,<b>false</b>. The default value is <c>false</c>.
            </value>
             <seealso cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveInterval"/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableRtl">
            <summary>
            Gets or sets whether the right to left direction is enabled for <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <value>
            <c>true</c>, if the right to left direction is enabled for <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableTabKey">
            <summary>
            Gets or sets whether the Tab key action works within the editor content or not.
            </summary>
            <value>
            <c>true</c>, if the Tab key action works within the editor content otherwise,<b>false</b>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableXhtml">
            <summary>
            Gets or sets whether the editor’s content is valid XHTML format or not. 
            </summary>
            <value>
            <c>true</c>, if the editor content is valid XHML format otherwise,<b>false</b>. The default value is <c>false</c>.
            </value>
            <remarks>
            To get valid XHTML format of content, use the public method <see cref="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetXhtmlAsync" />.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Enabled">
            <summary>
            Gets or sets whether the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component is enabled or not.
            </summary>
            <value>
            <c>true</c>, if the Rich Text Editor component is enabled. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.FloatingToolbarOffset">
            <summary>
            Gets or sets offset top value to preserves the toolbar of the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> on scrolling.
            </summary>
            <value>
            This property contains offset top value as double type. The default value is <c>0</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Height">
            <summary>
            Get or sets the height of the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <value>
            This property contains height value as string. The default value is <c>auto</c>. 
            </value>
            <remarks>
            To provide the height value in pixel or percent (%) as string type.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HtmlAttributes">
            <summary>
            Allows additional HTML attributes such as title, name, etc., and
            It will be accepts n number of attributes in a key-value pair format.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.KeyConfigure">
            <summary>
            Gets or sets the keyboard shortcuts key configuration in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.RichTextEditor.ShortcutKeys"/>
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor KeyConfigure="shortcutKeys">
            </SfRichTextEditor>
            @code {
                ShortcutKeys shortcutKeys = new ShortcutKeys() { Bold = "ctrl+d" };
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.MaxLength">
            <summary>
            Gets or sets the maximum number of characters allowed to type in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <value>
            The number of characters allowed to type in the editor. The default value is <c>-1</c>, means no limitation.
            </value>
            <remarks>
            While copy and pasting the content into the editor, allowed to paste <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.MaxLength" /> characters remaining will truncate.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor MaxLength="200" ShowCharCount=true>
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Placeholder">
            <summary>
            Gets or sets the text that is displayed when the component has no content and remove on the focus.
            </summary>
            <value>
            The text that is displayed when the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component has no content. The default value is <c>String.Empty</c>.
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor Placeholder="Start to type...">
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Readonly">
            <summary>
            Gets or sets a value indicating whether content in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component is read-only.
            </summary>
            <value>
            <c>true</c> if the Rich Text Editor component is read-only; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            When this property is set to <c>true</c>, the contents of the component cannot be changed by the user interaction. But, you can set the value of the <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Value" /> property in code.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveInterval">
            <summary>
            Gets or sets an interval time to automatically make a save request after a specified time in the editor.
            The change event will be triggered if the content was changed from the last saved interval.
            </summary>
            <value>
            The number of miliseconds of interval time to automatically make a save request in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>. The default is <c>10000</c> miliseconds.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.RichTextEditor.RichTextEditorEvents.ValueChange" /> event will be triggered with every save request if the content was changed in the editor from the last saved interval.
            </remarks>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor SaveInterval="1000">
            </SfRichTextEditor>
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.AutoSaveOnIdle"/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowCharCount">
            <summary>
            Gets or sets a value that shows or hides the character counter at the bottom of the editor.
            </summary>
            <value>
            <c>true</c> if the character counter shows at the bottom of the editor; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <seealso cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.MaxLength"/>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UndoRedoSteps">
            <summary>
            Gets or sets the number of undo and redo history steps count, which is stored in the undo and redo stack.
            </summary>
            <value>
            The number of steps to stored in the undo and redo stack. The default value is <c>30</c>.
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor UndoRedoSteps="50">
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UndoRedoTimer">
            <summary>
            Gets or sets the idle time in milliseconds stored in the undo stack after stopping typing in the editor.
            </summary>
            <value>
            The number of miliseconds of idle time to be stored in the undo stack after stop typing in the editor. The default is <c>300</c> miliseconds.
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor UndoRedoTimer="100">
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Value">
            <summary>
            Gets or sets the current content of the Rich Text Editor.
            </summary>
            <value>
            The content displayed in the Rich Text Editor component.
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor @bind-Value="rteValue">
            </SfRichTextEditor>
            @code {
                string rteValue = "<p> The Rich Text Editor component is a <b>WYSIWYG</b>('what you see is what you get') editor.</p>";
                 }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Width">
            <summary>
            Gets or sets the width of the Rich Text Editor.
            </summary>
            <value>
            The width of the component in pixels or percent (%) as string type. The default value is <c>100%</c>. 
            </value>
            <example>
            <code><![CDATA[
            @using Syncfusion.Blazor.RichTextEditor;
            <SfRichTextEditor Width="50%">
            </SfRichTextEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RichTextEditorParent">
            <summary>
            Parent component of RichTextEditor.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseDialogAsync(Syncfusion.Blazor.RichTextEditor.DialogType)">
            <summary>
            Closes the dialog in the Rich Text Editor component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.DisableToolbarItem(System.Collections.Generic.List{Syncfusion.Blazor.RichTextEditor.ToolbarCommand})">
            <summary>
            Disables the given toolbar items in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <param name="items">Specifies the list of toolbar items to be disabled.</param>
            <remarks>
            This method does not return a value.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableToolbarItem(System.Collections.Generic.List{Syncfusion.Blazor.RichTextEditor.ToolbarCommand})">
            <summary>
            Enables the given toolbar items in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <param name="items">Specifies the list of toolbar items to be enabled.</param>
            <remarks>
            This method does not return a value.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName)">
            <summary>
            Executes the specified commands.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName,System.String,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <summary>
            Executes the specified commands.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <param name="commandValue">Specifies the value to be applied or inserted when executing the command.</param>
            <param name="option">Specifies other options to be given when execution.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName,System.String,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.TableCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <summary>
            Executes the commands related to Table.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <param name="commandValue">Specifies the values like Rows ,Columns and Width of the table.</param>
            <param name="option">Specifies other options to be given when execution.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.TableCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <summary>
            Executes the commands related to Image.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <param name="commandValue">Specifies the values like Url ,Width, Height, AltText and CssClass of the image.</param>
            <param name="option">Specifies other options to be given when execution.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.AudioCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <summary>
            Executes the commands related to Audio.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <param name="commandValue">Specifies the values like Url and CssClass of the audio.</param>
            <param name="option">Specifies other options to be given when execution.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.VideoCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <summary>
            Executes the commands related to Video.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <param name="commandValue">Specifies the values like Url ,Width, Height, and CssClass of the video.</param>
            <param name="option">Specifies other options to be given when execution.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.ImageCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommandAsync(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <summary>
            Executes the commands related to Link.
            </summary>
            <param name="commandName">Specifies the name of the command to be executed.</param>
            <param name="commandValue">Specifies the values like Url ,Title, Text and Target of the link.</param>
            <param name="option">Specifies other options to be given when execution.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ExecuteCommand(Syncfusion.Blazor.RichTextEditor.CommandName,Syncfusion.Blazor.RichTextEditor.LinkCommandsArgs,Syncfusion.Blazor.RichTextEditor.ExecuteCommandOption)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.FocusAsync">
            <summary>
            Attempts to set focus to <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.FocusIn">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.FocusOutAsync">
            <summary>
            Blurs the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.FocusOut">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetCharCountAsync">
            <summary>
            Gets the number of characters in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <returns>The number of characters count.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetCharCount">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetSelectedHtmlAsync">
            <summary>
            Gets the HTML value of the selected content as a string.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetSelectedHtml">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetSelectionAsync">
            <summary>
            Retrieves the HTML markup content from currently selected content of the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/>.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetSelection">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetTextAsync">
            <summary>
            Gets the plain-text content of the editor’s value.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetText">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideInlineToolbarAsync">
            <summary>
            Hides the inline quick toolbar.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideInlineToolbar">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowDialogAsync(Syncfusion.Blazor.RichTextEditor.DialogType)">
            <summary>
            Shows the dialog in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <param name="type">Specifies the dialog name to be open.</param>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.PrintAsync">
            <summary>
            Prints the Rich Text Editor’s value.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.Print">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RefreshUIAsync">
            <summary>
            Refresh the view of the editor.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RefreshUI">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RemoveToolbarItem(System.Collections.Generic.List{Syncfusion.Blazor.RichTextEditor.ToolbarCommand})">
            <summary>
            Removes the given toolbar items from the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component.
            </summary>
            <param name="items">Specifies the list of toolbar items to be removed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SelectAllAsync">
            <summary>
            Selects all the content in the editor.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SelectAll">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowFullScreenAsync">
            <summary>
            Shows the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> component in full-screen mode.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowFullScreen">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowInlineToolbarAsync">
            <summary>
            Shows the inline quick toolbar.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowInlineToolbar">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowSourceCodeAsync">
            <summary>
            Shows the HTML and Markdown markup of the Rich Text Editor’s value.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowSourceCode">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveSelectionAsync">
            <summary>
            Save the current selection range in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> content.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.SaveSelection">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RestoreSelectionAsync">
            <summary>
            Restore the saved selection range in the <see cref="T:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor"/> content.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RestoreSelection">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetXhtmlAsync">
            <summary>
            Retrieves the Rich Text Editor's XHTML validated HTML content when <see cref="P:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.EnableXhtml"/> property is enabled.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.GetXhtml">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CreatedEvent">
            <summary>
            Method invoked when component has been rendere.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.FocusEvent(Syncfusion.Blazor.RichTextEditor.FocusEventArgs)">
            <summary>
            Method invoked for focus event.
            </summary>
            <param name="args">Specifies the focus event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.BlurEvent(Syncfusion.Blazor.RichTextEditor.BlurEventArgs)">
            <summary>
            Method invoked for blur event.
            </summary>
            <param name="args">Specifies the blur event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ActionBeginEvent(Syncfusion.Blazor.RichTextEditor.ActionBeginEventArgs)">
            <summary>
            Method invoked for ActionBegin event.
            </summary>
            <param name="args">Specifies the action begin event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ActionCompleteEvent(Syncfusion.Blazor.RichTextEditor.ActionCompleteEventArgs)">
            <summary>
            Method invoked for ActionComplete event.
            </summary>
            <param name="args">Specifies the action complete event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ChangeEvent">
            <summary>
            Method invoked for Change event.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ResizeStartEvent(Syncfusion.Blazor.RichTextEditor.ResizeArgs)">
            <summary>
            Method invoked for ResizeStart event.
            </summary>
            <param name="args">Specifies the resize args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.BeforeUpload(Syncfusion.Blazor.RichTextEditor.ImageUploadingEventArgs)">
            <summary>
            Method invoked for BeforeUploadImage event.
            </summary>
            <param name="args">Specifies the image upload event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.PasteImageUploadFailed(Syncfusion.Blazor.RichTextEditor.ImageFailedEventArgs)">
            <summary>
            Method invoked for OnImageUploadFailed event.
            </summary>
            <param name="args">Specifies the image failed event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.PasteImageUploadSuccess(Syncfusion.Blazor.RichTextEditor.ImageSuccessEventArgs)">
            <summary>
            Method invoked for OnImageUploadSuccess event.
            </summary>
            <param name="args">Specifies the image success event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.BeforePasteCleanUp(Syncfusion.Blazor.RichTextEditor.PasteCleanupArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.AfterPasteCleanUp(Syncfusion.Blazor.RichTextEditor.PasteCleanupArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ResizeStopEvent(Syncfusion.Blazor.RichTextEditor.ResizeArgs)">
            <summary>
            Method invoked for OnResizeStop event.
            </summary>
            <param name="args">Specifies the resize args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.AfterImageDeleteEvent(Syncfusion.Blazor.RichTextEditor.AfterImageDeleteEventArgs)">
            <summary>
            Method invoked for ImageDelete event.
            </summary>
            <param name="args">Specifies the AfterImageDeleteEvent arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.MediaDeleted(Syncfusion.Blazor.RichTextEditor.MediaDeletedEventArgs)">
            <summary>
            Method invoked for MediaDeleted event.
            </summary>
            <param name="args">Specifies the MediaDeletedEventArgs arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.BeforeQuickToolbarOpenEvent">
            <summary>
            Method invoked for OnQuickToolbarOpen event.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.QuickToolbarOpenEvent(System.String,System.String)">
            <summary>
            Method invoked for ImageDelete event.
            </summary>
            <param name="popupClass">Specifies the popup element classname.</param>
            <param name="type">Specifies the popup type.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.QuickToolbarCloseEvent">
            <summary>
            Method invoked for ImageDelete event.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UpdatedToolbarStatusEvent(Syncfusion.Blazor.RichTextEditor.ToolbarStatusEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.RefreshToolbarOverflow">
            <summary>
            Method invoked for refresh toolbar.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UpdateDeviceData(Syncfusion.Blazor.RichTextEditor.Internal.DeviceModel)">
            <summary>
            Method invoked for update device data.
            </summary>
            <param name="model">Specifies the DeviceModel arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowLinkDialog(Syncfusion.Blazor.RichTextEditor.Internal.LinkFormModel,System.String)">
            <summary>
            Method invoked for show link dialog.
            </summary>
            <param name="model">Specifies the LinkFormModel arguments.</param>
            <param name="mode">Specifies the mode.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseLinkDialog">
            <summary>
            Method invoked for close link dialog.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowImageDialog(Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel)">
            <summary>
            Method invoked for show image dialog.
            </summary>
            <param name="model">Specifies the ShowDialogModel arguments.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowAudioDialog(Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel)">
            <summary>
            Method invoked for show audio dialog.
            </summary>
            <param name="model">Specifies the ShowDialogModel arguments.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowVideoDialog(Syncfusion.Blazor.RichTextEditor.Internal.ShowDialogModel)">
            <summary>
            Method invoked for show video dialog.
            </summary>
            <param name="model">Specifies the ShowDialogModel arguments.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.PasteDialog">
            <summary>
            Method invoked for paste options dialog.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseImageDialog(System.String)">
            <summary>
            Method invoked for close image dialog.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseAudioDialog(System.String)">
            <summary>
            Method invoked for close audio dialog.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseVideoDialog(System.String)">
            <summary>
            Method invoked for close video dialog.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowEditTableDialog(Syncfusion.Blazor.RichTextEditor.Internal.EditTableModel,System.String)">
            <summary>
            Method invoked for show table dialog.
            </summary>
            <param name="model">Specifies the EditTableModel arguments.</param>
            <param name="mode">Specifies the mode.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowTableDialog">
            <summary>
            Method invoked for show table dialog.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseTableDialog">
            <summary>
            Method invoked for close table dialog.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowCreateTableDialog(System.Double,System.Double)">
            <summary>
            Method invoked for create and show table dialog.
            </summary>
            <param name="x">Specifies the x point.</param>
            <param name="y">Specifies the y point.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.CloseCreateTableDialog">
            <summary>
            Method invoked for close table dialog.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowInlinePopup(System.String)">
            <summary>
            Method invoked for show inline popup.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideInlinePopup">
            <summary>
            Method invoked for hide inline popup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowLinkPopup(System.String)">
            <summary>
            Method invoked for show inline popup.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideLinkPopup">
            <summary>
            Method invoked for hide inline popup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowImagePopup(System.String,System.String)">
            <summary>
            Method invoked for show image popup.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <param name="type">Specifies the popup type.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowAudioQuickToolbar(System.String,System.String)">
            <summary>
            Method invoked for show audio popup.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <param name="type">Specifies the popup type.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowVideoQuickToolbar(System.String,System.String)">
            <summary>
            Method invoked for show video popup.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <param name="type">Specifies the popup type.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideImagePopup">
            <summary>
            Method invoked for hide image popup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideAudioQuickToolbar">
            <summary>
            Method invoked for hide audio popup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideVideoQuickToolbar">
            <summary>
            Method invoked for hide video popup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowTablePopup(System.String)">
            <summary>
            Method invoked for show table popup.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideTablePopup">
            <summary>
            Method invoked for hide table popup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UpdateClass(System.String,System.String)">
            <summary>
            Method invoked for updating the popup class.
            </summary>
            <param name="popupClass">Specifies the popup element class name.</param>
            <param name="type">Specifies the popup type.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UpdateUndoRedoStatus(Syncfusion.Blazor.RichTextEditor.Internal.UndoRedoStatus)">
            <summary>
            Method invoked for update enable undo redo status.
            </summary>
            <param name="undoRedo">Specifies the UndoRedoStatus args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.UpdateValue(System.String)">
            <summary>
            Method invoked for update client side value.
            </summary>
            <param name="rteClientValue">Specifies the client side updated value.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ShowFullScreenClient">
            <summary>
            Method invoked for show toolbar on full screen.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.HideFullScreenClient">
            <summary>
            Method invoked for hide full screen.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.ViewSourceClient">
            <summary>
            Method invoked for view source preview.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.PreviewCodeClient">
            <summary>
            Method invoked for view code preview.
            </summary>
            <exclude/>
        </member>
    </members>
</doc>
