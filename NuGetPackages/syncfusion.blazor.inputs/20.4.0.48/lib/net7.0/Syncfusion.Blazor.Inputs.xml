<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.Inputs</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.Inputs.FloatLabelType">
            <summary>
            Defines floating label type of the input and decides how the label should float on the input.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Never">
            <summary>
            The placeholder text should not be float ever.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Always">
            <summary>
            The placeholder text floats above the input always.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Auto">
            <summary>
            The placeholder text floats above the input while focusing or enter a value in input.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.AutoComplete">
            <summary>
            Specifies whether the browser is allow to automatically enter or select a value for the textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.AutoComplete.On">
            <summary>
            Specifies that autocomplete is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.AutoComplete.Off">
            <summary>
            Specifies that autocomplete is disabled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.InputType">
            <summary>
            Define the attribute specifies the type of textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Text">
            <summary>
            The text field is a single-line text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Email">
            <summary>
            Set an e-mail type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Password">
            <summary>
            Set the password type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Number">
            <summary>
            Set the number type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Search">
            <summary>
            Set the search type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Tel">
            <summary>
            Set the tel type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.URL">
            <summary>
            Set the URL type to TextBox component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.SfInputBase">
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnPaste">
            <summary>
            Triggers when the content is paste into an input.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnBlur">
            <summary>
            Triggers when the input has focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BindClearBtnEvents">
            <summary>
            Triggers when the clear gets clicked.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BindClearBtnTouchEvents">
            <summary>
            Triggers when the clear icon gets touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseDownOnSpinner">
            <summary>
            Triggers when the spin down gets click.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchDownOnSpinner">
            <summary>
            Triggers when the spin down icon gets touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseUpOnSpinner">
            <summary>
            Triggers when the spin up gets clicked.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchUpOnSpinner">
            <summary>
            Triggers when the spin up icon gets touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseIconHandler">
            <summary>
            Triggers when the icon gets click.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchIconHandler">
            <summary>
            Triggers when the icon get touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseContainerHandler">
            <summary>
            Triggers when the container gets click.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnContainerBlur">
            <summary>
            Triggers when the container gets focus out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnContainerFocus">
            <summary>
            Triggers when the container gets focused.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerKeypress">
            <summary>
            Triggers when the container key pressed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ID">
            <summary>
            Specifies the id of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.InputEditContext">
            <summary>
            Specifies the edit context of the Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            The TextBox changes from a single line to multiline when enabling this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsReadOnlyInput">
            <summary>
            Specifies the boolean value for dropdownlist default readonly property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerAttr">
            <summary>
            Specifies the container attrubute of Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Buttons">
            <summary>
            Specifies the icon of the TextBox component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PrependButtons">
            <summary>
            Specifies the prepend icon of the TextBox component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SpinButton">
            <summary>
            Specifies a boolean value that enable or disable the spin button on the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerClass">
            <summary>
            Specifies the class value that is appended to container of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsValueTemplate">
            <summary>
            Specifies a boolean value that indicates whether the value template is displayed in TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.RootClass">
            <summary>
            Gets or Set the component class to element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ClickStopPropagation">
            <summary>
            Specifies the prevents the click actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseDowSpinnerPrevent">
            <summary>
            Specifies the prevents the mouse actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PreventIconHandler">
            <summary>
            Specifies the prevents the icon actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PreventTouchIconHandler">
            <summary>
            Specifies whether to prevent the touch action in icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MousePreventContainer">
            <summary>
            Specifies the prevents the container actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsShowSpinnerOnClear">
            <summary>
            Specifies the spinner show on clear icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsShowSpinnerOnIcon">
            <summary>
            Specifies the spinner show on dropdown icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Parent">
            <exclude/>
            <summary>
            Gets or sets the Parent.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnParametersSetAsync">
            <summary>
            Triggers when dynamically changing the component property.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component get rendered.
            </summary>
            <param name="firstRender">True if the component rendered for the first time.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SetReadOnly">
            <summary>
            The setReadOnly.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.CreateFloatingLabel">
            <summary>
            The createFloatingLabel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SetEnabled">
            <summary>
            The setEnabled.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BlurHandler">
            <summary>
            triggers while the component get focused out.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">The rootClass<see cref="T:System.String"/>.</param>
            <param name="containerClass">The containerClass<see cref="T:System.String"/>.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IInputBase">
            <summary>
            Common properties for input base component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IInputBase.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IInputBase.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component root class and container element class.
            </summary>
            <param name="rootClass">Specifies the root class of the InputBase.</param>
            <param name="containerClass">Specifies the container class of the InputBase.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs">
            <summary>
            Specifies the icon handler arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs.eventArgs">
            <summary>
            Specifies the <see cref="T:System.EventArgs"/> arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs.IconName">
            <summary>
            Specifies the name of the icon.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.#ctor(Syncfusion.Blazor.Inputs.SfUploader)">
            <summary>
            Constructor for initializing the component adaptor.
            </summary>
            <param name="parent">Uploader arguments.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.UploaderFileStream.Position">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.UploadData">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileList.UploaderFileInterop">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.UploadReadFile.GetFileReader">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IUploadReadFile">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IUploadReadFile.GetFileReader">
            <summary>
            Opens a stream to read the file.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IUploadFileList">
            <summary>
            Specifies the interface for upload file list.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IUploadFileList.FileListData(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Register for drop events on the source element.
            </summary>
            <param name="ele">Specifies the element reference.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails">
            <summary>
            Specifies the upload file status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails.chunksize">
            <summary>
            Specifies the chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails.totalChunksize">
            <summary>
            Specifies the total chunk size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfColorPicker">
            <summary>
            ColorPicker component is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
            <summary>
            ColorPicker is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
            <summary>
            ColorPicker is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
            <summary> 
            ColorPicker component is a user interface to select and adjust color values. 
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes. 
            </summary> 
            <example> 
            In the below code example, showcases a basic ColorPicker component. 
            <code><![CDATA[ 
            <SfColorPicker> 
            </SfColorPicker> 
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.HtmlAttributes">
            <exclude/>
            <summary> 
            Gets or sets a a value that indicates the collection of additional attributes that will applied to the color picker container element. 
            </summary> 
            <remarks> 
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Columns">
            <summary> 
            Gets or sets a value that indicates the columns to be rendered in palette mode. 
            </summary> 
            <value> 
            Accepts a double value. The default value is <c>10</c>. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.CssClass">
            <summary> 
            Gets or sets a value that indicates CSS class string to customize the appearance of color picker. 
            </summary> 
            <value> 
            Accepts a CSS class string separated by space to customize the appearance of color picker. The default value is <c>String.Empty</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Disabled">
            <summary> 
            Gets or sets a value that indicates whether to enable or disable the color picker. 
            </summary> 
            <value> 
            <c>true</c>, if the button component is disabled. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnableOpacity">
            <summary> 
            Gets or sets a value that indicates whether to enable or disable the opacity slider. 
            </summary> 
            <value> 
            <c>true</c>, if the opacity slider is enabled. The default value is <c>true</c>. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnablePersistence">
            <summary> 
            Gets or sets a value that indicates whether to persist component's state between page reloads. When set to <c>true</c>, the <see cref="P:Syncfusion.Blazor.Inputs.SfColorPicker.Value" /> property is persisted. 
            </summary> 
            <value> 
            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>. 
            </value> 
            <remarks> 
            Component's <see cref="P:Syncfusion.Blazor.Inputs.SfColorPicker.Value"/> property will be stored in browser local storage to persist component's state when page reloads. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnableRtl">
            <summary> 
            Gets or sets a value that indicates whether to enable or disable the right to left direction. 
            </summary> 
            <value> 
            <c>true</c>, if the right to left direction is enabled for the component. The default value is <c>false</c>. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Inline">
            <summary> 
            Gets or sets a value that indicates whether to enable to disable the inlide mode color picker. 
            </summary> 
            <value> 
            <c>true</c>, if the color picker component is rendered as inline. The default value is <c>false</c>. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Mode">
            <summary> 
            Gets or sets a value that indicates the mode of color picker to be rendered. 
            </summary> 
            <value> 
            One of the <see cref="T:Syncfusion.Blazor.Inputs.ColorPickerMode"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Picker"/> 
            </value> 
            <remarks> 
            If the <c>ColorPickerMode</c> is <c>Picker</c>, the color picker is rendered as a picker. 
            If the <c>ColorPickerMode</c> is <c>Palette</c>, the color picker is rendered as a palette. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ModeSwitcher">
            <summary> 
            Gets or sets a value that indicates whether to enable or disable the mode switcher option. 
            </summary> 
            <value> 
            <c>true</c>, if the mode switcher option is enabled. The default value is <c>true</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.NoColor">
            <summary> 
            Gets or sets a value that indicates whether to enable or disable the no color option. 
            </summary> 
            <value> 
            <c>true</c>, if the no color option is enabled. The default value is <c>false</c>. 
            </value> 
            <remarks> 
            No color option is only available in palette mode. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.PresetColors">
            <summary> 
            Gets or sets a value that indicates the collection of custom color values that will be rendered as color picker element. 
            </summary> 
            <remarks> 
            Preset colors option is only available in palette mode. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ShowButtons">
            <summary> 
            Gets or sets a value that indicates whether to enable or disable the apply/cancel buttons. 
            </summary> 
            <value> 
            <c>true</c>, if the apply/cancel buttons were enabled. The default value is <c>true</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Value">
            <summary> 
            Gets or sets the color value for color picker. It should be specified as Hex code. 
            </summary> 
            <value> 
            Accepts a string value. The default value is <c>#008000ff</c>. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueChanged">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> color value changed.  
            </summary> 
            <remarks> 
            You can access the Color Picker item related values using <see cref="T:Syncfusion.Blazor.Inputs.ColorPickerEventArgs"/>. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnOpen">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> popup is opening.  
            </summary> 
            <remarks> 
            you can access the ColorPicker popup related values using <see cref="T:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs"/>. 
            </remarks> 
            <example> 
            <code><![CDATA[ 
            <SfColorPicker OnOpen="@OnOpen"> 
            </SfColorPicker> 
            @code { 
                private void OnOpen(BeforeOpenCloseEventArgs args) { 
                    // Write your code here. 
                } 
            } 
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Opened">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> popup is opened.  
            </summary> 
            <remarks> 
            You can access the SplitButton popup related values using <see cref="T:Syncfusion.Blazor.Inputs.OpenEventArgs"/>. 
            </remarks>
            <example> 
            <code><![CDATA[ 
            <SfColorPicker Opened="@Opened"> 
            </SfColorPicker> 
            @code { 
                private void Opened(OpenEventArgs args) { 
                    // Write your code here. 
                } 
            } 
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnClose">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> popup is closing.  
            </summary> 
            <remarks> 
            You can access the color picker popup related values using <see cref="T:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs"/>. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnModeSwitch">
            <summary> 
            Gets or sets an event callback that is raised before the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> mode switching is performed.  
            </summary> 
            <remarks> 
            You can access the Color Picker item related values using <see cref="T:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs"/>. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ModeSwitched">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> mode switch performed.  
            </summary> 
            <remarks> 
            You can access the Color Picker item related values using <see cref="T:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs"/>. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnTileRender">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> tile rendering is completed.  
            </summary> 
            <remarks> 
            You can customize the color picker tile rendering using <see cref="T:Syncfusion.Blazor.Inputs.PaletteTileEventArgs"/>. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueChange">
            <summary>
            Gets or sets an event callback that is raised  while changing the colors.
            </summary>
            <remarks>
            It will be triggered based on the <see cref="P:Syncfusion.Blazor.Inputs.SfColorPicker.ShowButtons"/> property.
            If the property is false, this event will be triggered while selecting the colors.
            If the property is true, this event will be triggered while apply the selected color.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Selected">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> palette or picker element is clicked.  
            </summary> 
            <remarks> 
            You can access the Color Picker item related values using <see cref="T:Syncfusion.Blazor.Inputs.ColorPickerEventArgs"/>. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Created">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfColorPicker"/> rendering is completed.  
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ColorPickerParent">
            <summary>
            Parent component of ColorPicker.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.GetValue(System.String,Syncfusion.Blazor.Inputs.ColorValueType)">
            <summary>
            Gets color value in specified type.
            </summary>
            <param name = "value">Specify the color value.</param>
            <param name = "type">Specify the type to which the specified color needs to be converted.</param>
            <returns>The color value in a specific type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Toggle">
            <summary>
             Show/hide color picker popup based on current state of the split button.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.FocusIn">
            <summary>
            Focuses the color picker.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.FocusAsync">
            <summary>
            Focuses the color picker.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.SetOffset(Syncfusion.Blazor.Inputs.Offset)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Click(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Close">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerMode">
            <summary>
            ColorPicker Mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Picker">
            <summary>
            To set the color picker mode as picker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Palette">
            <summary>
            To set the color picker mode as palette.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorValueType">
            <summary>
            Color value types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hex">
            <summary>
            Specifies the hex code value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hexa">
            <summary>
            Specifies the hex code value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Rgb">
            <summary>
            Specifies the red green blue value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Rgba">
            <summary>
            Specifies the red green blue value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hsv">
            <summary>
            Specifies the hue saturation value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hsva">
            <summary>
            Specifies the hue saturation value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Opacity">
            <summary>
            Specifies the opacity value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs">
            <summary>
            Provides information about the in <c>OnOpen</c> and <c>OnClose</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Cancel">
            <summary>
            Gets or sets a value that indicates whether to allow or prevent the popup open in color picker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Element">
            <summary>
            Gets or sets a value that indicates the color picker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Name">
            <summary>
            Gets or sets a value that indicates the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerEventArgs">
            <summary>
            Provides information about the in <c>ValueChange</c> and <c>Selected</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.CurrentValue">
            <summary>
            Gets or sets a value that indicates the the current color value details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.Name">
            <summary>
            Gets or sets a value that indicates the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.PreviousValue">
            <summary>
            Gets or sets a value that indicates the previous color value details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerValue">
            <summary>
            Provides information about the model passes in <c>ValueChange</c> and <c>Selected</c> event callback..
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerValue.Hex">
            <summary>
            Gets or sets a value that indicates the color value as HEX format without opacity.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerValue.Rgba">
            <summary>
            Gets or sets a value that indicates the color value as RGBA format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs">
            <summary>
            Provides information about the in <c>ModeSwitch</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Mode">
            <summary>
            Gets or sets a value that indicates the color picker mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Name">
            <summary>
            Gets or sets a value that indicates the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.OpenEventArgs">
            <summary>
            Provides information about the in <c>Opened</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.OpenEventArgs.Element">
            <summary>
            Gets or sets a value that indicates the color picker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PaletteTileEventArgs">
            <summary>
            Provides information about the in <c>OnTileRender</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.PresetName">
            <summary>
            Gets or sets a value that indicates the preset name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Value">
            <summary>
            Gets or sets a value that indicates the color value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Offset">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfInputTextBase`1">
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnPaste">
            <summary>
            Triggers when the content is paste into an input.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnBlur">
            <summary>
            Triggers when the input has focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ID">
            <summary>
            Specifies the id of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.InputEditContext">
            <summary>
            Specifies the edit context of the Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.BaseFloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValidateOnInput">
            <summary>
            Specifies a boolean value that indicates whether the component validates the input or not.
            </summary>
            <value>
            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
            <remarks>
            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ContainerAttr">
            <summary>
            Specifies the container attrubute of Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.SpinButton">
            <summary>
            Specifies a boolean value that enable or disable the spin button on the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.IsValueTemplate">
            <summary>
            Specifies a boolean value that indicates whether the value template is displayed in TextBox.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ClickStopPropagation">
            <summary>
            Specifies the prevents the click actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.MouseDowSpinnerPrevent">
            <summary>
            Specifies the prevents the mouse actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.PreventIconHandler">
            <summary>
            Specifies the prevents the icon actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.MousePreventContainer">
            <summary>
            Specifies the prevents the container actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ContainerClass">
            <summary>
            Specifies the class value that is appended to container of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.RootClass">
            <summary>
            Gets or Set the component class to element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnParametersSetAsync">
            <summary>
            Triggers when dynamically changing the component property.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.SetReadOnly">
            <summary>
            The setReadOnly.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.CreateFloatingLabel">
            <summary>
            The createFloatingLabel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.SetEnabled">
            <summary>
            The setEnabled.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.BlurHandler">
            <summary>
            triggers while the component get focused out.
            </summary>
            <returns>Task.</returns>
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FormEventArgs">
            <summary>
            SPecifies the form event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Element">
            <summary>
            Returns the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.ErrorElement">
            <summary>
            Returns the error element for corresponding input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.InputName">
            <summary>
            Returns the name of the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Message">
            <summary>
            Returns the error message.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Status">
            <summary>
            Returns the status input element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BlurEventArgs">
            <summary>
            Defines the argument for the blur event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BlurEventArgs.Model">
            <summary>
            returns the model class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusEventArgs">
            <summary>
            Defines the argument for the focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusEventArgs.Model">
            <summary>
            returns the model class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.IInput">
            <summary>
            Default required properties for input components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Change">
            <summary>
             Sets the change event mapping function to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.CssClass">
            <summary>
             Sets the css class value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.EnableRtl">
            <summary>
             Sets the enable rtl value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Enabled">
            <summary>
             Sets the enabled value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.FloatLabelType">
            <summary>
            Specifies how the floating label works.
            Possible values are:
             Never - Never float the label in the input when the placeholder is available.
             Always - The floating label will always float above the input.
             Auto - The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Placeholder">
            <summary>
             Sets the placeholder value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Readonly">
            <summary>
             Sets the readonly value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.ShowClearButton">
            <summary>
             Specifies whether to display the Clear button in the input.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ActionCompleteEventArgs">
            <summary>
            Defines the argument for the ActionComplete event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ActionCompleteEventArgs.FileData">
            <summary>
            Return the selected file details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs">
            <summary>
            Defines the argument for the BeforeRemove event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.FilesData">
            <summary>
            Returns the list of files details that will be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.CustomFormData">
            <summary>
            Defines the additional data with key and value pair format that will be submitted to the remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.PostRawFile">
            <summary>
            Defines whether the selected raw file send to server remove action.
            Set true to send raw file.
            Set false to send file name only.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs">
            <summary>
            Defines the argument for the BeforeUpload event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.WithCredentials">
            <summary>
            Specifies Boolean value that indicates requests should be made using credentials such as cookies, authorization headers for cross-site requests.The default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.FilesData">
            <summary>
            Returns the list of uploading files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.CancelEventArgs">
            <summary>
            Defines the argument for the Cancel event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.FileData">
            <summary>
            Returns the file details that will be canceled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ClearingEventArgs">
            <summary>
            Defines the argument for the Clearing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ClearingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ClearingEventArgs.FilesData">
            <summary>
            Returns the list of files that will be cleared from the FileList.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FailureEventArgs">
            <summary>
            Defines the argument for the Failure event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.ChunkIndex">
            <summary>
            Returns the upload chunk index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.ChunkSize">
            <summary>
            Returns the upload chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.RetryFiles">
            <summary>
             Defines the files for retry the upload files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Response">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.StatusText">
            <summary>
            Returns the upload status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.TotalChunk">
            <summary>
            Returns the total chunk size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FileInfo">
            <summary>
            Defines the argument for the FileInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.FileSource">
            <summary>
            Returns where the file selected from, to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Id">
            <summary>
            Returns the unique upload file name ID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Input">
            <summary>
            Returns the input element mapped with file list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.List">
            <summary>
            Returns the respective file list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Name">
            <summary>
            Returns the upload file name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.RawFile">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Size">
            <summary>
            Returns the size of file in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Status">
            <summary>
            Returns the status of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.StatusCode">
            <summary>
            Returns the current state of the file such as Failed, Canceled, Selected, Uploaded, or Uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Type">
            <summary>
            Returns the MIME type of file as a string. Returns empty string if the file’s type is not determined.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.MimeContentType">
            <summary>
            Returns the mime content type of file as a string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.LastModifiedDate">
            <summary>
            Returns the last modified date of the uploading file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.ValidationMessages">
            <summary>
            Returns the list of validation errors (if any).
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs">
            <summary>
            Defines the argument for the FileListRender event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.FileInfo">
            <summary>
            Return the current rendering file item data as File object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.IsPreload">
            <summary>
            Return whether the file is preloaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PauseResumeEventArgs">
            <summary>
            Defines the argument for the PauseResume event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkCount">
            <summary>
            Returns the total number of chunks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkIndex">
            <summary>
            Returns the index of chunk that is Paused or Resumed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkSize">
            <summary>
            Returns the chunk size value in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.File">
            <summary>
            Returns the file data that is Paused or Resumed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ProgressEventArgs">
            <summary>
            Defines the argument for the Progress event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.LengthComputable">
            <summary>
            Returns the file progress is computable or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Loaded">
            <summary>
            Returns the progressed the uploading file size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Total">
            <summary>
            Returns the total size of the uploading file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Stream">
            <summary>
            Return the file stream of loaded file content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.RemovingEventArgs">
            <summary>
            Defines the argument for the Removing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CustomFormData">
            <summary>
            Defines the additional data with key and value pair format that will be submitted to the remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.FilesData">
            <summary>
            Returns the list of files’ details that will be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.PostRawFile">
            <summary>
            Defines whether the selected raw file send to server remove action.
            Set true to send raw file.
            Set false to send file name only.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.RenderingEventArgs">
            <summary>
            Defines the argument for the Rendering event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.FileInfo">
            <summary>
            Return the current rendering file item data as File object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.IsPreload">
            <summary>
            Return whether the file is preloaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ResponseEventArgs">
            <summary>
            Defines the argument for the Response event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.Headers">
            <summary>
            Returns the current response header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.ReadyState">
            <summary>
            Returns the current response readyState.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.StatusCode">
            <summary>
            Returns the current response statusCode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.StatusText">
            <summary>
            Returns the current response statusText.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.WithCredentials">
            <summary>
            Returns the current response withCredentials.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SelectedEventArgs">
            <summary>
            Defines the argument for the Selected event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.CurrentRequest">
            <summary>
            Set the current request header to the XMLHttpRequest instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.FilesData">
            <summary>
            Returns the list of selected files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.IsCanceled">
            <summary>
            Specifies whether the file selection has been canceled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.IsModified">
            <summary>
            Determines whether the file list generates based on the modified data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.ModifiedFilesData">
            <summary>
            Specifies the modified files data to generate the file items. The argument depends on `isModified` argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.ProgressInterval">
            <summary>
            Specifies the step value to the progress bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Type">
            <summary>
            Returns the original event argument type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SuccessEventArgs">
            <summary>
            Defines the argument for the Success event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.ChunkIndex">
            <summary>
            Returns the upload chunk index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.ChunkSize">
            <summary>
            Returns the upload chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Response">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.StatusText">
            <summary>
            Returns the upload status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.TotalChunk">
            <summary>
            Returns the total chunk size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploadFiles">
            <summary>
            Defines the argument for the UploadFiles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadFiles.Stream">
            <summary>
            Return the selected file stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadFiles.FileInfo">
            <summary>
            Return the selected file details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploadChangeEventArgs">
            <summary>
            Defines the argument for the UploadChangeEventArgs event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadChangeEventArgs.Files">
            <summary>
            Returns the list of files that will be cleared from the FileList.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploadingEventArgs">
            <summary>
            Defines the argument for the UploadingEventArgs event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.ChunkSize">
            <summary>
            Returns the chunk size in bytes if the chunk upload is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.CurrentChunkIndex">
            <summary>
            Returns the index of current chunk if the chunk upload is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.FileData">
            <summary>
            Returns the list of files that will be uploaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ValidationMessages">
            <summary>
            Defines the argument for the ValidationMessages.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ValidationMessages.MaxSize">
            <summary>
            Returns the maximum file size validation message, if selected file size is less than specified maxFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ValidationMessages.MinSize">
            <summary>
            Returns the minimum file size validation message, if selected file size is less than specified minFileSize property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.AsyncSettingsModel">
            <summary>
            Interface for a class AsyncSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.ChunkSize">
            <summary>
            Specifies the chunk size to split the large file into chunks, and upload it to the server in a sequential order.
            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.</para>
            <para>It must be specified in bytes value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            <para>The remove action type must be POST request and define "RemoveFileNames" attribute to get file information that will be removed.</para>
            <para>This property is optional.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RetryCount">
            <summary>
            Specifies the number of retries that the Uploader can perform on the file failed to upload.
            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            <para>The save action type must be POST request and define the argument as same input name used to render the component.</para>
            <para>The upload operations could not perform without this property.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ButtonsPropsModel">
            <summary>
            Interface for a class ButtonsProps.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Browse">
            <summary>
            Specifies the text or html content to browse button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Clear">
            <summary>
            Specifies the text or html content to clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Upload">
            <summary>
            Specifies the text or html content to upload button.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FilesPropModel">
            <summary>
            Interface for a class FilesProp.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Name">
            <summary>
            Specifies the name of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Size">
            <summary>
            Specifies the size of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Type">
            <summary>
            Specifies the type of the file.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderModel">
            <summary>
            Interface for a class Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Canceling">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Change">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkFailure">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkUploading">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Clearing">
            <summary>
            Triggers before clearing the items in file list when clicking "clear".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Created">
            <summary>
            Triggers when the Uploader is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Failure">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.FileListRendering">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Pausing">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Progress">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Removing">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Resuming">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Selected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Uploading">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions
            with comma separators.
            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as ".jpg,.png".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AsyncSettings">
            <summary>
            Configures the save and remove URL to perform the upload operations in the server asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AutoUpload">
            <summary>
            By default, the Uploader component initiates automatic upload when the files are added in upload queue.
            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>
            <para>The buttons "upload" and "clear" will be hided from file list when AutoUpload property is true.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Buttons">
            <summary>
            You can customize the default text of "browse, clear, and upload" buttons with plain text or HTML elements.
            The buttons' text can be customized from localization also.
            <para>If you configured both `Locale` and `Buttons` property,the Uploader component considers the `Buttons` property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the Uploader.
            One or more custom CSS classes can be added to a Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DirectoryUpload">
            <summary>
            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the Uploader creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DropEffect">
            <summary>
            Specifies the drag operation effect to the Uploader component.
            <para> Possible values are.</para>
            <list type="bullet">
            <item>
            <term>Copy</term>
            </item>
            <item>
            <term>Move</term>
            </item>
            <item>
            <term>Link</term>
            </item>
            <item>
            <term>None</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.EnablePersistence">
            <summary>
            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.EnableRtl">
            <summary>
            Enable or disable rendering Uploader in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Files">
            <summary>
            Specifies the list of files that will be preloaded on rendering of Uploader component.
            The property used to view and remove the uploaded files from server.
            <para> By default, the files are configured with uploaded successfully state. The following properties are mandatory to configure the preload files:</para>
            <list type="bullet">
            <item>
            <term>Name</term>
            </item>
            <item>
            <term>Size</term>
            </item>
            <item>
            <term>Type</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the Uploader considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Locale">
            <summary>
            Specifies the global culture and localization of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Multiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or
            dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.SequentialUpload">
            <summary>
            By default, the file Uploader component is processing the multiple files simultaneously.
            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ShowFileList">
            <summary>
            Specifies a boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskBlurEventArgs">
            <summary>
            Interface for focus out event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Container">
            <summary>
            Returns the MaskedTextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.MaskedValue">
            <summary>
            Returns the value of the MaskedTextBox with the masked format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Value">
            <summary>
            Returns the value of MaskedTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskChangeEventArgs">
            <summary>
            Interface for changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskChangeEventArgs.IsInteracted">
            <summary>
            Returns true when the value of MaskedTextBox is changed by user interaction. Otherwise, it returns false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskFocusEventArgs">
            <summary>
            Interface for focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskFocusEventArgs.SelectionEnd">
            <summary>
            Returns selectionEnd value depends on mask length.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskFocusEventArgs.SelectionStart">
            <summary>
            Returns selectionStart value as zero by default.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskClientProps">
            <summary>
            Specifies the client properties of MaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Readonly">
            <summary>
            Specifies the read only property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Enabled">
            <summary>
            Specifies wheter the component in disabled state or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.SelectionEnd">
            <summary>
            Specifies the selection range end property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.SelectionStart">
            <summary>
            Specifies the selection start property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Value">
            <summary>
            Specifies the value property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Mask">
            <summary>
            Specifies the mask property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.keyValue">
            <summary>
            Specifies the key value  provided.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.IsMultipleDelete">
            <summary>
            Specifies whether the single charcater or multiple characters get deleted.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PasteValue">
            <summary>
            Specifies the clipboard value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PromptCharacter">
            <summary>
            Specifies the prompt character of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PlaceHolder">
            <summary>
            Specifies the placeholder of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.MaskedValue">
            <summary>
            SPecifies the value with mask literals.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.MaskValue">
            <summary>
            Specifies the input element value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.FloatLabelType">
            <summary>
            Specifies the floatlabel type of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.CustomRegExpCollec">
            <summary>
            Specifies the custom regex.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.HiddenMask">
            <summary>
            Specifies the mask literals with escape sequence and casing characters.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PromptMask">
            <summary>
            Specifies the mask literals.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfMaskedTextBox">
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Blur">
            <summary>
            Triggers when the SfMaskedTextBox has focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueChange">
            <summary>
            Triggers when the content of SfMaskedTextBox has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Created">
            <summary>
            Triggers when the SfMaskedTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Destroyed">
            <summary>
            Triggers when the SfMaskedTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Focus">
            <summary>
            Triggers when the SfMaskedTextBox gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnBlur">
            <summary>
            Triggers when the input has focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ID">
            <summary>
            Specifies the id of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.SfMaskedTextBoxEditContext">
            <summary>
            Specifies the edit context of MaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the SfMaskedTextBox. One or more custom CSS classes can be added to a SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnablePersistence">
            <summary>
            Enable or disable the persisting SfMaskedTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the SfMaskedTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the SfMaskedTextBox that the placeholder text floats above the SfMaskedTextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the SfMaskedTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the SfMaskedTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the SfMaskedTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in SfMaskedTextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the SfMaskedTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnableLiterals">
            <summary>
            Gets or sets whether to include the literals or not in the value.
            </summary>
             <c>true</c>
             To include the literals in the value; otherwise,
             <b>false</b>
             The default value is
             <c>false</c>
             <value>
            <remarks>
            You can get the masked value using GetMaksedValue method also. 
            </remarks >
            <seealso cref="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Value"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.PromptPlaceholder">
             <summary>
             Gets or set character that is replace the blank spaces in the Value property.The default value is a space.
             </summary>
            <remarks>
            You can use this option when you enable the EnableLiterals property: Otherwise, this option will not work
            </remarks>
             <seealso cref="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnableLiterals" />
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Value">
            <summary>
            Sets the content of the SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Width">
            <summary>
            Specifies the width of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.TabIndex">
            <summary>
            Specifies the tab order of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Mask">
            <summary>
            Sets a value that masks the MaskedTextBox to allow/validate the user input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.PromptChar">
            <summary>
            Gets or sets a value that will be shown as a prompting symbol for the masked value.
            The symbol used to show input positions in the MaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.CustomCharacters">
            <summary>
            Sets the collection of values to be mapped for non-mask elements(literals)
            which have been set in the mask of MaskedTextBox.
             <para>In the below example, non-mask elements "P" accepts values
            "P" , "A" , "p" , "a" and "M" accepts values "M", "m" mentioned in the custom characters collection.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.MaskedTextBoxParent">
            <summary>
            Parent component of Numeric TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetMaskedValue">
            <summary>
            Returns the value of MaskedTextBox with respective mask.
            </summary>
            <returns>The value with mask literals.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusIn">
            <summary>
            Sets the focus to SfMaskedTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusAsync">
            <summary>
            Sets the focus to SfMaskedTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusOut">
            <summary>
            Remove the focus from SfMaskedTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusOutAsync">
            <summary>
            Remove the focus from SfMaskedTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdatePasteValue(Syncfusion.Blazor.Inputs.MaskClientProps)">
            <summary>
            Gets the clipboard values and its related properties from client.
            </summary>
            <param name="args">Specifies the mask client properties.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">Specifies the root class of the component.</param>
            <param name="containerClass">Specifies the container class o the component.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdateInputValue(System.String,System.Boolean)">
            <summary>
            Update the respective value property without mask literals.
            </summary>
            <param name="inputval">Specifies the value with mask literals.</param>
            <param name="isPaste">true if the user performs paste action , otherwise false.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangeEventArgs`1">
            <summary>
            Interface for change event.
            </summary>
            <typeparam name="T">Specifies the type of ChangeEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Event">
            <summary>
            Returns the event parameters from NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.IsInteracted">
            <summary>
            Returns true when the value of NumericTextBox is changed by user interaction. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.PreviousValue">
            <summary>
            Returns the previously entered value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Value">
            <summary>
            Returns the entered value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1">
            <summary>
            Interface for Blur event.
            </summary>
            <typeparam name="T">Specifies the type of NumericBlurEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Container">
            <summary>
            Returns the NumericTextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Value">
            <summary>
            Returns the value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1">
            <summary>
            Interface for Focus event.
            </summary>
            <typeparam name="T">Specifies the type of NumericFocusEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Container">
            <summary>
            Returns the NumericTextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Value">
            <summary>
            Returns the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Readonly">
            <summary>
            Specifies the component is in read-only mode or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Enabled">
            <summary>
            Specifies the component is in disabled state or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Locale">
            <summary>
            Specifies the locale property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.ValidateDecimalOnType">
            <summary>
            Specifies the ValidateDecimalOnType property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Decimals">
            <summary>
            Specifies the Decimals property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.DecimalSeparator">
            <summary>
            Specifies the DecimalSeparator property.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1">
            <summary>
            Interface for a class NumericTextBox.
            </summary>
            <typeparam name="T">Specifies the type of NumericTextBoxModel.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the NumericTextBox. One or more custom CSS classes can be added to a NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting NumericTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the NumericTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the NumericTextBox that the placeholder text floats above the NumericTextBox based on the below values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the NumericTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the NumericTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the NumericTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.InputAttributes">
            <summary>
            <para>You can add the additional input attributes such as disabled, value, and more to the root element.</para>
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Readonly">
            <summary>
            Specifies the boolean value whether the NumericTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.
            <para>True- the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>
            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the length of the decimal should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Value">
            <summary>
            Sets the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Width">
            <summary>
            Specifies the width of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.TabIndex">
            <summary>
            Specifies the tab order of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfNumericTextBox`1">
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <typeparam name="TValue">Specifies the type of SfNumericTextBox.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.
            <para>True - the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>
            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the length of the decimal should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.NumericTextBoxParent">
            <summary>
            Parent component of DataManager.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Decrement(`0)">
            <summary>
            Decrements the NumericTextBox value with specified step value.
            </summary>
            <param name="step">Specifies the value used to decrement the NumericTextBox value. If its not given then numeric value will be decremented based on the step property value.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.DecrementAsync(`0)">
            <summary>
            Decrements the NumericTextBox value with specified step value.
            </summary>
            <param name="step">Specifies the value used to decrement the NumericTextBox value. If its not given then numeric value will be decremented based on the step property value.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusIn">
            <summary>
            Sets the focus to the NumericTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusAsync">
            <summary>
            Sets the focus to the NumericTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusOut">
            <summary>
            Remove the focus from the NumericTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusOutAsync">
            <summary>
            Remove the focus from the NumericTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetFormattedText">
            <summary>
            Returns the value of NumericTextBox with the format applied to the NumericTextBox.
            </summary>
            <returns>The input element value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Increment(`0)">
            <summary>
            Increments the NumericTextBox value with the specified step value.
            <param name="step">Specifies the value used to increment the NumericTextBox value.if its not given then numeric value will be incremented based on the step property value.</param>
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.IncrementAsync(`0)">
            <summary>
            Increments the NumericTextBox value with the specified step value.
            <param name="step">Specifies the value used to increment the NumericTextBox value.if its not given then numeric value will be incremented based on the step property value.</param>
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InvokePasteHandler(System.String)">
            <summary>
            Invoke the event, while paste the value to input element.
            </summary>
            <param name="beforeValue">Specifies the previous element value.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ServerAction(System.String,System.EventArgs,System.String)">
            <summary>
            Invokable the increment/decrement actions.
            </summary>
            <param name="action">Specifies the action.</param>
            <param name="args"><see cref="T:System.EventArgs"/> arguments.</param>
            <param name="currentInputValue">Specifies the input value</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ServerupdateValue(`0,System.EventArgs)">
            <summary>
            Invokable the component value.
            </summary>
            <returns>Task.</returns>
            <param name="value">Specifies the value.</param>
            <param name="args"><see cref="T:System.EventArgs"/> arguments.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ContainerClass">
            <summary>
            Specifies the class value that is appended to container of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.RootClass">
            <summary>
            Gets or Set the component class to element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.IsFocus">
            <summary>
            Specifies the input is focused state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.minMaxValue">
            <summary>
            Set the min and max validation value to the property.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.SetCssClass">
            <summary>
            Set the css class to component container element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InvokeInputEvent">
            <summary>
            Bind the input event to the input element for enabled clear button and floatlabel to the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.UpdateAriaMinMaxAttributes(System.Boolean,System.Boolean)">
            <summary>
            Method which updates or removes the aria-valuemin and aria-valuemax 
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1">
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <typeparam name="TValue">Specifies the type of SfNumericTextBox.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.BaseParent">
            <summary>
            Specifies the base parent of SfNumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Blur">
            <summary>
            Triggers when the NumericTextBox got focus out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.ValueChange">
            <summary>
            Triggers when the value of the NumericTextBox changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Created">
            <summary>
            Triggers when the NumericTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Destroyed">
            <summary>
            Triggers when the NumericTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Focus">
            <summary>
            Triggers when the NumericTextBox got focus in.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfRating">
            <summary> 
            The Blazor Rating component allows the user to rate something by clicking on a set of symbols on numeric scale. 
            This allow users to provide feedback or ratings for products, services, or content.
            </summary> 
            <example> 
            A simple Blazor Rating component with value.
            <code><![CDATA[ 
            <SfRating Value=3 />
            ]]></code> 
            A Blazor Rating component with label.
            <code><![CDATA[ 
            <SfRating ShowLabel=true /> 
            ]]></code>
            </example> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.AllowReset">
            <summary> 
            Gets or sets a value that specifies whether to show or hide the reset button in a rating component.
            </summary>
            <value> 
            <c>true</c>, the reset button will be visible to the user and they will be able to click it to reset the rating value to its default. 
            The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.CssClass">
            <summary> 
            Gets or sets one or more CSS classes that can be used to customize the appearance of a rating component.
            </summary> 
            <value> 
            One or more CSS classes to customize the appearance of the rating component, such as by changing its colors, fonts, sizes, or other visual aspects.
            The default value is <c>String.Empty</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.Disabled">
            <summary> 
            Gets or sets a value that specifies whether a rating component is enabled or disabled.
            A disabled rating component may have a different visual appearance than an enabled one.
            </summary> 
            <value> 
            <c>true</c>, the rating component will be disabled and the user will not be able to interact with it. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.EmptyTemplate">
            <summary> 
            Gets or sets a template that defines the appearance of each un-rated item in a rating component. 
            The <see cref="T:Syncfusion.Blazor.Inputs.RatingItemContext"/> is passed as a context to the template, allowing it to access information about the un-rated item, such as its <see cref="P:Syncfusion.Blazor.Inputs.RatingItemContext.Value"/> and <see cref="P:Syncfusion.Blazor.Inputs.RatingItemContext.Index"/>.
            </summary>   
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <example> 
            Rating with empty template.
            <code><![CDATA[ 
            <SfRating> 
               <EmptyTemplate>
                    <span class="e-rating-icon e-icons e-star"></span>
               </EmptyTemplate>
            </SfRating>
            ]]></code> 
            </example>   
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.EnableAnimation">
            <summary> 
            Gets or sets a value that specifies whether to add animation (to provide visual feedback to the user) when an item in a rating component is hovered.
            </summary>
            <value> 
            <c>true</c>, an animation will be added when the user hovers their cursor over an item in the rating component.
            The default value is <c>true</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.EnableSingleSelection">
            <summary> 
            Gets or sets a value that specifies whether to select all the items before the selected item should be in selected state in a rating component.
            </summary>
            <value> 
            <c>true</c>, only the selected item will be in the selected state, and all other items will be un-selected.
            <c>false</c>, all items before the selected one will be in the selected state.
            The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.FullTemplate">
            <summary> 
            Gets or sets a template that defines the appearance of each rated item in a rating component. 
            The <see cref="T:Syncfusion.Blazor.Inputs.RatingItemContext"/> is passed as a context to the template, allowing it to access information about the rated item, such as its <see cref="P:Syncfusion.Blazor.Inputs.RatingItemContext.Value"/> and <see cref="P:Syncfusion.Blazor.Inputs.RatingItemContext.Index"/>.
            </summary>   
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <example> 
            Rating with full template.
            <code><![CDATA[ 
            <SfRating> 
               <FullTemplate>
                    <span class="e-rating-icon e-icons e-star"></span>
               </FullTemplate>
            </SfRating>
            ]]></code> 
            </example>   
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.ID">
            <summary>
            Sets id attribute for the rating element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.ItemsCount">
            <summary> 
            Gets or sets a value that specifies the number of items (symbols) in rating component.
            The rating component typically consists of a number of items, such as stars or other symbols, that represent the rating value. 
            </summary>
            <value>
            An int that specifies the number of items (symbols) displayed in rating component
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.LabelPosition">
            <summary> 
            Gets or sets the the position of the label in rating component. 
            </summary> 
            <value> 
            One of the <see cref="T:Syncfusion.Blazor.Inputs.LabelPosition"/> enumeration that specifies the position of the label. The default value is <see cref="F:Syncfusion.Blazor.Inputs.LabelPosition.Right"/>.
            </value>
            <remarks>
            You can use this property to customize the position of the label within the rating component to suit the needs of your application. 
            For example, you can set the <c>LabelPosition</c> property to ,<c>Top</c> to position the label at the top center of the rating component, 
            or set it to <c>Left</c> to position the label at the left side of the component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.LabelTemplate">
            <summary> 
            Gets or sets a template that used as label over default label of the rating. The current value of rating passed as context to build the content.
            </summary>   
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <example> 
            Rating with label template.
            <code><![CDATA[ 
            <SfRating> 
               <LabelTemplate>
                    <span>@context Out Of 5</span>
               </LabelTemplate>
            </SfRating>
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.Min">
            <summary> 
            Gets or sets the value that specifies minimum rating that a user can select.
            </summary>
            <value>
            By default, the <c>Min</c> property is set to 0, which means that the minimum possible rating is 0.
            </value>
            <remarks>
            You can use the <c>Min</c> property to customize the minimum possible rating in the <c>SfRating</c> component. 
            For example, if you want to allow users to provide ratings from 1 to 5, you can set the <c>Min</c> property to 1 and <c>ItemsCount</c> to 5.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.Precision">
            <summary> 
            Gets or sets the precision type of the rating which used to component the granularity of the rating, allowing users to provide ratings with varying levels of precision.
            </summary>
            <value> 
            One of the <see cref="T:Syncfusion.Blazor.Inputs.PrecisionType"/> enumeration that specifies the precision type. The default value is <see cref="F:Syncfusion.Blazor.Inputs.PrecisionType.Full"/>.
            </value>
            <remarks>
            The <code>Precision</code> property can be set to one of the following values:
            * Full: The rating is increased in whole number increments. For example, if the current rating is 3, the next possible ratings are 4, 5, and so on.
            * Half: The rating is increased in increments of 0.5 (half). For example, if the current rating is 3.5, the next possible ratings are 4, 4.5, 5, and so on.
            * Quarter: The rating is increased in increments of 0.25 (quarter). For example, if the current rating is 3.75, the next possible ratings are 4, 4.25, 4.5, and so on.
            * Exact: The rating is increased in increments of 0.1. For example, if the current rating is 3.9, the next possible ratings are 4, 4.1, 4.2, and so on.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.ReadOnly">
            <summary> 
            Gets or sets a boolean value that specifies whether the read-only mode is enabled for a rating component, 
            which means that the user will be able to interact with it and change the rating value. 
            </summary>
            <value> 
            <c>true</c>,the rating component will be in read-only mode, which means that the user will not be able to interact with it and change the rating value. 
            The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.ShowLabel">
            <summary> 
            Gets or sets a value that specifies whether to display a label that shows the current value of a rating.
            </summary>
            <value> 
            <c>true</c>, a label will be displayed that shows the current value of the rating; otherwise false. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.ShowTooltip">
            <summary> 
            Gets or sets a value that defines whether to show tooltip for the items.
            </summary>
            <value> 
            <c>true</c>, show tooltip for the items. The default value is <c>true</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.TooltipTemplate">
            <summary> 
            Gets or sets a template that used as tooltip content over default tooltip content of the rating. The current value of rating passed as context to build the content. 
            </summary>   
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <example> 
            Rating with tooltip template.
            <code><![CDATA[ 
            <SfRating> 
               <TooltipTemplate>
                    <div>@context Star</div>
               </TooltipTemplate>
            </SfRating>
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.Value">
            <summary> 
            Gets or sets the current rating value which used to display and update the rating selected by the user. 
            Based on <see cref="T:Syncfusion.Blazor.Inputs.PrecisionType"/>, users can select ratings with varying levels of precision
            </summary>
            <value>
            The <code>Value</code> property is a decimal value that ranges from the <see cref="P:Syncfusion.Blazor.Inputs.SfRating.Min"/> to the <see cref="P:Syncfusion.Blazor.Inputs.SfRating.ItemsCount"/>, 
            as specified by the <c>Min</c> and <c>ItemsCount</c> properties of the rating.
            </value>
            <remarks>
            You can use the <code>Value</code> property to initialize the rating component with a specific rating value, or to get the current rating value selected by the user. 
            For example, if you want to initialize the rating component with a rating of 3.5, you can set the <c>Value</c> property to 3.5.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.Visible">
            <summary> 
            Gets or sets a value that indicates whether the rating component is visible or hidden
            </summary> 
            <value> 
            <c>true</c>, if the rating component is visible. The default value is <c>true</c>. 
            </value>          
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.Created">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Inputs.SfRating"/> rendering is completed.  
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.OnItemHover">
            <summary> 
            Gets or sets an event callback that is raised when a user hovers over an item.   
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfRating.ValueChanged">
            <summary> 
            Gets or sets an event callback that is raised when the <see cref="P:Syncfusion.Blazor.Inputs.SfRating.Value"/> property is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.OnAfterScriptRendered">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.UpdateMinValue">
            <summary>
            Update the minimum value for the rating items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.UpdateValue(System.Double)">
            <summary>
            Update the Value and current value for the rating items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.ValidateValue(System.Double)">
            <summary>
            Validates the value based on the type of precision.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.GetItemValue(System.Double)">
            <summary>
            Returns a value of particular rating item calculating from <see cref="P:Syncfusion.Blazor.Inputs.SfRating.Value"/>. Returns the value ranging from 0 to 1.
            </summary>
            <param name="position">Position of a rating item ranging from 1 to ItemsCount</param>
            <returns>A value of particular rating item selection.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.MouseMoveHandler(System.Double)">
            <summary>
            Update the current value of the rating on mouse move.
            </summary>
            <param name="value">value of rating.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.MouseOutHandler(System.Double)">
            <summary>
            Updates the value of the rating on mouse out.
            </summary>
            <param name="value">value of rating.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.TouchEventHandler(System.Double,System.Boolean)">
            <summary>
            Set the value of the rating item on touch move, onclick, and on keydown.
            </summary>
            <param name="value">value of rating.</param>
            <param name="tooltipState">state of tooltip.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfRating.SetValue(System.Double)">
            <summary>
            Sets the value of the rating when user select on click, or on keydown.
            </summary>
            <param name="value">value of rating.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PrecisionType">
            <summary>
            Specifies the precision type of the rating. It is used to component the granularity of the rating, allowing users to provide ratings with varying levels of precision. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.PrecisionType.Full">
            <summary>
            The rating is increased in whole number increments. For example, if the current rating is 3, the next possible ratings are 4, 5, and so on.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.PrecisionType.Half">
            <summary>
            The rating is increased in increments of 0.5 (half). For example, if the current rating is 3.5, the next possible ratings are 4, 4.5, 5, and so on.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.PrecisionType.Quarter">
            <summary>
            The rating is increased in increments of 0.25 (quarter). For example, if the current rating is 3.75, the next possible ratings are 4, 4.25, 4.5, and so on.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.PrecisionType.Exact">
            <summary>
            The rating is increased in increments of 0.1. For example, if the current rating is 3.9, the next possible ratings are 4, 4.1, 4.2, and so on.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.LabelPosition">
            <summary>
            Specifies where to position the label in <see cref="T:Syncfusion.Blazor.Inputs.SfRating"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.LabelPosition.Top">
            <summary>
            The label is positioned at the top center of the rating component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.LabelPosition.Bottom">
            <summary>
            The label is positioned at the bottom center of the rating component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.LabelPosition.Left">
            <summary>
            The label is positioned at the left side of the rating component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.LabelPosition.Right">
            <summary>
            The label is positioned at the right side of the rating component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.RatingHoverEventArgs">
            <summary>
            Provides information about <see cref="P:Syncfusion.Blazor.Inputs.SfRating.OnItemHover"/> event. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RatingHoverEventArgs.Element">
            <summary>
            Gets the rating item element reference.
            </summary>
            <value>
            An element reference of rating item.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RatingHoverEventArgs.Value">
            <summary>
            Gets or sets the hover value at hovered point of rating.
            </summary>
            <value>
            Value  
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.RatingItemContext">
            <summary>
            Represents the context of <see cref="P:Syncfusion.Blazor.Inputs.SfRating.EmptyTemplate"/> and <see cref="P:Syncfusion.Blazor.Inputs.SfRating.FullTemplate"/> which used to render the content of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RatingItemContext.Index">
            <summary> 
            Gets or sets the index of the associated the rating item.
            </summary> 
            <value>
            An index of the rating item. The value ranges from 0 to <see cref="P:Syncfusion.Blazor.Inputs.SfRating.ItemsCount"/> - 1, where <c>ItemsCount</c> is the total number of rating items in the component.
            For example, if there are 5 rating items in the component, the ItemIndex for the first item would be 0, the ItemIndex for the second item would be 1, and so on. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RatingItemContext.Value">
            <summary> 
            Gets or sets the selected value for a particular rating item. The value range from 0 to 1.
            </summary>
            <value>
            The selected value of a particular item ranges from 0 to 1, where 0 represents no selection and 1 represents a fully selected item.  
            For example, if <code>Value</code> is set to 0.5, then half of the rating item will be selected.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfSignature">
            <summary>
            Signature allows user to draw smooth signatures as vector outline of strokes using variable width Bézier curve interpolation. 
            It allows to save signature as image.
            You can use your finger, pen, or mouse on a tablet, touchscreen, etc., to draw your own signature on this Signature component.
            </summary>
            <remarks>
            Signature is a user interface to draw the signature or text.
            It supports stroke color, background color and image.
            </remarks>
            <example>
            In the below code example, a basic Signature initialized with <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> tag directive.
            <code><![CDATA[ 
            <SfSignature style="height: 100%; width: 100%;"></SfSignature>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will applied to the <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component.
            </summary>
            <remarks>
            Additional attributes can be added as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
            <example>
            In the below code example, signature height and width has been specified as style attribute in <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/>.
            <code><![CDATA[
            <SfSignature style="height: 100%; width: 100%;"></SfSignature>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundColor">
            <summary>
            Gets or sets the background color of the component.
            </summary>
            <value>
            The background color of the component that accepts hex value, rgb and text (like <code>red</code>). The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundImage">
            <summary>
            Gets or sets the background image for the <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component.
            </summary>
            <value>
            An image that used to fill the background of the component. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.Disabled">
            <summary>
            Gets or sets whether to disable the <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component where the opacity is set to show disabled state. 
            </summary>
            <value>
            <c>true</c>, if the signature component is disabled for user interaction. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.IsReadOnly">
            <summary>
            Gets or sets whether to prevent the interaction in <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component. 
            </summary>
            <value>
            <c>true</c>, if the signature component is read only state where the user interaction is prevented. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.SaveWithBackground">
            <summary>
            Gets or sets whether to save the signature along with <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundColor"/> and <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.BackgroundImage"/> while saving. 
            </summary>
            <value>
            <c>true</c>, if signature component to save with background. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.StrokeColor">
            <summary>
            Gets or sets the stroke color of the signature.
            </summary>
            <value>
            The color of the signature stroke that accepts hex value, rgb and text (like <code>red</code>). The default value is <c>"#000000"</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth">
            <summary>
            Gets or sets the minimum stroke width for signature. 
            The <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component calculates stroke width based on <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.Velocity"/>, <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth"/> and <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth"/>.
            </summary>
            <value>
            The minimum width of stroke. The default value is <c>0.5</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth">
            <summary>
            Gets or sets the maximum stroke width for signature.
            The <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component calculates stroke width based on <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.Velocity"/>, <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth"/> and <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth"/>.
            </summary>
            <value>
            The maximum width of stroke. The default value is <c>2.0</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.Velocity">
            <summary>
            Gets or sets the velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface.
            The Signature component calculates stroke thickness based on <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.Velocity"/>, <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.MinStrokeWidth"/> and <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.MaxStrokeWidth"/>.
            </summary>
            <value>
            The velocity to calculate the stroke thickness based on the pressure of the contact on the digitizer surface. The default value is <c>0.7</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.EnablePersistence">
            <summary>
            Gets or sets whether to persist component's state between page reloads.
            </summary>
            <value>
            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.
            </value>
            <remarks>
            Component's property will be stored in browser local storage to persist component's state when page reloads.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.Changed">
            <summary>
            Gets or sets an event callback that is raised for the actions like undo, redo, clear and while user complete signing on <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component.
            </summary>
            <example>
            <code><![CDATA[
            <SfSignature Changed="@changefunc"></SfSignature>
            @code 
            {
                private void changefunc(SignatureChangeEventArgs args) 
                {
                    if (args.ActionName == "Clear")
                    {
                        // validation code goes here
                    }
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.OnSave">
            <summary>
            Gets or sets an event callback that is raised while saving the signature.
            </summary>
            <remarks>
            The file name and the file type(PNG, JPEG, SVG) can be changed using <see cref="T:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs"/> and <see cref="T:Syncfusion.Blazor.Inputs.SignatureFileType"/>.
            The event callback is raised only for the keyboard action (Ctrl + S).
            </remarks>
            <example>
            <code><![CDATA[
            <SfSignature Changed="@beforesavefunc"></SfSignature>
            @code 
            {
                private void beforesavefunc(SignatureSaveEventArgs args) 
                {        
                    args.fileType = "SignatureFileType.Jpeg";
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSignature.Created">
            <summary>
            Gets or sets an event callback that is raised when component rendering is completed.
            </summary>
            <remarks>
            You can load the pre-drawn signature when the signature component is created.
            </remarks>
            <example>
            In the below code example, the pre-drawn signature is loaded using <c>Created</c> event.
            <code><![CDATA[
            <SfSignature Created="@Created">
            </SfSignature >
            @code {
                private void Created() {
                    var sign = ""; // Base 64 or URL of the pre-drawn signature
                    signature.LoadAsync(sign);
                }
            }
            ]]></code>
            </example>
            <summary>
            Renders the base 64 string as signature on <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component. 
            </summary>
            <returns>
            A Task that completes when the component has finished the loading of base 64 string.
            </returns>
            <example>
            In the below code example, the pre-drawn signature is loaded using <c>Created</c> event.
            <code><![CDATA[
            <SfSignature @ref="signature" Created="@Created">
            </SfSignature >
            @code {
                private void Created() {
                    var sign = ""; // Base 64 or URL of the pre-drawn signature
                    signature.LoadAsync(sign, 400, 400);
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.ClearAsync">
            <summary>
            Erases all the signature strokes signed by user.
            </summary>
            <returns>
            A Task that completes when the component has finished the erasing.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.IsEmptyAsync">
            <summary>
            Returns whether the signature is empty or not.
            </summary>
            <returns>
            A Task that returns bool when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.UndoAsync">
            <summary>
            Undo the last user action.
            </summary>
            <returns>
            A Task that completes when the component has finished the undo action.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.CanUndoAsync">
            <summary>
            Returns whether the undo collection is empty or not.
            </summary>
            /// <returns>
            A Task that returns bool when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.RedoAsync">
            <summary>
            Redo the last user action.
            </summary>
            <returns>
            A Task that completes when the component has finished the redo action.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.CanRedoAsync">
            <summary>
            Returns whether the redo collection is empty or not.
            </summary>
            <returns>
            A Task that returns bool when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.SaveAsync(Syncfusion.Blazor.Inputs.SignatureFileType,System.String)">
            <summary>
            Saves the signature as an image with the given file type and name.
            </summary>
            <param name="fileName">A file name.</param>
            <param name="fileType">A file type <see cref="T:Syncfusion.Blazor.Inputs.SignatureFileType"/>.</param>
            <remarks>
            <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.SaveWithBackground"/> decides whether to save the signature with background or not. 
            </remarks>
            <returns>
            A Task that completes when the component has finished the saving operation.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.DrawAsync(System.String,System.String,System.Int32)">
            <summary>
            Draws the text as signature on <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component. 
            </summary>
            <param name="text">The text to render.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <returns>
            A Task that completes when the component has finished the drawing of text.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.LoadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Renders the base 64 string as signature on <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component. 
            </summary>
            <returns>
            A Task that completes when the component has finished the loading of base 64 string.
            </returns>
            <param name="signature">The base 64 string to render.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.GetSignatureAsync(Syncfusion.Blazor.Inputs.SignatureFileType)">
            <summary>
            Returns the signature as base 64 string.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.SaveWithBackground"/> decides whether to save the signature with background or not.
            <see cref="T:Syncfusion.Blazor.Inputs.SignatureFileType"/> decides what type of signature base64 url to be get.
            </remarks>
            <returns>
            A Task that returns base 64 string when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.SaveAsBlobAsync">
            <summary>
            Returns the signature as Blob.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.SaveWithBackground"/> decides whether to save the signature with background or not. 
            </remarks>
            <returns>
            A Task that returns the blob when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSignature.TriggerEventAsync(System.String)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.OnSave"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the save action. You can cancel and perform save operation programmatically.
            </summary>
            <value>
            The default value is <code>false</code>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs.FileType">
            <summary>
            Gets or sets the file type to be saved.
            </summary>
            <value>
            A SignatureFileType denotes the file type <see cref="T:Syncfusion.Blazor.Inputs.SignatureFileType"/>. The default value is <code>PNG</code>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SignatureSaveEventArgs.FileName">
            <summary>
            Gets or sets the file name to be saved.
            </summary>
            <value>
            A string denotes the file name. The default value is <code>Signature</code>.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SignatureChangeEventArgs">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.Inputs.SfSignature.Changed"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SignatureChangeEventArgs.ActionName">
            <summary>
            Gets or sets the action name of the signature.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SignatureFileType">
            <summary>
            Provides the signature filetype <see cref="T:Syncfusion.Blazor.Inputs.SfSignature"/> component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SignatureFileType.Png">
            <summary>
            Defines the signature filetype as PNG.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SignatureFileType.Jpeg">
            <summary>
            Defines the signature filetype as JPEG.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SignatureFileType.Svg">
            <summary>
            Defines the signature filetype as SVG.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorRange">
            <summary>
            This class represent the color, start and end position of slider track.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.ChildContent">
            <summary>
            Get and set the Slider.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.Color">
            <summary>
            Get and set the Color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.Start">
            <summary>
            Get and set the start.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.End">
            <summary>
            Get and set the End.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.ColorRange.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task" representing the asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderColorRanges">
            <summary>
            Specifies the collections of colors to the slider track based on start and end value of each color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent">
            <summary>
            Get and set the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderColorRanges.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderOrientation">
            <summary>
             Holds slider component's different orientation options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderOrientation.Horizontal">
            <summary>
            Specifies the slider rendering position as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderOrientation.Vertical">
            <summary>
            Specifies the slider rendering position as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderType">
            <summary>
            Holds slider component's different options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.Default">
            <summary>
            Specifies the slider type as Default.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.MinRange">
            <summary>
            Specifies the slider type as MinRange.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.Range">
            <summary>
            Specifies the slider type as Range.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Placement">
            <summary>
            Holds slider component's Ticks Placement options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.None">
            <summary>
            This enum value will restrict the ticks element rendering.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.Before">
            <summary>
            This is used to rendering tiks element before the slider track.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.After">
            <summary>
            This is used to rendering tiks element after the slider track.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.Both">
            <summary>
            This is used to rendering tiks element before and after the slider track.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TooltipPlacement">
            <summary>
            Holds slider component's Tooltip Placement options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipPlacement.Before">
            <summary>
            This is used to render the tooltip element before the slider track.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipPlacement.After">
            <summary>
            This is used to render the tooltip element after the slider track.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TooltipShowOn">
            <summary>
            Holds slider component's Tooltip ShowOn options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Auto">
            <summary>
            This is used to display the tooltip while click / focus the slider handle elemenet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Focus">
            <summary>
            This is used to display the tooltip while focus the slider handle elemenet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Hover">
            <summary>
            This is used to display the tooltip while hover the slider handle elemenet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Always">
            <summary>
            This is used to display the tooltip until new actions occurred in slider elemenet.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1">
            <summary>
            It is used to denote the Slider Change/Changed Event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Name">
            <summary>
            It is used to get the action applied on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.IsInteracted">
            <summary>
            It is used to check whether the event triggered is via user or programmatic way.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.PreviousValue">
            <summary>
            It is used to get the previous value of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Text">
            <summary>
            It is used to get the current text or formatted text of the Slider, which is placed in tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Value">
            <summary>
            It is used to get the current value of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTickEventArgs">
            <summary>
            It is used to denote the TicksRender event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.Text">
            <summary>
            It is used to get the label text of the tick.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.TickElementRef">
            <summary>
            It is used to get the current tick element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.Value">
            <summary>
            It is used to get the value of the tick.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.HtmlAttributes">
            <summary>
            It is used to customize tick elements.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs">
            <summary>
            It is used to denote the ticks rendered Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TickElementsRef">
            <summary>
            It returns the collection of tick elements as a reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TicksContainerRef">
            <summary>
            It returns the container of the ticks element as a reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.HtmlAttributes">
            <summary>
            It is used to customize ticks parent element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1">
            <summary>
            It is used to denote the TooltipChange Event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1.Text">
            <summary>
            It is used to get the text shown in the Slider tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1.Value">
            <summary>
            It is used to get the value of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorRangeDataModel">
            <summary>
            class for holding ColorRange properties arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.Color">
            <summary>
            It is used to set the color in the slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.End">
            <summary>
            It is used to get the end value for applying color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.Start">
            <summary>
            It is used to get the starting value for applying color.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PersistenceValues`1">
            <summary>
            Class that holds the persistence property details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TicksValues">
            <summary>
            Class that holds the tick's position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangeEventData`1">
            <summary>
            Class that holds the previous and currentValue of slider component.
            </summary>
            <typeparam name="TValue">"TValue".</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventData`1.PreviousValue">
            <summary>
            Specifies the PreviousValue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventData`1.Value">
            <summary>
            Specifies the Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventData`1.IsValueChanged">
            <summary>
            Specifies the isValueChanged.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider">
            <summary>
            Interface for holding slider properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Slider">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.CssClass">
            <summary>
            Get and set the CssClass.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.CustomValues">
            <summary>
            Get and set the CustomValues.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnableAnimation">
            <summary>
            Get and set the EnableAnimation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnablePersistence">
            <summary>
            Get and set the EnablePersistence.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnableRtl">
            <summary>
            Get and set the EnableRtl.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Enabled">
            <summary>
            Get and set the Enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Max">
            <summary>
            Get and set the Max Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Min">
            <summary>
            Get and set the Min Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Orientation">
            <summary>
            Get and set the Orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ReadOnly">
            <summary>
            Get and set the ReadOnly.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ShowButtons">
            <summary>
            Get and set the ShowButtons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Step">
            <summary>
            Get and set the Step.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Ticks">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Type">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Width">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ID">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.GetDataId">
            <summary>
            Get the Slider dataId.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Updates the Child Properties.
            </summary>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.GetLimitData">
            <summary>
            Get the Limit Data.
            </summary>
            <returns>Limit.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.TriggeredTicksRendered(Microsoft.AspNetCore.Components.ElementReference,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Triggers after the ticks rendered.
            </summary>
            <param name="ticksWrapperRef">ticksWrapperRef.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.TriggeredTicksRendering(Microsoft.AspNetCore.Components.ElementReference,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Triggers while the ticks rendered.
            </summary>
            <param name="ticksRef">ticksRef.</param>
            <param name="text">text.</param>
            <param name="value">value.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender">
            <summary>
            This class is used to render ticks to slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent">
            <exclude/>
            <summary>
            Public fiels ChildContent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.TicksClass">
            <summary>
            Class for the Tick.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement">
            <summary>
            Specifies the Partial class TickElement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.ClassName">
            <summary>
            Specifies the ClassName.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.Styles">
            <summary>
            Specifies the Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.Value">
            <summary>
            Specifies the Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.FormattedValue">
            <summary>
            Specifies the FormattedValue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.IsSmallTick">
            <summary>
            Specifies the IsSmallTick.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>""Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfSlider`1">
            <summary>
            Partial class SfSlider.
            </summary>
            <typeparam name="TValue">Generic type parameter.</typeparam>.
            <summary>
            The Slider component allows the user to select a value or range of values
            in-between the min and max range, by dragging the handle over the slider bar.
            </summary>
            <summary>
            Partial class SfSlider.
            </summary>
            <summary>
            Specifies the partial class SfSlider.
            </summary>
            <summary>
            Specifies the partial class SfSlider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Slider">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetLocale">
            <summary>
            Set Locale value for button.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetProperties">
            <summary>
            Get Public property information.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update Child Property Information.
            </summary>
            <exclude/>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetSliderValue">
            <summary>
            Get Slider Value.
            </summary>
            <returns>sliderValue.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetLimitData">
            <summary>
            Get Slider Limits data.
            </summary>
            <exclude/>
            <returns>SliderLimits().</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetDataId">
            <summary>
            Get Slider data id.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetTicksData">
            <summary>
            Get Slider ticks data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetDefaultTickValue">
            <summary>
            Get Slider ticks default data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.DynamicPropertyChange">
            <summary>
            Handling Dynamic Property changes.
            </summary>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.UpdateValue(`0,System.Int32)">
            <summary>
            Update Value Property.
            </summary>
            <exclude/>
            <param name="args">args.</param>
            <param name="activeHandle">activeHandle.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggerEvent(Syncfusion.Blazor.Inputs.ChangeEventData{`0})">
            <summary>
            Trigger onChange / Value change event.
            </summary>
            <exclude/>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TooltipHandle(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Slider Handle Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnOpen(Syncfusion.Blazor.Popups.TooltipEventArgs)">
            <summary>
            update tooltip position.
            </summary>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.IncreaseValue">
            <summary>
            Increase Slider Handle Value.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.DecreaseValue">
            <summary>
            Decrese Slider Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggeredTicksRendered(Microsoft.AspNetCore.Components.ElementReference,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calling Ticks Rendered Event.
            </summary>
            <param name="ticksWrapperRef">args.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggeredTicksRendering(Microsoft.AspNetCore.Components.ElementReference,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calling Ticks Rendering Event.
            </summary>
            <param name="ticksRef">ticksRef.</param>
            <param name="text">text.</param>
            <param name="value">sliderValue.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SerializeModel(Syncfusion.Blazor.Inputs.SfSlider{`0})">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.CloseTooltip">
            <summary>
            Closes the Tooltip Element.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ID">
            <summary>
            Sets id attribute for the slider element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.SliderEditContext">
            <summary>
            Specifies the ChildContent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.CssClass">
            <summary>
            Specifies the custom classes to be added to the element used to customize the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.CustomValues">
            <summary>
            Specifies an array of slider values in number or string type.
            The min and max step values are not considered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableAnimation">
            <summary>
            Enables/Disables the animation for slider movement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Enabled">
            <summary>
            Enables or disables the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Max">
            <summary>
            Specifies the maximum value of the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Min">
            <summary>
            Specifies the minimum value of the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Orientation">
            <summary>
             Specifies whether to render the slider in vertical or horizontal orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ReadOnly">
            <summary>
            Specifies whether the render the slider in read-only mode to restrict any user interaction.
            The slider rendered with user defined values and can’t be interacted with user actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ShowButtons">
            <summary>
            Specifies whether to show or hide the increase/decrease buttons
            of Slider to change the slider value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Step">
            <summary>
            Specifies the step value for each value change when the increase / decrease
             button is clicked or on arrow keys press or on dragging the thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Ticks">
            <summary>
            It is used to render the slider ticks options such as placement and step values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Type">
            <summary>
            Defines the type of the Slider. The available options are:
              Default - Allows to a single value in the Slider.
              MinRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.
              Range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Value">
            <summary>
            It is used to denote the current value of the Slider.
            The value should be specified in array of number when render Slider type as range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ValueChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Width">
            <summary>
            Specifies the width of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.IsImmediateValue">
            <summary>
            Specifies whether the value need to be updated at the time of dragging slider handle.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.Reposition">
            <summary>
            This method is used to reposition slider.
            </summary>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.RepositionAsync">
            <summary>
            This method is used to reposition slider.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderEvents`1">
            <summary>
            Configure handlers to handle the events of the Slider component.
            </summary>
            <typeparam name="TValue">"TValue".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.OnChange">
            <summary>
            We can trigger change event whenever Slider value is changed.
             In other term, this event will be triggered while drag the slider thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.ValueChange">
            <summary>
            Fires whenever the Slider value is changed.
            In other term, this event will be triggered, while drag the slider thumb completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.Created">
            <summary>
            Triggers when the Slider is successfully created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.TicksRendered">
            <summary>
            Triggers when the ticks are rendered on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.TicksRendering">
            <summary>
            Triggers on rendering the ticks element in the Slider,
            which is used to customize the ticks labels dynamically.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.OnTooltipChange">
            <summary>
            Triggers when the Sider tooltip value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderEvents`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderLimits">
            <summary>
            This class is used to set limit bar to slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.Parent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.Enabled">
            <summary>
            It is used to enable the limit in the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.EndHandleFixed">
            <summary>
            It is used to lock the second handle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MaxEnd">
            <summary>
            It is used to set the maximum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MaxStart">
            <summary>
            It is used to set the maximum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MinEnd">
            <summary>
            It is used to set the minimum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MinStart">
            <summary>
            It is used to set the minimum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.StartHandleFixed">
            <summary>
            It is used to lock the first handle.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderLimits.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderLimits.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderLimits.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTicks">
            <summary>
            This class is used to render ticks to slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.Format">
            <summary>
            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.LargeStep">
            <summary>
            It is used to denote the distance between two major (large) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.Placement">
            <summary>
            It is used to denote the position of the ticks in the Slider. The available options are:.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.ShowSmallTicks">
            <summary>
            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.SmallStep">
            <summary>
            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderTicks.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltip">
            <summary>
            This class is used to set a tooltip for slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.CssClass">
            <summary>
            It is used to customize the Tooltip which accepts custom CSS class names that define
             specific user-defined styles and themes to be applied on the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.Format">
            <summary>
            It is used to customize the Tooltip content to the desired format
             using internationalization or events (custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.IsVisible">
            <summary>
            It is used to show or hide the Tooltip of Slider Component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.Placement">
            <summary>
            It is used to denote the position for the tooltip element in the Slider. The available options are:
              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.
              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.ShowOn">
            <summary>
            It is used to determine the device mode to show the Tooltip.
            If it is in desktop, it will show the Tooltip content when hovering on the target element.
            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderTooltip.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangedEventArgs">
            <summary>
            Interface for changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.IsInteracted">
            <summary>
            Returns the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.PreviousValue">
            <summary>
            Returns the previously entered value of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusInEventArgs">
            <summary>
            Interface for focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusOutEventArgs">
            <summary>
            Interface for focus out event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.InputEventArgs">
            <summary>
            Interface for input event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.PreviousValue">
            <summary>
            Returns the previously updated value of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TextBoxModel">
            <summary>
            Interface for a class TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            <para>The TextBox changes from a single line to multiline when enabling this multiline mode.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfTextBox">
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Blur">
            <summary>
            Triggers when the TextBox has focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ValueChange">
            <summary>
            Triggers when the content of TextBox has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Created">
            <summary>
            Triggers when the TextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Destroyed">
            <summary>
            Triggers when the TextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Focus">
            <summary>
            Triggers when the TextBox gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Input">
            <summary>
            Triggers each time when the value of TextBox has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            The TextBox changes from a single line to multiline when enabling this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.TextBoxParent">
            <summary>
            Parent component of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.AddIcon(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adding the icons to the TextBox component.
            </summary>
            <param name="position">The adding icons to the component based on position for prepend/append.</param>
            <param name="icons">The icons class is added to icon element.</param>
            <param name="events">The icon events are added to the events element</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.AddIconAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adding the icons to the TextBox component.
            </summary>
            <param name="position">The adding icons to the component based on position for prepend/append.</param>
            <param name="icons">The icons class is added to icon element.</param>
            <param name="events">The icon events are added to the events element</param>
            <example>The below code demonstrates usage of AddIconAsync method through component instance. While passing Events parameter, ontouchstart denotes the Event type and the touchstart denotes the EventHandler method.
            <code>
            <![CDATA[
            Instance.AddIconAsync("prepend", "e-icon-pan", new Dictionary<string, object>() { { "ontouchstart", touchStart } });
            ]]>
            </code>
            </example>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusIn">
            <summary>
            Sets the focus to TextBox component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusAsync">
            <summary>
            Sets the focus to TextBox component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusOut">
            <summary>
            Remove the focus from TextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusOutAsync">
            <summary>
            Remove the focus from TextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.InvokeInputEvent">
            <summary>
            Bind the input event to the input element for enabled clear button and floatlabel to the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">Specifies the root class of the component.</param>
            <param name="containerClass">Specifies the container class of the component.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfUploader">
            <summary>
            The uploader component is useful to upload images, documents, and other files to server.
            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.
            </summary>
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
            <summary>
            The uploader component is useful to upload images, documents, and other files to server.
            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ID">
            <summary>
            Specifies the id of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions
            with comma separators.
            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as ".jpg,.png".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnableHtmlSanitizer">
            <summary>
            Gets or sets whether to prevent the cross site scripting code in filename or not.
            </summary>
            <value>
            <c>true</c>, if the component prevents the cross site scripting code in filename; otherwise,<c>false</c>. The default value is <c>true</c>.       
            </value>
            <remarks>
            The Enable HtmlSanitizer property removes the cross-site scripting code or functions from the filename and shows the validation error message to the user.
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AutoUpload">
            <summary>
            By default, the Uploader component initiates automatic upload when the files are added in upload queue.
            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>
            <para>The buttons "upload" and "clear" will be hided from file list when AutoUpload property is true.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the Uploader.
            One or more custom CSS classes can be added to a Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DirectoryUpload">
            <summary>
            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the Uploader creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DropEffect">
            <summary>
            Specifies the drag operation effect to the Uploader component.
            <para> Possible values are .</para>
            <list type="bullet">
            <item>
            <term>Copy</term>
            </item>
            <item>
            <term>Move</term>
            </item>
            <item>
            <term>Link</term>
            </item>
            <item>
            <term>None</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnablePersistence">
            <summary>
            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnableRtl">
            <summary>
            Enable or disable rendering Uploader in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AllowMultiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.SequentialUpload">
            <summary>
            By default, the file Uploader component is processing the multiple files simultaneously.
            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ShowFileList">
            <summary>
            Specifies a boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.TabIndex">
            <summary>
            Specifies the tab order of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PropertyInitialized">
            <summary>
            Method provides initial values to the properties.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PropertyParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BytesToSize(System.Double)">
            <summary>
            It is used to convert bytes value into kilobytes or megabytes depending on the size based
            on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).
            </summary>
            <param name="bytes">Specifies the file size in bytes.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BytesToSizeAsync(System.Double)">
            <summary>
            It is used to convert bytes value into kilobytes or megabytes depending on the size based
            on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).
            </summary>
            <param name="bytes">Specifies the file size in bytes.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Cancel(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Stops the in-progress chunked upload based on the file data.
            When the file upload is canceled, the partially uploaded file is removed from server.
            </summary>
            <param name="fileData">specifies the files data to cancel the progressing file.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CancelAsync(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Stops the in-progress chunked upload based on the file data.
            When the file upload is canceled, the partially uploaded file is removed from server.
            </summary>
            <param name="fileData">specifies the files data to cancel the progressing file.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAll">
            <summary>
            Clear all the file entries from list that can be uploaded files or added in upload queue.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAllAsync">
            <summary>
            Clear all the file entries from list that can be uploaded files or added in upload queue.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CreateFileList(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Create the file list for specified files data.
            </summary>
            <param name="fileData">Specifies the file data.</param>
            <param name="isSelectedFile">true if the file is selected.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFilesData(System.Nullable{System.Double})">
            <summary>
            Get the data of files which are shown in file list.
            </summary>
            <param name="index">Specifies the index.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFilesDataAsync(System.Nullable{System.Double})">
            <summary>
            Get the data of files which are shown in file list.
            </summary>
            <param name="index">Specifies the index.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Pause(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo},System.Nullable{System.Boolean})">
            <summary>
            Pauses the in-progress chunked upload based on the file data.
            </summary>
            <param name="fileData">specifies the files data to pause from uploading.</param>
            <param name="custom">Set true if used custom UI.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PauseAsync(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo},System.Nullable{System.Boolean})">
            <summary>
            Pauses the in-progress chunked upload based on the file data.
            </summary>
            <param name="fileData">specifies the files data to pause from uploading.</param>
            <param name="custom">Set true if used custom UI.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Remove(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object)">
            <summary>
            Remove the uploaded file from server manually by calling the remove URL action.
            <para>If you pass an empty argument to this method, the complete file list can be cleared,
            otherwise remove the specific file based on its argument ("file_data").</para>
            </summary>
            <param name="fileData">specifies the files data to remove from file list/server.</param>
            <param name="customTemplate">Set true if the component rendering with customize template.</param>
            <param name="removeDirectly">Set true if files remove without removing event.</param>
            <param name="postRawFile">Set false, to post file name only to the remove action.</param>
            <param name="args"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemoveAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object)">
            <summary>
            Remove the uploaded file from server manually by calling the remove URL action.
            <para>If you pass an empty argument to this method, the complete file list can be cleared,
            otherwise remove the specific file based on its argument ("file_data").</para>
            </summary>
            <param name="fileData">specifies the files data to remove from file list/server.</param>
            <param name="customTemplate">Set true if the component rendering with customize template.</param>
            <param name="removeDirectly">Set true if files remove without removing event.</param>
            <param name="postRawFile">Set false, to post file name only to the remove action.</param>
            <param name="args"></param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Resume(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Resumes the chunked upload that is previously paused based on the file data.
            </summary>
            <param name="fileData">specifies the files data to resume the paused file.</param>
            <param name="custom"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ResumeAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Resumes the chunked upload that is previously paused based on the file data.
            </summary>
            <param name="fileData">specifies the files data to resume the paused file.</param>
            <param name="custom"></param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Retry(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retries the canceled or failed file upload based on the file data.
            <param name="fileData">specifies the files data to retry the canceled or failed file</param>
            <param name="fromcanceledStage">Set true to retry from canceled stage and set false to retry from initial stage.</param>
            <param name="custom"></param>
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RetryAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retries the canceled or failed file upload based on the file data.
            <param name="fileData">specifies the files data to retry the canceled or failed file</param>
            <param name="fromcanceledStage">Set true to retry from canceled stage and set false to retry from initial stage.</param>
            <param name="custom"></param>
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SortFileList(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Allows you to sort the file data alphabetically based on its file name clearly.
            </summary>
            <param name="filesData">specifies the files data for upload.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SortFileListAsync(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Allows you to sort the file data alphabetically based on its file name clearly.
            </summary>
            <param name="filesData">specifies the files data for upload.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Upload(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Allows you to call the upload process manually by calling save URL action.
            <para>To process the selected files (added in upload queue), pass an empty argument otherwise
            upload the specific file based on its argument.</para>
            </summary>
            <param name="files">specifies the files data for upload.</param>
            <param name="custom">specifies the custom files.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UploadAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Allows you to call the upload process manually by calling save URL action.
            <para>To process the selected files (added in upload queue), pass an empty argument otherwise
            upload the specific file based on its argument.</para>
            </summary>
            <param name="files">specifies the files data for upload.</param>
            <param name="custom">specifies the custom files.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFileDetails(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo})">
            <summary>
            Task which retrieves the file data.
            </summary>
            <param name="file">Specifies the file.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CreateFileList(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.Internal.UploadFileDetails},System.Boolean)">
            <summary>
            Task which creates the file list.
            </summary>
            <param name="fileData">Specifies the file data.</param>
            <param name="isForm">true if the component inside form.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAllFile">
            <summary>
            Task which clears the file list.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemoveFileData(System.Int32)">
            <summary>
            Method which removes the file data.
            </summary>
            <param name="index">Specifies the index.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UpdateServerFileData(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.Internal.UploadFileDetails},System.Boolean)">
            <summary>
            Method which update the file data  in server.
            </summary>
            <param name="fileData">Specifies the filedata.</param>
            <param name="isForm">true if the component rendered inside the form component.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SelectedEvent(Syncfusion.Blazor.Inputs.SelectedEventArgs)">
            <summary>
            Task which specifies the selected event.
            </summary>
            <param name="args">Selected event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemovingEvent(Syncfusion.Blazor.Inputs.RemovingEventArgs)">
            <summary>
            Task which specifies the RemovingEvent.
            </summary>
            <param name="args">Specifies the removing event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ActionCompleteEvent(Syncfusion.Blazor.Inputs.ActionCompleteEventArgs)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="args">Specifies the action complete event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SuccessEvent(Syncfusion.Blazor.Inputs.SuccessEventArgs)">
            <summary>
            Task which specifies the success event .
            </summary>
            <param name="args">Specifies the success event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChangeEvent(Syncfusion.Blazor.Inputs.UploadChangeEventArgs)">
            <summary>
            Task which specifies the change event.
            </summary>
            <param name="args">Specifies the upload change event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.FailureEvent(Syncfusion.Blazor.Inputs.FailureEventArgs)">
            <summary>
            Task which specifies the failure event.
            </summary>
            <param name="args">FailureEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkFailureEvent(Syncfusion.Blazor.Inputs.FailureEventArgs)">
            <summary>
            Task which specifies the chunk failure event.
            </summary>
            <param name="args">FailureEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.FileListRenderingEvent(Syncfusion.Blazor.Inputs.FileListRenderingEventArgs)">
            <summary>
            Task which specifies the file list rendering event.
            </summary>
            <param name="args">FileListRenderingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ProgressEvent(Syncfusion.Blazor.Inputs.ProgressEventArgs)">
            <summary>
            Task which specifies the progress event.
            </summary>
            <param name="args">ProgressEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CancelingEvent(Syncfusion.Blazor.Inputs.CancelEventArgs)">
            <summary>
            Task which specifies the canceling event.
            </summary>
            <param name="args">CancelEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UploadingEvent(Syncfusion.Blazor.Inputs.UploadingEventArgs)">
            <summary>
            Task which specifies the uploading event.
            </summary>
            <param name="args">UploadingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkUploadingEvent(Syncfusion.Blazor.Inputs.UploadingEventArgs)">
            <summary>
            Task which specifies the chunk uploading event.
            </summary>
            <param name="args">UploadingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkSuccessEvent(Syncfusion.Blazor.Inputs.SuccessEventArgs)">
            <summary>
            Task which specifies the chunk success event.
            </summary>
            <param name="args">SuccessEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PausingEvent(Syncfusion.Blazor.Inputs.PauseResumeEventArgs)">
            <summary>
            Task which specifies the pausing event.
            </summary>
            <param name="args">PauseResumeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ResumingEvent(Syncfusion.Blazor.Inputs.PauseResumeEventArgs)">
            <summary>
            Task which specifies the resuming event.
            </summary>
            <param name="args">PauseResumeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BeforeUploadEvent(Syncfusion.Blazor.Inputs.BeforeUploadEventArgs)">
            <summary>
            Task which specifies the before upload event.
            </summary>
            <param name="args">BeforeUploadEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BeforeRemoveEvent(Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs)">
            <summary>
            Task specifies the before remove event.
            </summary>
            <param name="args">BeforeRemoveEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearingEvent(Syncfusion.Blazor.Inputs.ClearingEventArgs)">
            <summary>
            Task specifies the clearing event.
            </summary>
            <param name="args">ClearingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the firts time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update the dropdownlist fileds.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderAsyncSettings">
            <summary>
            Specifies the Uploader Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChunkSize">
            <summary>
            Specifies the ChunkSize to split the large file into chunks, and upload it to the server in a sequential order.
            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.
            It must be specified in bytes value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            <para>The remove action type must be POST request and define "RemoveFileNames" attribute to get file information that will be removed.
            This property is optional.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RetryCount">
            <summary>
            Specifies the number of retries that the Uploader can perform on the file failed to upload.
            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            <para>The save action type must be POST request and define the argument as same input name used to render the component.
            The upload operations could not perform without this property.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.OnParametersSetAsync">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderButtons">
            <summary>
            Customize the default text of browse, clear, and upload buttons with plain text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Browse">
            <summary>
            Specifies the text or html content to browse button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Clear">
            <summary>
            Specifies the text or html content to clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Upload">
            <summary>
            Specifies the text or html content to upload button.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderButtons.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderButtons.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderEvents">
            <summary>
            Specifies the Uploader Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnCancel">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.ValueChange">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkFailure">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkUploadStart">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnClear">
            <summary>
            Triggers before clearing the items in file list when clicking "clear".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFailure">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFileListRender">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Paused">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Progressing">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnRemove">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnResume">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.FileSelected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnUploadStart">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderEvents.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderFiles">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderFiles.Files">
            <summary>
            Specifies the uploaded file list.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderFiles.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderUploadedFiles">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Name">
            <summary>
            Specifies the name of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Size">
            <summary>
            Specifies the size of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Type">
            <summary>
            Specifies the type of the file.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent">
             <summary>
             Specifies the content that has to be passed.
             </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.Uploader">
            <summary>
            Returns the upload locale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.NumericTextBox">
            <summary>
            Returns the numerictextbox locale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.FormValidator">
            <summary>
            Returns the formValidator locale.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.UploaderLocale">
            <summary>
            Gets or sets the UploaderLocale property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Browse">
            <summary>
            Gets or sets the Browse property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Clear">
            <summary>
            Gets or sets the Clear property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Upload">
            <summary>
            Gets or sets the Upload property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.DropFilesHint">
            <summary>
            Gets or sets the DropFilesHint property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InvalidMaxFileSize">
            <summary>
            Gets or sets the InvalidMaxFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InvalidMinFileSize">
            <summary>
            Gets or sets the InvalidMinFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InvalidFileType">
            <summary>
            Gets or sets the InvalidFileType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.UploadFailedMessage">
            <summary>
            Gets or sets the UploadFailedMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.UploadSuccessMessage">
            <summary>
            Gets or sets the UploadSuccessMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.RemovedSuccessMessage">
            <summary>
            Gets or sets the RemovedSuccessMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.RemovedFailedMessage">
            <summary>
            Gets or sets the RemovedFailedMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InProgress">
            <summary>
            Gets or sets the InProgress property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.ReadyToUploadMessage">
            <summary>
            Gets or sets the ReadyToUploadMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Abort">
            <summary>
            Gets or sets the Abort property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Remove">
            <summary>
            Gets or sets the Remove property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Cancel">
            <summary>
            Gets or sets the Cancel property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Delete">
            <summary>
            Gets or sets the Delete property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.PauseUpload">
            <summary>
            Gets or sets the PauseUpload property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Pause">
            <summary>
            Gets or sets the Browse property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Resume">
            <summary>
            Gets or sets the Resume property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Retry">
            <summary>
            Gets or sets the Retry property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.FileUploadCancel">
            <summary>
            Gets or sets the FileUploadCancel property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.NumericTextBoxLocale">
            <summary>
            Gets or sets the NumericTextBoxLocale property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.NumericTextBoxLocale.IncrementTitle">
            <summary>
            Gets or sets the IncrementTitle property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.NumericTextBoxLocale.DecrementTitle">
            <summary>
            Gets or sets the DecrementTitle property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FormValidatorLocale">
            <summary>
            Gets or sets the FormValidatorLocale property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Required">
            <summary>
            Gets or sets the Required property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Email">
            <summary>
            Gets or sets the Email property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Url">
            <summary>
            Gets or sets the Url property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Date">
            <summary>
            Gets or sets the Date property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.DateIso">
            <summary>
            Gets or sets the DateIso property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Creditcard">
            <summary>
            Gets or sets the Creditcard property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Number">
            <summary>
            Gets or sets the Number property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Digits">
            <summary>
            Gets or sets the Digits property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.MaxLength">
            <summary>
            Gets or sets the MaxLength property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.MinLength">
            <summary>
            Gets or sets the MinLength property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.RangeLength">
            <summary>
            Gets or sets the RangeLength property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Range">
            <summary>
            Gets or sets the Range property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Max">
            <summary>
            Gets or sets the Max property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Min">
            <summary>
            Gets or sets the Min property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Regex">
            <summary>
            Gets or sets the Regex property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Tel">
            <summary>
            Gets or sets the Tel property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Pattern">
            <summary>
            Gets or sets the Pattern property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.EqualTo">
            <summary>
            Gets or sets the EqualTo property.
            </summary>
        </member>
    </members>
</doc>
