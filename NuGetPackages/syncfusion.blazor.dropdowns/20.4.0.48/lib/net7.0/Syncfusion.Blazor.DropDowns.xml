<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.DropDowns</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2">
            <summary>
            Specifies the AutoComplete Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of AutoCompleteEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Opened">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Closed">
            <summary>
            Triggers when the popup closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteTemplates`1">
            <summary>
            The AutoComplete has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
            /// <typeparam name="TItem">Specifies the type of AutoCompleteTemplates.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfAutoComplete`2">
            <summary>
            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.
            </summary>
            <summary>
            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.Highlight">
            <summary>
            When set to 'true', highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.MinLength">
            <summary>
            Allows you to set the minimum search character length, the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.SuggestionCount">
            <summary>
            Supports the specified number of list items on the suggestion popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.AutoCompleteParent">
            <summary>
            Parent component of AutoComplete.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ROOT">
            <summary>
            Specifies the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.IsFilter">
            <summary>
            Specifies whether filter option is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeBeforeOpen">
            <summary>
            Triggers before the popup get opened.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeAfterClosed">
            <summary>
            Triggers after the popup get closed.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokePopupEvents(System.Boolean)">
            <summary>
            Invoked when popup get opened.
            </summary>
            <param name="isOpen">True if the popup in open state.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeSelectEvent(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Method which returns the selected event arguments.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Speciifes the EventArgs arguments.</param>
            <param name="keyArgs">Speciifes the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeChangeEvent(System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Method which returns the change event arguments.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.SearchList(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.FocusHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused in.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeBlur">
            <summary>
            Triggers when component get focused out.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.IsEditTextBox">
            <summary>
            Specifies whether it is edit textbox.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateFocusItem(`1)">
            <summary>
            Task which updates the focus item.
            </summary>
            <param name="focusItem">Specifies the focus item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Method which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ClearAll(System.EventArgs)">
            <summary>
            Specifies the clear all event.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which pecifies the action begin event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateMainData">
            <summary>
            Method which updates main data.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeCustomValueEvent">
            <summary>
            Task which specifies the custom value event.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ListItemCreated(Syncfusion.Blazor.DropDowns.ListOptions{`1})">
            <summary>
            Task which specifies the list item created event.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <returns>ListOptions.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.HighLightSearch(System.String,System.Boolean,Syncfusion.Blazor.DropDowns.FilterType,System.String)">
            <summary>
            Highlight the searched characters on suggested list items.
            </summary>
            <param name="textValue">highlight the list item.</param>
            <param name="ignoreCase">performing the search  text based on casing.</param>
            <param name="filtertype">Determines on which filter type, the highlight text update on the text.</param>
            <param name="highLighText"> Higlighted the char based on hightligh text and this is  optional. If not provide the highlightText, it wil get the filter value.</param>
            <returns>Returns highlight string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the autocomplete fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1">
            <summary>
            The DropDowns has been provided with several options to customize each list item, group title, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of DropDownsTemplates.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.IsFaiure">
            <summary>
            IsActionFaiure set to true, then the action failure template is show in popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.LocaleKey">
            <summary>
            Get the no record locale key for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.FailureLocaleKey">
            <summary>
            Get the action failure locale key for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.LocaleValue">
            <summary>
            Get the no record locale value for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.FailureLocaleValue">
            <summary>
            Get the action failure locale value for dropdowns component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.UpdateChildProperties(System.Object)">
             <summary>
             Update the dropdownlist fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfDropDownBase`1">
            <summary>
            The DropDownBase can be created data source and fetch the list of data from data bound component.
            </summary>
            <typeparam name="T">Specifies the type of SfDropDownBase.</typeparam>
            <summary>
            The DropDownBase can be created data source and fetch the list of data from data bound component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Fields">
            <summary>
            <para>The `Fields` property maps the columns of the data table and binds the data to the component.</para>
            <list type="bullet">
            <item>
            <term>Text</term>
            <description>Maps the text column from data table for each list item.</description>
            </item>
            <item>
            <term>Value</term>
            <description>Maps the value column from data table for each list item.</description>
            </item>
            <item>
            <term>IconCss</term>
            <description>Maps the icon class column from data table for each list item.</description>
            </item>
            <item>
            <term>GroupBy</term>
            <description>Group the list items with it's related items by mapping groupBy field.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ItemTemplate">
            <summary>
            Gets or sets the template design and assigns it to each list item present in the popup.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GroupTemplate">
            <summary>
            Gets or sets the template design and assigns it to the group headers present in the popup list.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.NoRecordsTemplate">
            <summary>
            Gets or sets the template design and assigns it to popup list of component, when no data is available on the component.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionFailureTemplate">
            <summary>
            Gets or sets the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SortOrder">
            <summary>
            <para>Specifies the `SortOrder` to sort the data source.</para>
            <para>The available type of sort orders are.</para>
            <list type="bullet">
            <item>
            <term>None</term>
            <description>The data source is not sorting.</description>
            </item>
            <item>
            <term>Ascending</term>
            <description>The data source is sorting with ascending order.</description>
            </item>
            <item>
            <term>Descending</term>
            <description>The data source is sorting with descending order.</description>
            </item>
            </list>
            </summary>
            <value> 
            The order of sorting the list items. The default value is <c>SortOrder.None</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.DataSource">
            <summary>
            <para>Gets or sets the list items either through local or remote service and binds it to the component.</para>
            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>
            </summary>
            <value> 
            Binding data to the popup element. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Query">
            <summary>
            Gets or sets the external `Query` that execute along with data processing.
            </summary>
            <value> 
            Query value to be used for data fetching. The default value is <c>null</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.FilterType">
            <summary>
            Gets or sets which filter type, the component needs to be considered on search action.
            </summary>
            <value> 
            The filter type specifed for searching the list items. The default value is <c>FilterType.StartsWith</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IgnoreCase">
            <summary>
            Gets or sets whether case-sensitivity is enabled or disabled when searching for suggestions.
            </summary>
            <value>
            <c>false</c>, consider the `case-sensitive` on performing the search to find suggestions. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IgnoreAccent">
            <summary>
            Gets or sets whether diacritic characters or accents are ignored.
            </summary>
            <value>
            <c>true</c>, ignores the diacritic characters or accents when filtering. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ZIndex">
            <summary>
            Gets or sets the z-index value of the component popup element.
            </summary>
            <value> 
            The ZIndex value for the popup element.The default value is <c>1000</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.DropDownsEditContext">
            <summary>
            Gets or sets the edit context of dropdown base.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ListData">
            <summary>
            Specifies the list data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.MainData">
            <summary>
            Specifies the main data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ListDataSource">
            <summary>
            Specifies the list data source.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.DataId">
            <summary>
            Specifies the copy of the ID property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ItemData">
            <summary>
            Specifies the item data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.MatchItems">
            <summary>
            Specifies the match items.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsActionFaiure">
            <summary>
            Specifies whether the action get failed or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.TotalCount">
            <summary>
            Specifies the total count.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ComponentName">
            <summary>
            Specifies the list data.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.TupleTypes">
            <summary>
            Classification of tuples 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Render(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.DropDowns.FieldSettingsModel,Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which render the component with provided datasource , fields and query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="fields">Specifies the fields.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SetListData(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.DropDowns.FieldSettingsModel,Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which sets the list data.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="fields">Specifies the fields.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionBegin(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task specifies the action begin.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionComplete(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Methods which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>query.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SetFields">
            <summary>
            Method which sets the fields.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SimpleDataExecute(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Specifies the data execute.
            </summary>
            <param name="data">Specifies the data.</param>
            <param name="query">Specifies the query.</param>
            <returns>Simple data.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.CloneQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Method which clones the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GetDataByText(System.String,System.String)">
            <summary>
            Method which gets data by text.
            </summary>
            <param name="ddlText">Specifies the text value.</param>
            <param name="field">Specifies the field.</param>
            <returns>Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IncrementalSearch(System.String,System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Method which specifies the incremental search.
            </summary>
            <param name="queryString">Specifies the query string.</param>
            <param name="items">Specifies the items.</param>
            <param name="selectedIndex">Specifies the selectes index.</param>
            <param name="ignoreCase">Specifies the ignore case.</param>
            <returns>Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Search(System.String,System.Collections.Generic.IEnumerable{`0},System.String,System.Boolean)">
            <summary>
            Method which specifies the search action.
            </summary>
            <param name="inputValue">Specifies the input element value.</param>
            <param name="items">Specifies the items.</param>
            <param name="searchType">Specifies the search type.</param>
            <param name="ignoreCase">Specifies whether the case can be ignored or not. </param>
            <returns>Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SetItemValue(System.String,System.Type)">
            <summary>
            Method which set item value.
            </summary>
            <param name="itemValue">Specifies the item value.</param>
            <param name="valueType"></param>
            <returns>Type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsTuple(System.Type)">
            <summary>
            Determines the value or item  type is tuple or not.
            </summary>
            <param name="type">Type of value</param>
            <returns>bool</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GetTupleData(System.Type,System.String)">
            <summary>
            Returns the new instance of tuple itemdata based on the value provided to it.
            </summary>
            <param name="valueType">Type of value</param>
            /// <param name="itemValue">value to be assigned</param>
            <returns>Object</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsFields(System.String)">
            <summary>
            Checks whether the property is mapped either to Value or Text in Fieldsettings
            </summary>
            <param name="ItemName">Field Name</param>
            <returns>Bool</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsSimpleDataType">
            <summary>
            Method speciifes whether the data is simple data type.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.AddItems(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32})">
            <summary>
            Add new items to the popup list. By default, new items append to the list as the last item, but you can insert based on the index parameter.
            </summary>
            <param name="items">Specifies the items append to the list based on index.</param>
            <param name="itemIndex">Specifies the index to place the newly added item in the popup list.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.AddItemsAsync(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32})">
            <summary>
            Add new items to the popup list. By default, new items append to the list as the last item, but you can insert based on the index parameter.
            </summary>
            <param name="items">Specifies the items append to the list based on index.</param>
            <param name="itemIndex">Specifies the index to place the newly added item in the popup list.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.InsertItem(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Method which inserts the item.
            </summary>
            <param name="items">Specifies the items.</param>
            <param name="itemIndex">Specifies the item index.</param>
            <param name="preventInit">Specifies whether it  preventInit or not.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsFilter">
            <summary>
            Method specifies whether  filter mode or not.
            </summary>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.RenderItems">
            <summary>
            Task which render the component with provided datasource.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.HighlightSearch(System.String,System.String,System.Boolean,Syncfusion.Blazor.DropDowns.FilterType)">
            <summary>
            Method specifies the higlight search action.
            </summary>
            <param name="liConent">Specifies the list content.</param>
            <param name="searchText">Specifies the search text.</param>
            <param name="ignoreCase">Specifies whether cases can be ignored or not.</param>
            <param name="highlightType">Specifies the highlight type.</param>
            <returns>string.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ListItemCreated(Syncfusion.Blazor.DropDowns.ListOptions{`0})">
            <summary>
            Triggers while the list item get created.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <returns>ListOptions.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListOptions`1">
            <summary>
            Specifies the list options.
            </summary>
            <typeparam name="T">Specifies the type of ListOptions.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.Text">
            <summary>
            Specifies the Text property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.Value">
            <summary>
            Specifies the Value property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.GroupBy">
            <summary>
            Specifies the GroupBy  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.IsHeader">
            <summary>
            Specifies the IsHeader  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.ShowIcon">
            <summary>
            Specifies the ShowIcon  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.Items">
            <summary>
            Specifies the Items  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.CurItemData">
            <summary>
            Specifies the  CurItemData property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.ListClass">
            <summary>
            Specifies the ListClass  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.IconCss">
            <summary>
            Specifies the IconCss  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.GroupItems">
            <summary>
            Specifies the GroupItems property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.ListAttribute">
            <summary>
            Specifies the ListAttribute property.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.KeyActions">
            <summary>
            Specifies the key action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Action">
            <summary>
            Specifies the  action property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Key">
            <summary>
            Specifies the key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Events">
            <summary>
            Specifies the events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Type">
            <summary>
            Specifies the type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DataItems`1">
            <summary>
            Specifies the data items.
            </summary>
            <typeparam name="TVal">Specifies the type of DataItems.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataItems`1.Text">
            <summary>
            Specifies the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataItems`1.Value">
            <summary>
            Specifies the value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComposedItemModel`1">
            <summary>
            common class model for grouped list.
            </summary>
            <typeparam name="T">Specifies the type of ComposedItemModel.</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.IsGroupItem">
            <summary>
            Specifies whether it is a group item or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Data">
            <summary>
            Returns the grouped data items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Key">
            <summary>
            Returns the grouped key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.IsHeader">
            <summary>
            Returns the list item is group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Id">
            <summary>
            Returns the id of the group list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Text">
            <summary>
            Returns the text of the grouping field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Items">
            <summary>
            Returns the grouped items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.EnableRtl">
            <summary>
            Specifies whether the component is in rtl mode or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.ZIndex">
            <summary>
            Specifies the z-index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.PopupWidth">
            <summary>
            Specifies the popup width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.PopupHeight">
            <summary>
            Specifies the popup height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.Width">
            <summary>
            Specifies the width of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.AllowFiltering">
            <summary>
            Specifies whether filtering is allowed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.ModuleName">
            <summary>
            Specifies the module name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.EnableVirtualization">
            <summary>
            Specifies whether the virtualization is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.DelimiterChar">
            <summary>
            Specifies the delimeter character.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.OverFlowContent">
            <summary>
            Specifies the over flow content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.TotalCountContent">
            <summary>
            Specifies the total count of the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.DelimValue">
            <summary>
            Specifies the delimeter value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.Mode">
            <summary>
            Specifies the mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectedData`1">
            <summary>
            Specifies the selected data.
            </summary>
            <typeparam name="TItem">Specifies the type of SelectedData.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.Text">
            <summary>
            Specifies the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.Value">
            <summary>
            Specifies the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.ItemData">
            <summary>
            Specifies the item data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.ChipClass">
            <summary>
            Specifies the chip class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2">
            <summary>
            Specifies the DropDownList Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of ComboBoxEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxTemplates`1">
            <summary>
            The ComboBox has been provided with several options to customize each list item, group title, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of ComboBoxTemplates.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfComboBox`2">
            <summary>
            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.
            </summary>
            <summary>
            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfComboBox.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ValidateOnInput">
            <summary>
            Specifies a boolean value that indicates whether the component validates the input or not.
            </summary>
            <value>
            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
            <remarks>
            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ComboBoxParent">
            <summary>
            Parent component of ComboBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ROOT">
            <summary>
            Specifies the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.IsFilter">
            <summary>
            Task which specifies whether filter action is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateMainData">
            <summary>
            Method which updates main data.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeBeforeOpen">
            <summary>
            Triggers before popup get opened.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeAfterClosed">
            <summary>
            Triggers after the popup get closed.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateAriaAttributes">
            <summary>
            Method which update the aria attributes.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.FocusHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused in.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeBlur">
            <summary>
            Triggers when component get focused out.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.OnChangeHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies ChangeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.FocusOutHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused out.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.FilterInputHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when any value provided to filter input.
            </summary>
            <param name="args">Specifies the ChangeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokePopupEvents(System.Boolean)">
            <summary>
            Invokes the popup event.
            </summary>
            <param name="isOpen">True if the popup is in open state otherwise false.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeSelectEvent(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Triggers when item get selected.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeChangeEvent(System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <param name="keyArgs">Specifies KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateValue">
            <summary>
            Task which updates the value.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.SetOldValue(System.Object,System.Boolean)">
            <summary>
            Task which sets the old value.
            </summary>
            <param name="ddlValue">Specifies the DropDownList value.</param>
            <param name="isValueChanged"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateAutoFillOnDown(`1)">
            <summary>
            Task which update auto fill on down action.
            </summary>
            <param name="curItem">Specifies the current item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.SearchList(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.IncrementSearch">
            <summary>
            Task which incrment the search.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InlineSearch">
            <summary>
            Task which performs the in line search.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeCustomValueEvent">
            <summary>
            Task which specifies the custom value event.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.CustomValue(System.Boolean,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which specifies the custom value.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which pecifies the action begin event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the combobox fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2">
            <summary>
            Defines the SfDropDownList events of the component.
            </summary>
            <typeparam name="TValue">A type which provides for the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value"/> poperty type.</typeparam>
            <typeparam name="TItem">A type which provides data list schema for the dropdown list events.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.BaseParent">
            <summary>
            Specifies the base parent of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionBegin">
            <summary>
            Gets or sets the event callback that will be invoked before fetching data from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionComplete">
            <summary>
            Gets or sets the evnet callback that will be invoked after data is fetched successfully from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionFailure">
            <summary>
            Gets or sets the event callback that will be invoked when the data fetch request fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnOpen">
            <summary>
            Gets or sets the event callback that will be invoked when the dropdown popup before opens.
            </summary>
            <remarks>
            You can prevent the dropdown popup open action using <see cref="P:Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListEvents TValue="string" TItem="string" OnOpen="@OnOpenHandler"/>
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
                public void OnOpenHandler(BeforeOpenEventArgs args) {
                    args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Blur">
            <summary>
            Gets or sets the event callback that will be invoked when the dropdown list loses focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.ValueChange">
            <summary>
            Gets or sets the event callback that will be invoked when the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value"/> property changed.
            </summary>
            <remarks>
            This event triggers when an item in a popup is selected or when the model value is changed by user.
            </remarks>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListEvents TValue="string" TItem="string" ValueChange="@OnChange"/>
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
                public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, string> args) {
                    var DDLValue = args.Value;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnClose">
            <summary>
            Gets or sets the event callback that will be invoked before the dropdown popup is close.
            </summary>
            <remarks>
            You can prevent the dropdown popup close action using <see cref="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Cancel"/> and the popup remains opened always.
            </remarks>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListEvents TValue="string" TItem="string" OnClose="@OnCloseHandler"/>
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
                public void OnCloseHandler(PopupEventArgs args) {
                    args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Created">
            <summary>
            Gets or sets the event callback that will be invoked when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.DataBound">
            <summary>
            Gets or sets the event callback that will be invoked when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Destroyed">
            <summary>
            Gets or sets the event callback that will be invoked when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Filtering">
            <summary>
            Gets or sets the event callback that will be invoked on typing a character in the filter textbox.
            </summary>
            <remarks>
            You can prevent the default filter action and make your query enable the <see cref="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.PreventDefaultAction"/> event argument, and pass the modify data source and query in <see cref="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterAsync(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)"/> method.
            </remarks>
            <example>
            <code><![CDATA[
            <SfDropDownList @ref="DDLObj" TItem="string" TValue="string" AllowFiltering="true" DataSource="@MyList">
                <DropDownListEvents TValue="string" TItem="string" Filtering="@OnFilteringHandler" />
            </SfDropDownList>
            @code{
                SfDropDownList<string, string> DDLObj { get; set; }
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
                public async Task OnFilteringHandler(FilteringEventArgs args) {
                    args.PreventDefaultAction = true;
                    var query = new Query().Where(new WhereFilter() { Field = "Text", Operator = "contains", value = args.Text, IgnoreCase = true });
                    await DDLObj.FilterAsync(MyList, query);
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Focus">
            <summary>
            Gets or sets the event callback that will be invoked when the component is the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Opened">
            <summary>
            Gets or sets the event callback that will be invoked when the dropdown popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Closed">
            <summary>
            Gets or sets the event callback that will be invoked after the dropdown popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnValueSelect">
            <summary>
            Gets or sets the event callback that will be when an item is selected from the dropdown popup by the user either with mouse/tap or with keyboard navigation.
            </summary>
            <remarks>
            You can prevent the item selection action using <see cref="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListEvents TValue="string" TItem="string" OnValueSelect="@OnSelectHandler" />
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
                public void OnSelectHandler(SelectEventArgs<string> args) {
                    if(args.ItemData== "Medium")
                        args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings">
            <summary>
            A class that represents the Dropdown list fields to map with the data source and binds the data to the component.
            </summary>
            <example>
            <code><![CDATA[
            <SfDropDownList TValue="string" TItem="Country" Placeholder="Select a country" DataSource="@Countries">
                <DropDownListFieldSettings Text="Name" Value="Code"/>
            </SfDropDownList>
            @code{
                public class Country
                {
                    public string Name { get; set; }
                    public string Code { get; set; }
                }
                List<Country> Countries = new List<Country> {
                    new Country() { Name = "Australia", Code = "AU" },
                    new Country() { Name = "Bermuda", Code = "BM" },
                    new Country() { Name = "Canada", Code = "CA" }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.GroupBy">
            <summary>
            Gets or sets filed names to display the list in category-wise.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfDropDownList TValue="string" TItem="Vegetables" Placeholder="Select a country" DataSource="@VegetablesList">
                <DropDownListFieldSettings Text="Name" Value="ID" GroupBy="Category" />
            </SfDropDownList>
            @code{
                public class Vegetables
                {
                    public string ID { get; set; }
                    public string Name { get; set; }
                    public string Category { get; set; }
                }
                List<Vegetables> VegetablesList = new List<Vegetables> {
                    new Vegetables { Name = "Cabbage", Category = "Leafy and Salad", ID = "item1" },
                    new Vegetables { Name = "Chickpea", Category = "Beans", ID = "item2" },
                    new Vegetables { Name = "Green bean", Category = "Beans", ID = "item4" },
                    new Vegetables { Name = "Spinach", Category = "Leafy and Salad", ID = "item9" }
                };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes such as styles, classes, and more that will be applied to the pop-up list element.
            </summary>
            <value>
            The value as dictionary collection.The default value is <c>null</c>
            </value>
            <remarks>
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.IconCss">
            <summary>
            Gets or sets a CSS class string to include an icon or image for the dropdown list item. 
            </summary>
            <value>
            Accepts a CSS class string separated by space to include an icon or image for the dropdown list item. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.Text">
            <summary>
            Gets or sets the text that maps the text field from the data source model for each list item.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            If not mapped, the text field in the drop-down list item show as an empty text for each list item.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.Value">
            <summary>
            Gets or sets the value that maps the value field from the data source for each list item.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            If not mapped the text filed in the dropdown list item show as empty popup.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.PropertyParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1">
            <summary>
            The DropDownList has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of DropDownListTemplates.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2">
            <summary>
            The DropDownList component allows users to select a single value that is non-editable from a list of predefined values.
            </summary>
            <example>
            In the following code example, a basic DropDownList component is initialized with simple list items.
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code>
            </example>
            <summary>
            The DropDownList component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <summary>
            The DropDownList component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfDropDownList.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ID">
            <summary>
            Gets or sets the unique identifier for <see cref="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2"/> component.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            You can specify only unique value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueExpression">
            <summary>
            Gets or sets an expression that identifies the bound value in the <see cref="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2"/> component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AllowFiltering">
            <summary>
            Gets or sets a value that indicates whether the filtering option is enabled or not.
            </summary>
            <value>
            <c>true</c>, if the filtering option is enabled and show the filter bar (search box) in the pop-up; otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
            <remarks>
            The filter action retrieves the matched items using the <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Filtering"/> event based on the characters typed in the search textbox.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CssClass">
            <summary>
            Gets or sets a CSS class string to customize the appearance of the <see cref="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2"/> component.
            </summary>
            <value>
            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableRtl">
            <summary>
            Gets or sets whether the right-to-left direction is enabled or not for the drop-down list component.
            </summary>
            <value>
            <c>true</c>, if the right to left direction is enabled for dropdown list component. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Enabled">
            <summary>
             Gets or sets a value that indicates whether to enable or disable the <see cref="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2"/> component. 
            </summary>
            <value>
            <c>true</c>, if the Dropdown list component is enabled; otherwise, it is disabled. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnablePersistence">
            <summary>
            Gets or sets whether to persist component's state between page reloads. When set to <c>true</c>, the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value" /> property is persisted.
            </summary>
            <value>
            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.
            </value>
            <remarks>
            Component's <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value"/> property will be stored in browser local storage to persist component's state when page reloads.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterBarPlaceholder">
            <summary>
            Gets or sets the text that is displayed when the filter textbox has no text and removes the focus.
            </summary>
            <value>
            The text that is displayed when the filter text box has no text. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            This property value is updated only when the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AllowFiltering" /> is enabled.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FloatLabelType">
            <summary>
            Gets or sets the floating label behavior of the dropdown list. The <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Placeholder"/> text act as a lable.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.Inputs.FloatLabelType"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.Inputs.FloatLabelType.Never"/>
            </value>
            <remarks>
            If the <c>FloatLabelType</c> is <c>Never</c>, the placeholder text does not float as a label.
            If the <c>FloatLabelType</c> is <c>Auto</c>, the placeholder text will float above the DropDownList component as a label after focusing it.
            If the <c>FloatLabelType</c> is <c>Always</c>, the placeholder text is displayed as a label above the DropDownList component.
            </remarks>
            <example>
            In the following code example, set the float lable as <c>Auto</c>.
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList" Placeholder="Select a value" FloatLabelType="FloatLabelType.Auto">
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FooterTemplate">
            <summary>
            Gets or sets the customised design content and assigns it to the footer container of the pop-up list.
            </summary>
            <value>
            The template content. The default value in <c>null</c>.
            </value>
             <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListTemplates TItem="string">
                    <FooterTemplate>
                        <span class='footer'>Total list items: 3 </span>
                    </FooterTemplate>
                </DropDownListTemplates>
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HeaderTemplate">
            <summary>
            Gets or sets the customised design content and assigns it to the header container of the popup list.
            </summary>
            <value>
            The template content. The default value in <c>null</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListTemplates TItem="string">
                    <HeaderTemplate>
                        <span class='header'> T-shirt size </span>
                    </HeaderTemplate>
                </DropDownListTemplates>
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes such as styles, class, and more that will be applied to the dropdown list element.
            </summary>
            <value>
            The value as dictionary collection.The default value is <c>null</c>
            </value>
            <remarks>
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList" HtmlAttributes="@CustomAttribute">
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
                Dictionary<string, object> CustomAttribute = new Dictionary<string, object>()
                {
                    { "title", "Select T-shirt size" }
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InputAttributes">
            <summary>
            Gets or sets a collection of additional attributes such as disabled, value, and more that will be applied to the dropdown list input element.
            </summary>
            <value>
            The value as dictionary collection. The default value is <c>null</c>
            </value>
            <remarks>
            If you configured both the property and equivalent input attribute, then the component considers the property value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Index">
            <summary>
            Gets or sets the index of the selected item in the dropdown list component.
            </summary>
            <value>
            The index of the selected items in the list. The default value is <c>null</c> which indicates that nothing is selected.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">The index was set to less than -1, or greater than or equal to the number of items on the list at the time the list is rendered.</exception>
            <remarks>
            Use this property to determine the index of the currently selected item in the list if the dropdown list component allows only one selection.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IndexChanged">
            <summary>
            Gets or sets the callback to trigger when the index changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Placeholder">
            <summary>
            Gets or sets the text that is displayed when the dropdown list has no value and remove on the focus.
            </summary>
            <value>
            The text that is displayed when the dropdown list has no value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            The property depends on the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FloatLabelType"/> property, The placeholder text acts as a label.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupHeight">
            <summary>
            Gets or sets the height of the popup list.
            </summary>
            <value>
            The preferred height of the popup list in pixels or percentage of the dropdown list. The default value is <c>300px</c>.
            </value>
            <remarks>
            This property accepts pixels or percentage value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupWidth">
            <summary>
            Gets or sets the width of the popup list. By default, the popup width sets based on the width of the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component.
            </summary>
            <value>
            The preferred width of the popup list in pixels or percentage of the dropdown list. The default value is <c>100%</c>.
            </value>
            <remarks>
            This property accepts pixels or percentage value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Readonly">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> is in read-only mode or not.
            </summary>
            <value>
            <c>true</c> if the dropdown list is in read-only mode; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            In read-only mode, the dropdown list popup can not be opened on click.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowClearButton">
            <summary>
            Gets or sets a value indicating whether to show or hide the clear button in the dropdown list. It helps to clear the selected value of a dropdown list on user intraction.
            </summary>
            <value>
            <c>true</c> if show the clear button in the dropdown list; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            When the clear button is clicked, <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value"/>, and <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Index"/> properties are reset to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableVirtualization">
            <summary>
            Gets or sets a value indicating whether the virtual scrolling is enabled or not.
            </summary>
            <value>
            <c>true</c> if the virtual scrolling for dropdown list; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
            <remarks>
            To improve performance, the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableVirtualization"/> property is set to <c>true</c>. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ItemsCount">
            <summary>
            Gets or sets the number of items to be fetched in the popup when the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableVirtualization"/> property is enabled.
            </summary>
            <value>
            The number of list items to be fetched in dropdown list component. The default value is <c>5</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value">
            <summary>
            Gets the value of the selected item in the dropdown list component. This will be used with two-way binding.
            </summary>
            <value>
            The value of the selected item in the dropdown list component. The default is <c>null</c>.
            </value>
            <remarks>
            Use the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value"/> property to specify or determine the value displayed in the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueChanged">
            <summary>
            Gets or sets a callback that trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueTemplate">
            <summary>
            Gets or sets the customised design content and assigns it to the selected list item in the input element of the component.
            </summary>
            <value>
            The template content. The default value in <c>null</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfDropDownList TItem="string" TValue="string" DataSource="@MyList">
                <DropDownListTemplates TItem="string">
                    <ValueTemplate>
                        <span> T-shirt size - @(context)</span>
                    </ValueTemplate>
                </DropDownListTemplates>
            </SfDropDownList>
            @code{
                protected List<string> MyList = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Width">
            <summary>
            Gets or sets the width of the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component.
            </summary>
            <value>
            The preferred width of the dropdown list in pixels or percentage value. The default value is <c>100%</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TabIndex">
            <summary>
            Gets or sets the location of the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component in the tab order.
            </summary>
            <value>
            The numeric index of the dropdown list in the tab order. The default value is <c>0</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropDownListParent">
            <summary>
            Parent component of DropDownList.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Clear">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClearAsync">
            <summary>
            Clear out the selected values from the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component and sets the <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value"/> and <see cref="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Index"/> properties as <c>null</c>.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusIn">
            <summary>
            Sets the focus to the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusAsync">
            <summary>
            Sets the focus to the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOut">
            <summary>
            Remove the focus from the DropDownList component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOutAsync">
            <summary>
            Remove the focus from the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetDataByValue(`0)">
            <summary>
            Retrieves all field values in the record that match the given value.
            </summary>
            <param name="ddlValue">TValue</param>
            <returns>The field value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItemsAsync">
            <summary>
            Retrieves all the list of items bound in the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HideSpinnerAsync">
            <summary>
            Hides the data loading spinner.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowSpinnerAsync">
            <summary>
            Shows the data loading spinner until the data populate the pop-up.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Hide">
            <summary>
            Hides the DropDownList's popup list.
            </summary>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HidePopupAsync">
            <summary>
            Hides the <see cref="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2"/> popup list.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopupAsync">
            <summary>
            Opens the dropdown popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RefreshDataAsync">
            <summary>
            Refreshes the popup list items. The method is useful if the popup list item changed externally. 
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.KeyActionHandler(Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Invoke the key action handler.
            </summary>
            <param name="args">Specifies KeyActions arguments.</param>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.VirtualScrollHandler">
            <summary>
            Invoke the scroll handler.
            </summary>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FALSE">
            <summary>
            Specifies the string false.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TRUE">
            <summary>
            Specifies the string true.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.NO_DATA">
            <summary>
            Specifies the root class of base component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.POPUP_CONTENT">
            <summary>
            specifies the popup content.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GROUP_BY">
            <summary>
            specifies the group by class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DROP_DOWN_ICON">
            <summary>
            specifies the dropdown icon class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DDL_HEADER">
            <summary>
            specifies the dropdown header.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DDL_FOOTER">
            <summary>
            specifies the dropdown footer.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_LIVE">
            <summary>
            specifies the aria-live class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ASSERTIVE">
            <summary>
            specifies the assertive string.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_HAS_POPUP">
            <summary>
            specifies the aria-has-popup class.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_ACTIVE_DESCENDANT">
            <summary>
            specifies the aria-activedescendant class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.NULL_VALUE">
            <summary>
            specifies the null text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_OWN">
            <summary>
            specifies the aria-own class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OPTIONS">
            <summary>
            specifies the options text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ROLE">
            <summary>
            specifies the name of role attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.COMBO_BOX">
            <summary>
            specifies the combobox text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AUTO_CORRECT">
            <summary>
            specifies the name of autocorrect attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OFF">
            <summary>
            specifies the off text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SPELL_CHECK">
            <summary>
            specifies the spellcheck attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AUTO_COMPLETE">
            <summary>
            specifies the name of autocomplete attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AUTO_CAPITAL">
            <summary>
            specifies the name of autocapitalize attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_EXPANDED">
            <summary>
            specifies the name of aria-expanded attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_SET_SIZE">
            <summary>
            specifies the value of aria-setsize attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SELECTED">
            <summary>
            specifies the selected class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ITEM_FOCUS">
            <summary>
            specifies the item focus class.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InputBaseObj">
            <summary>
            Specifies the SfInputBase component object.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterinputObj">
            <summary>
            Specifies the SfInputBase component object as filter input.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RootClass">
            <summary>
            Specifies the root class of the component .
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ContainerClass">
            <summary>
            Specifies the container class of the component .
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.BackIcon">
            <summary>
            Specifies the back icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropdownValue">
            <summary>
            Specifies the dropdown value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClearBtnStopPropagation">
            <summary>
            Specifies the clear button stop propogation.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterClearBtnStopPropagation">
            <summary>
            Specifies the filter clear button stop propogation.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreventContainer">
            <summary>
            Specifies whether it is a prevent container or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsDevice">
            <summary>
            Specifies whether it is a device or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopupList">
            <summary>
            Specifies whether to show popup list or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupElement">
            <summary>
            Specifies the popup element reference.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupHolderEle">
            <summary>
            Specifies the popup holder element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupContainer">
            <summary>
            Specifies the popup container.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsListRender">
            <summary>
            Specifies whether list is going to render or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsListRendered">
            <summary>
            Specifies whether list is rendered or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsDropDownClick">
            <summary>
            Specifies whether dropdown is clicked or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsMainDataUpdated">
            <summary>
            Determines whether the main data updated or not
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsValidKey">
            <summary>
            Specifies whether it is valid key or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsTyped">
            <summary>
            Specifies whether a key is typed or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsFilterClearClicked">
            <summary>
            Specifies whether the filter input clear icon is clicked or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsCustomFilter">
            <summary>
            Specifies whether it is custom filtering or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsFilterPrevented">
            <summary>
            Specifies whether default filtering action is prevented .
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActiveIndex">
            <summary>
            Specifies the active index of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsInternalFocus">
            <summary>
            Specifies whether it is a internal focus or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ContainerAttr">
            <summary>
            Specifies the container attribute.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreviousValue">
            <summary>
            Specifies the previous value of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreviousItemData">
            <summary>
            Specifies the previous item data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TypedString">
            <summary>
            Specifies the typed string.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.BeforePopupOpen">
            <summary>
            True before the popup get openend , otherwise  false.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreventAutoFill">
            <summary>
            Specifies whether to prevent autofill or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusedData">
            <summary>
            Specifies the focused data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.VirtualSpinnerObj">
            <summary>
            Specifies the virtual spinner object.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreventIconHandler">
            <summary>
            Specifies whether it is prevent icon handler.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupContent">
            <summary>
            Specifies the popup content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.NoDataContent">
            <summary>
            Specifies the NoDataContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropdownIcon">
            <summary>
            Specifies the dropdown icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ROOT">
            <summary>
            Specifies the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreRender">
            <summary>
            Triggers before the component get rendered.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetOldValue(System.Object,System.Boolean)">
            <summary>
            Task which sets the old value.
            </summary>
            <param name="ddlValue">Specifies the DropDownList value.</param>
            <param name="isValueChanged"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateMainData">
            <summary>
            Task which update main data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetScrollValue">
            <summary>
            Task which gets the scroll value.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateValue">
            <summary>
            Task which updates the value.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateValueSelection(`1,System.Boolean,System.Boolean)">
            <summary>
            Task which updates the value selection.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="isMutable">Specifies whether it is mutable or not.</param>
            <param name="isValidateInput">Specifies whether it is validate on input event.</param>
            <returns></returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetRTL">
            <summary>
            Method which set RTL to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetReadOnly">
            <summary>
            Add the readonly class to the container element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetCssClass">
            <summary>
            Method which set css class to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateAriaAttributes">
            <summary>
            Method which update the aria attributes.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOutHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs,System.Boolean)">
            <summary>
            Triggers when the component get focused out.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <param name="isFilterinput">Specifies whether it is a filter input or not.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropDownClick">
            <summary>
            Triggers while clicking the dropdown icon.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HidePopup">
            <summary>
            Task which used to hide popup.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OpenEventArgs">
            <summary>
            Specifies the open event.
            </summary>
            <returns>PopupEventArgs arguments.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokePopupEvents(System.Boolean)">
            <summary>
            Invokes the popup event.
            </summary>
            <param name="isOpen">True if the popup is in open state otherwise false.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeClearBtnEvent(System.EventArgs,System.Boolean)">
            <summary>
            Triggered when clear button is clicked.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="isFilterClear">Specifies whether it is filterinput clear icon or not.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterClear">
            <summary>
            Triggers when filter clear icon is clicked.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClearAll(System.EventArgs)">
            <summary>
            Task which used to clear all the items.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterInputHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when any value provided to filter input.
            </summary>
            <param name="args">Specifies the ChangeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PasteHandler">
            <summary>
            Triggers when paste action is performes.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnFilterUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Specifies the keyup event of filter event.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateMainListData">
            <summary>
            Task which updates the MainData .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SearchList(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilteringAction(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            Task which specifies the filtering action.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterAsync(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RefreshPopup">
            <summary>
            Task used to refresh the popup list items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsFilter">
            <summary>
            Task which specifies whether filter action is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeBeforeOpen">
            <summary>
            Triggers before popup get opened.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeAfterClosed">
            <summary>
            Triggers after the popup get closed.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CreatePopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdatePopupState">
            <summary>
            Method which updates the popup state.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">Update the class to input element.</param>
            <param name="containerClass">Update the class to container element.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the dropdownlist fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateWrapperAriaAttributes">
            <summary>
            Method which adds the aria attributes to the container element
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateInputValue(System.String)">
            <summary>
            Task updates the input value.
            </summary>
            <param name="inputValue">Specifies the input value.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnMouseClick(Syncfusion.Blazor.DropDowns.ListOptions{`1},Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers when mouse click is performed.
            </summary>
            <param name="args">Specifies the ListOptions arguments.</param>
            <param name="eventArgs">Specifies the MouseEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeSelectEvent(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Triggers when item get selected.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateSelectedItem(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateSelectItem(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateListSelection(`1,System.String)">
            <summary>
            Task which update list selection.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="className">Specifies the class name.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetValue(Syncfusion.Blazor.DropDowns.DataItems{`0})">
            <summary>
            Task which sets the value.
            </summary>
            <param name="items">Specifies the data item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeChangeEvent(System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <param name="keyArgs">Specifies KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnChangeEvent(System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <param name="keyArgs">Specifies KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItemData(`1)">
            <summary>
            Method which gets item data.
            </summary>
            <param name="item">Specifies the item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which performs the action begin event.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which performs the action complete event.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RenderEqualItems(System.Boolean)">
            <summary>
            Update the custom value to the list
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsDefaultValue">
            <summary>
            Method which returns whether the Value is default value or not.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActionFailure(System.Object)">
            <summary>
            Task which performs the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsEditTextBox">
            <summary>
            Specifies whether it is edit textbox.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CustomValue(System.Boolean,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which specifies the custom value.
            </summary>
            <param name="isValidateInput">Specifies whether it is validate on input event.</param>
            <param name="args">Specifies KeyActions arguments.</param> 
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateAutoFillOnDown(`1)">
            <summary>
            Task which update auto fill on down action.
            </summary>
            <param name="curItem">Specifies the current item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateFocusItem(`1)">
            <summary>
            Task which update the focus item.
            </summary>
            <param name="focusItem">Specifies the focus item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateValidateClass">
            <summary>
            Update the validation class to the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnSearch(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Triggers when search keypress event is performed.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.FilterType.StartsWith">
            <summary>
            Defines the StartsWith filter type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.FilterType.EndsWith">
            <summary>
            Defines the EndsWith filter type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.FilterType.Contains">
            <summary>
            Defines the Contains filter type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.VisualMode">
            <summary>
            Configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.Default">
            <summary>
            Defines the Default visual mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.Delimiter">
            <summary>
            Defines the Delimiter visual mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.Box">
            <summary>
            Defines the Box visual mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.CheckBox">
            <summary>
            Defines the CheckBox visual mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SortOrder">
            <summary>
            Specifies the SortOrder to sort the data source.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SortOrder.None">
            <summary>
            Defines the None sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SortOrder.Ascending">
            <summary>
            Defines the Ascending sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SortOrder.Descending">
            <summary>
            Defines the Descending sort order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.HightLightType">
            <summary>
             Highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.HightLightType.Contains">
            <summary>
            Defines the Contains highlight type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.HightLightType.StartsWith">
            <summary>
            Defines the StartsWith highlight type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.HightLightType.EndsWith">
            <summary>
            Defines the EndsWith highlight type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SearchType">
            <summary>
            Defines the SearchType.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SearchType.StartsWith">
            <summary>
            Defines the StartsWith search type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SearchType.Equal">
            <summary>
            Defines the Equal search type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CheckBoxPosition">
            <summary>
            Defines the checkbox position of List Box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.CheckBoxPosition.Left">
            <summary>
            Defines the Left check box position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.CheckBoxPosition.Right">
            <summary>
            Defines the Right check box position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectionMode">
            <summary>
            Defines the selection mode of List Box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SelectionMode.Multiple">
            <summary>
            Defines the Multiple selection mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SelectionMode.Single">
            <summary>
            Defines the Single selection mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ToolBarPosition">
            <summary>
            Defines the toolbar position of List Box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.ToolBarPosition.Left">
            <summary>
            Defines the Left tool bar position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.ToolBarPosition.Right">
            <summary>
            Defines the Right tool bar position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteModel">
            <summary>
            Interface for a class AutoComplete.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading AutoComplete.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Highlight">
            <summary>
            When set to ‘true’, highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.MinLength">
            <summary>
            Allows you to set the minimum search character length,
            the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.SuggestionCount">
            <summary>
            Supports the specified number of list items on the suggestion popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1">
            <summary>
            Defines the custom value specifier event.
            </summary>
            <typeparam name="T">Specifies the type of CustomValueSpecifierEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1.Item">
            <summary>
            Sets the text custom format data for set a `Value` and `Text`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1.Text">
            <summary>
            Gets the typed custom text to make a own text format and assign it to `item` argument.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxModel">
            <summary>
            Interface for a class ComboBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading ComboBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionBegin"/>, <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionBegin"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Cancel">
            <summary>
            Gets or sets whether the current action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.EventName">
            <summary>
             Gets the action event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Query">
            <summary>
            Gets or sets the query object value to begin the data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionComplete"/>, <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionComplete"/> event being raised.
            </summary>
            <typeparam name="TItem">TItem value of the dropdown list component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Cancel">
            <summary>
            Gets or sets whether the current action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Count">
            <summary>
            Gets the total number for records got from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.EventName">
            <summary>
            Gets Specify the current action name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Query">
            <summary>
            Gets the query object value to fetched the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Result">
            <summary>
            Gets the selected items values as JSON object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs">
            <summary>
            Specifies the action complete event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Actual">
            <summary>
            Return the actual records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Aggregates">
            <summary>
            Return the aggregates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Count">
            <summary>
            Return the total number for records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.EventName">
            <summary>
            Specify the Event Name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Items">
            <summary>
            Return Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Query">
            <summary>
            Specify the query to complete the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Request">
            <summary>
            Return the request type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Result">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.VirtualSelectRecords">
            <summary>
            Return the virtualSelectRecords.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Xhr">
            <summary>
            Return XMLHttpRequest.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnOpen"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs.Cancel">
            <summary>
            Gets or sets the whether the dropdown popup open action should be canceled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ClosedEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Closed"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DataBoundEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.DataBound"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataBoundEventArgs.E">
            <summary>
            Gets the bounded objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataBoundEventArgs.Items">
            <summary>
            Gets the populated items as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownBaseClassList">
            <summary>
            Defines the dropdown base class list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Content">
            <summary>
            Specifies the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Disabled">
            <summary>
            Specifies the disabled property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.FixedHead">
            <summary>
            Specifies the fixedHead property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Focus">
            <summary>
            Specifies the focus property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Group">
            <summary>
            Specifies the group property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Grouping">
            <summary>
            Specifies the grouping property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Hover">
            <summary>
            Specifies the hover property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Li">
            <summary>
            Specifies the list property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.NoData">
            <summary>
            Specifies the NoData property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Root">
            <summary>
            Specifies the root property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Rtl">
            <summary>
            Specifies the Rtl property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Selected">
            <summary>
            Specifies the selected property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FilteringEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Filtering"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.BaseEventArgs">
            <summary>
            Gets the original `keyup` event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.Cancel">
            <summary>
            Gets or sets the whether the current filter action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.PreventDefaultAction">
            <summary>
            Gets or sets the whether to prevent the internal filtering action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.Text">
            <summary>
            Gets the current typed text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.UpdateData">
            <summary>
            Gets or sets filtered data values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FocusEventArgs">
            <summary>
            Specifies the focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FocusEventArgs.Event">
            <summary>
            Specifies the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FocusEventArgs.IsInteracted">
            <summary>
            Specifies the focus interacted.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.PopupEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnClose"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Animation">
            <summary>
            Gets or sets the dropdown popup animation object values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Cancel">
            <summary>
            Gets or sets the whether the dropdown popup close action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Popup">
            <summary>
            Gets or sets the drodown popup model object values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ResultData">
            <summary>
            Defines the result data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ResultData.Result">
            <summary>
            To return the JSON result.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectEventArgs`1">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnValueSelect"/> event being raised.
            </summary>
            <typeparam name="T">TItem value of the dropdown list component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Cancel">
            <summary>
            Gets or sets the whether the item selection action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.E">
            <summary>
            Gets the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.IsInteracted">
            <summary>
            Gets the if the event is triggered by user interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Item">
            <summary>
            Gets the selected list item elemnt.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.ItemData">
            <summary>
            Gets or set the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectEventArgs">
            <summary>
            Defines the select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownBaseModel">
            <summary>
            Interface for a class DropDownBase.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FieldSettingsModel">
            <summary>
            Interface for a class FieldSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.GroupBy">
            <summary>
            Group the list items with it's related items by mapping GroupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2">
            <summary>
            Defines the change event.
            </summary>
            <typeparam name="TValue">Specifies the type of ChangeEventArgs.</typeparam>
            <typeparam name="TItem">Specifies the typr of value.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.PreviousItem">
            <summary>
            Returns the previous selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.PreviousItemData">
            <summary>
            Returns the previous selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Value">
            <summary>
            Returns the selected value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1">
            <summary>
            Specifies the change event.
            </summary>
            <typeparam name="T">Specifies the type of ChangeEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.PreviousItem">
            <summary>
            Returns the previous selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.PreviousItemData">
            <summary>
            Returns the previous selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Value">
            <summary>
            Returns the selected value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListClassList">
            <summary>
            Defines the  DropDownList class list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.BackIcon">
            <summary>
            Specifies the back icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Base">
            <summary>
            Specifies the base.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.ClearIcon">
            <summary>
            Specifies the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.ClearIconHide">
            <summary>
            specifies the clear icon hide class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Device">
            <summary>
            Specifies the device.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Disable">
            <summary>
            Specifies the disable property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.DisableIcon">
            <summary>
            Specifies the disable icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.FilterBarClearIcon">
            <summary>
            SPecifies the filter bar clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.FilterInput">
            <summary>
            Specfies the filter input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.FilterParent">
            <summary>
            Specifies the filter parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Focus">
            <summary>
            Specifies the focus property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Footer">
            <summary>
            Specifies the footer property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Header">
            <summary>
            Specifies the header property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.HiddenElement">
            <summary>
            Specifies the hidden element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Hover">
            <summary>
            Specifies the hover property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Icon">
            <summary>
            Specifies the icon property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.IconAnimation">
            <summary>
            Specifies the icon animation property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Input">
            <summary>
            Specifies the input property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.InputFocus">
            <summary>
            Specifies the input focus property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Li">
            <summary>
            Specifies the list property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.MobileFilter">
            <summary>
            Specifies the mobile filter property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.PopupFullScreen">
            <summary>
            Specifies the popup full screen property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Root">
            <summary>
            Specifies the root property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Rtl">
            <summary>
            Specifies the RTL property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Selected">
            <summary>
            Specifies the selected property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Value">
            <summary>
            Specifies the value property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListModel`2">
            <summary>
            Interface for a class DropDownList.
            </summary>
            <typeparam name="TValue">Specifies the type of DropDownListModel.</typeparam>
            <typeparam name="TItem">Specifies the typr of value.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DropDownList allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.AllowFiltering">
            <summary>
            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>
            <para>The filter action retrieves matched items through the `Filtering` event based on
            the characters typed in the search TextBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DropDownList when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DropDownList.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Readonly">
            <summary>
            Specifies the boolean value whether the DropDownList allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the component.</para>
            <para>It can be an array of JSON Objects or an instance of
            `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Text">
            <summary>
            Gets or sets the display text of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Width">
            <summary>
            Specifies the width of the component. By default, the component width sets based on the width of
            its parent container.<para> You can also set the width in pixel values.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.IgnoreCase">
            <summary>
            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>
            <para>By default, consider the casing.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Query">
            <summary>
            Accepts the external `Query` that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxModel`1">
            <summary>
            Interface for a class ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.BeforeDrop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.BeforeItemRender">
            <summary>
            Triggers while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Change">
            <summary>
            Triggers while select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Drag">
            <summary>
            Triggers while dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.DragStart">
            <summary>
            Triggers after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Drop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.AllowDragAndDrop">
            <summary>
            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.
            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.CssClass">
            <summary>
            Sets the CSS classes to root element of this component, which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Height">
            <summary>
            Sets the height of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            Based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Scope">
            <summary>
            Defines the scope value to group sets of draggable and droppable ListBox.
            A draggable with the same scope value will be accepted by the droppable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.SelectionSettings">
            <summary>
            Specifies the selection mode and its type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ToolbarSettings">
            <summary>
            Specifies the toolbar items and its position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Value">
            <summary>
            Sets the specified item to the selected state or gets the selected item in the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectionSettingsModel">
            <summary>
            Interface for a class SelectionSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.CheckboxPosition">
            <summary>
            Set the position of the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.Mode">
            <summary>
            Specifies the selection modes. The possible values are
             `Single`: Allows you to select a single item in the ListBox.
             `Multiple`: Allows you to select more than one item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.ShowCheckbox">
            <summary>
            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel">
            <summary>
            Interface for a class ToolbarSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel.Items">
            <summary>
            Specifies the list of tools for dual ListBox.
            The predefined tools are 'moveUp', 'moveDown', 'moveTo', 'moveFrom', 'moveAllTo', and 'moveAllFrom'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel.Position">
            <summary>
            Positions the toolbar before/after the ListBox.
            The possible values are:
             Left: The toolbar will be positioned to the left of the ListBox.
             Right: The toolbar will be positioned to the right of the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.IUpdateListArgs">
            <summary>
            Interface for update list arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Enable">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Index">
            <summary>
            Specifies the  property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Li">
            <summary>
            Specifies the list property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Module">
            <summary>
            Specifies the module  property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.PopupElement">
            <summary>
            Specifies the popup element  property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Value">
            <summary>
            Specifies the value property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ItemCreatedArgs">
            <summary>
            Defines the item created event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ItemCreatedArgs.CurData">
            <summary>
            Specifies the current data property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ItemCreatedArgs.Item">
            <summary>
            Specifies the text property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ItemCreatedArgs.Text">
            <summary>
            Specifies the text property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1">
            <summary>
            Defines the custom value event.
            </summary>
            <typeparam name="T">Specifies the type of CustomValueEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.NewData">
            <summary>
            Gets the newly added data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.Text">
            <summary>
            Gets the typed custom text to make a own text format and assign it to `item` argument.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1">
            <summary>
            Defines the select all event.
            </summary>
            <typeparam name="T">Specifies the type of SelectAllEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.IsChecked">
            <summary>
            Specifies whether it is selectAll or deSelectAll.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.ItemData">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.Items">
            <summary>
            Returns the selected list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs`1">
            <summary>
            Specifies the chip selected event.
            </summary>
            <typeparam name="T">Specifies the type of ChipSelectedEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs`1.ChipData">
            <summary>
            Returns the selected chip data as list object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1">
            <summary>
            Defines the MultiSelect change event.
            </summary>
            <typeparam name="T">Specifies the MultiSelectChangeEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.OldValue">
            <summary>
            Returns the component initial Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.Value">
            <summary>
            Returns the updated component Values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1">
            <summary>
             Defines the remove event.
            </summary>
            <typeparam name="T">Specifies the RemoveEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1">
            <summary>
            Defines the tagging event.
            </summary>
            <typeparam name="T">Specifies the type of TaggingEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.SetClass">
            <summary>
            To set the classes to chip element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectModel`1">
            <summary>
            Interface for a class MultiSelect.
            </summary>
            <typeparam name="T">Specifies the type of MultiSelectModel.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.BeforeOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Change">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ChipSelection">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Close">
            <summary>
            Fires when popup close after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.CustomValueSelection">
            <summary>
            Triggers when the CustomValue is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Open">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Removed">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Removing">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Tagging">
            <summary>
            Fires before set the selected item as chip in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the MultiSelect component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.AllowCustomValue">
            <summary>
            Allows user to add a
            custom value the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.AllowFiltering">
            <summary>
            <para>To enable the filtering option in this component.</para>
            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>
            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the ChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ClosePopupOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the MultiSelect component.</para>
            <para>It can be an array of JSON Objects or an instance of
            `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableGroupCheckBox">
            <summary>
            <para>Specifies a boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.</para>
            <para>By default, there is no checkbox provided for group headers.</para>
            <para>This property allows you to render checkbox for group headers and to select
            all the grouped items at once.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnablePersistence">
            <summary>
            <para>Enable or disable persisting MultiSelect state between page reloads.</para>
            <para>If enabled, the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the MultiSelect allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Fields">
            <summary>
            <para>The `Fields` property maps the columns of the data table and binds the data to the component.</para>
            <list type="bullet">
            <item>
            <term>Text</term>
            <description>Maps the text column from data table for each list item.</description>
            </item>
            <item>
            <term>Value</term>
            <description>Maps the value column from data table for each list item.</description>
            </item>
            <item>
            <term>IconCss</term>
            <description>Maps the icon class column from data table for each list item.</description>
            </item>
            <item>
            <term>GroupBy</term>
            <description>Group the list items with it's related items by mapping groupBy field.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FilterType">
            <summary>
            Determines on which filter type, the MultiSelect component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the MultiSelect.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the MultiSelect popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.IgnoreCase">
            <summary>
            Sets case sensitive option for filter operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.MaximumSelectionLength">
            <summary>
            <para>Sets limitation to the value selection.</para>
            <para>Based on the limitation, list selection will be prevented.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of MultiSelect component.
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default, it renders based on its list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Query">
            <summary>
            Accepts the external `Query`
            which will execute along with the data processing in MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Readonly">
            <summary>
            Specifies the boolean value whether the MultiSelect allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SortOrder">
            <summary>
            <para>Specifies the `SortOrder` to sort the data source.</para>
            <para>The available type of sort orders are.</para>
            <list type="bullet">
            <item>
            <term>None</term>
            <description>The data source is not sorting.</description>
            </item>
            <item>
            <term>Ascending</term>
            <description>The data source is sorting with ascending order.</description>
            </item>
            <item>
            <term>Descending</term>
            <description>The data source is sorting with descending order.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Text">
            <summary>
            Selects the list item which maps the data `Text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Value">
            <summary>
            Selects the list item which maps the data `Value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.IDropDowns">
            <summary>
            Interface for DropDowns component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.IDropDowns.UpdateChildProperties(System.Object)">
            <summary>
            Update the child component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.IDropDowns.CallStateHasChangedAsync">
            <summary>
            Refresh the parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IDropDowns.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IDropDowns.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfListBox`2">
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox is used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <example>
            In the below code example, showcases a basic listbox.
            <code><![CDATA[
            <SfListBox Value=@value DataSource="@vehicleData" TValue="string[]" TItem="ListItem">
                <ListBoxFieldSettings Text="Text" Value="Id"></ListBoxFieldSettings>
            </SfListBox>
            @code{
                privatestring[] value= newstring[] { "List-01"};
                privateList<ListItem>vehicleData = newList<ListItem>{
                    newListItem { Text = "Hennessey Venom", Id = "List-01"},
                    newListItem { Text = "Bugatti Chiron", Id = "List-02"},
                    newListItem { Text = "Bugatti Veyron Super Sport", Id = "List-03"}
                }
            }
            ]]></code>
            </example>
            <summary>
            ListBox is used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox component is used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <example>
            In the below code example, showcases a basic ListBox component.
            <code><![CDATA[
            <SfListBox Value=@valueDataSource="@vehicleData" TValue="string[]" TItem="ListItem">
                <ListBoxFieldSettings Text="Text" Value="Id"></ListBoxFieldSettings>
            </SfListBox>
            @code{
                privatestring[] value= newstring[] { "List-01"};
                privateList<ListItem>vehicleData = newList<ListItem>{
                    newListItem { Text = "Hennessey Venom", Id = "List-01"},
                    newListItem { Text = "Bugatti Chiron", Id = "List-02"},
                    newListItem { Text = "Bugatti Veyron Super Sport", Id = "List-03"}
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ChildContent">
            <summary>
            Gets or sets a value that indicates the child content for the listbox including HTML element. If the child content is not specified, listbox is rendered using <c>DataSource</c> property.
            </summary>
            <value>
            The template content. The default value is <c>null</c>.
            </value>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ValueExpression">
            <summary>
            Gets or sets a value that indicates the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.AllowDragAndDrop">
            <summary>
            Gets or sets a value that indicates whether to enable or disable the drag and drop support in the listbox.
            </summary>
            <value>
            <c>true</c>, if the drag and drop is performed in the listbox. The default value is <c>true</c>.
            </value>
            <remarks>
            ListBox contains same 'Scope' property to perform drag and drop between multiple list boxes.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.AllowFiltering">
            <summary>
            Gets or sets a value that indicates whether to enable or diaable the filtering in the listbox.
            </summary>
            <value>
            <c>true</c>, if the filtering is performed in the listbox. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.CssClass">
            <summary>
            Gets or sets a value that indicates CSS class string to customize the appearance of listbox.
            </summary>
            <value>
            Accepts a CSS class string separated by space to customize the appearance of listbox. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.EnableRtl">
            <summary>
            Gets or sets a value that indicates whether to enable or disable the right to left direction in listbox.
            </summary>
            <value>
            <c>true</c>, if the right to left direction is enabled for listbox. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the component allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.EnablePersistence">
            <summary>
            <para>Enable or disable persisting component's state between page reloads.</para>
            <para>If enabled,  the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.FilterBarPlaceholder">
            <summary>
            Gets or sets a value that indicates the watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Height">
            <summary>
            Gets or sets a value that indicates the height of the listbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.MaximumSelectionLength">
            <summary>
            Gets or sets a value that indicates the limitation to the value selection in the listbox.
            </summary>
            <value>
            Accepts a double value. The default value is <c>500</c>.
            </value>
            <remarks>
            Based on the limitation, list selection will be prevented.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Scope">
            <summary>
            Gets or sets a value that indicates the scope to the listbox to perform drag and drop and toolbar action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Value">
            <summary>
            Gets or sets a value that indicates the specified item in the selected state of the listbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ValueChanged">
            <summary>
            Gets or sets the event callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will applied to the listbox container element.
            </summary>
            <remarks>
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.EnableItems``1(``0,System.Boolean)">
            <summary>
            Enables or disables the items in the listbox based on the items and enable argument.
            </summary>
            <param name = "items">Specifies the list items to be enabled or disabled. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "enable">Set false to disable the items. By default the items will be enabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataByValue(`0)">
            <summary>
            Gets the list of data object that matches the given list of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
            <returns>The list of data object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataList">
            <summary>
            Gets the updated dataSource in ListBox.
            </summary>
            <returns>The list of data object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAllTo(System.String,System.Nullable{System.Double})">
            <summary>
            Moves all the values from one ListBox to the scoped ListBox.
            </summary>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAllAsync(System.String,System.Nullable{System.Double})">
            <summary>
            Moves all the values from one ListBox to the scoped ListBox.
            </summary>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <param name = "index">Specifies the index to place the moved items.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveDown(`0)">
            <summary>
            Moves the given value(s) / selected value(s) downwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveDownAsync(`0)">
            <summary>
            Moves the given value(s) / selected value(s) downwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveTo(`0,System.Nullable{System.Double},System.String)">
            <summary>
            Moves the given value(s) / selected value(s) to the given / default scoped ListBox.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAsync(`0,System.Nullable{System.Double},System.String)">
            <summary>
            Moves the given value(s) / selected value(s) to the given / default scoped ListBox.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <param name = "scope">Specifies the destination ListBox reference.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveUp(`0)">
            <summary>
            Moves the given value(s) / selected value(s) upwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveUpAsync(`0)">
            <summary>
            Moves the given value(s) / selected value(s) upwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectAll(System.Boolean)">
            <summary>
            Selects or deselects the entire listbox items based on the state parameter.
            </summary>
            <param name = "state">Set `true`/`false` to select/ unselect the entire list items.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectAllAsync(System.Boolean)">
            <summary>
            Selects or deselects the entire listbox items based on the state parameter.
            </summary>
            <param name = "state">Set `true`/`false` to select/ unselect the entire list items.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectItems``1(``0,System.Boolean)">
            <summary>
            Selects or deselects the sepecific listbox items based on the state parameter.
            </summary>
            <param name = "items">Specifies the list items to be selected or unselected. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "state">Set false to un select the items. By default the items will be selected.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectItemsAsync``1(``0,System.Boolean)">
            <summary>
            Selects or deselects the sepecific listbox items based on the state parameter.
            </summary>
            <param name = "items">Specifies the list items to be selected or unselected. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "state">Set false to un select the items. By default the items will be selected.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RemoveItem(System.Collections.Generic.IEnumerable{`1},System.Nullable{System.Int32})">
            <summary>
            Removes a item or collection of items from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
            <param name = "items">Specifies the list of data collection to be removed.</param>
            <param name = "itemIndex">Specifies the index to remove the item from the list.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RemoveItemAsync(System.Collections.Generic.IEnumerable{`1},System.Nullable{System.Int32})">
            <summary>
            Removes a item or collection of items from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
            <param name = "items">Specifies the list of data collection to be removed.</param>
            <param name = "itemIndex">Specifies the index to remove the item from the list.</param>
            <returns>
            A Task that completes when the removing items.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.DragEndAsync(System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,Microsoft.JSInterop.DotNetObjectReference{System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.UpdateChildProperties(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2">
            <summary>
            Provides information about the <c>ValueChange</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Items">
            <summary>
            Gets or sets a value that indicates the list data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Name">
            <summary>
            Gets or sets a value that indicates the name of event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Value">
            <summary>
            Gets or sets a value that indicates the selected values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DragEventArgs`1">
            <summary>
            Provides information about the <c>DragStart</c> and <c>Dropped</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Cancel">
            <summary>
            Gets or sets a value that indicates whether to allow or prevent the drag action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Destination">
            <summary>
            Gets or sets a value that indicates the dropped listbox data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Items">
            <summary>
            Gets or sets a value that indicates the dragged items data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Source">
            <summary>
            Gets or sets a value that indicates the dropped listbox data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.PreviousIndex">
            <summary>
            Gets or sets a value that indicates the drag item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.CurrentIndex">
            <summary>
            Gets or sets a value that indicates the drop item index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1">
            <summary>
            Provides information about the model to be passed in <c>DragStart</c> and <c>Dropped</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1.CurrentData">
            <summary>
            Gets or sets a value that indicates the list data after drag and drop.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1.PreviousData">
            <summary>
            Gets or sets a value that indicates the list data before drag and drop.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropEventArgs`1">
            <summary>
            Provides information about the model to be passed in <c>OnDrop</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Cancel">
            <summary>
            Gets or sets a value that indicates whether to allow or prevent the drop action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.CurrentIndex">
            <summary>
            Gets or sets a value that indicates the drop item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Items">
            <summary>
            Gets or sets a list of values that indicates the the dragged items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.PreviousIndex">
            <summary>
            Gets or sets a value that indicates the the drag item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Target">
            <summary>
            Gets or sets a value that indicates the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.TargetId">
            <summary>
            Gets the ID of the element on which the user releases their mouse button (or finger, on touch devices) to complete the drag-and-drop action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1">
            <summary>
            Provides information about the model to be passed in <c>OnItemRender</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Item">
            <summary>
            Gets or sets a value that indicates the item to be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Name">
            <summary>
            Gets or sets a value that indicates the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxKeyDownEventArgs">
            <summary>
            Provides information about the model to be passed in <c>ListBoxKeyDown</c> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxKeyDownEventArgs.PreventDefaultAction">
            <summary>
            Gets or sets a value that indicates whether to allow or prevent the the default keyboard action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxKeyDownEventArgs.Event">
            <summary>
            Gets or sets a value that indicates the KeyboardEventArgs which handles keyboard actions.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxEvents`2">
            <summary>
            Specifies the ListBox Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionBegin">
            <summary>
            Gets or sets an event callback that is raised before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionComplete">
            <summary>
            Gets or sets an event callback that is raised after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionFailure">
            <summary>
            Gets or sets an event callback that is raised when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnDrop">
            <summary>
            Gets or sets an event callback that is raised before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnItemRender">
            <summary>
            Gets or sets an event callback that is raised while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ValueChange">
            <summary>
            Gets or sets an event callback that is raised when select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Created">
            <summary>
            Gets or sets an event callback that is raised when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Destroyed">
            <summary>
            Gets or sets an event callback that is raised when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.DragStart">
            <summary>
            Gets or sets an event callback that is raised after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Dropped">
            <summary>
            Gets or sets an event callback that is raised before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ItemSelected">
            <summary>
            Gets or sets an event callback that is raised when the listbox item is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ListBoxItemKeyDown">
            <summary>
            Gets or sets an event callback that is raised when performing keydown action in a listbox item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings">
            <summary>
            Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.GroupBy">
            <summary>
            Gets or sets a value that indicates the groupBy value to group the list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will applied to the listbox container element.
            </summary>
            <remarks>
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.IconCss">
            <summary>
            Gets or sets a value that indicates a CSS class string to include an icon or image for each list item. 
            </summary>
            <value>
            Accepts a CSS class string separated by space to include an icon or image for each list item. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.Text">
            <summary>
            Gets or sets a value that indicates a text for mapping column from data table for each list item. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.Value">
            <summary>
            Gets or sets a value that indicates a value for mapping column from data table for each list item. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings">
            <summary>
            Defines the selection settings of List Box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.CheckboxPosition">
            <summary>
            Gets or sets a value that indicates the position of a checkbox.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.DropDowns.CheckBoxPosition"/> enumeration. The default value is <c>Left</c>.
            </value>
            <remarks>
            If the <c>CheckBoxPosition</c> is <c>Left</c>, the checkbox will be placed left to the content of the list item.
            If the <c>CheckBoxPosition</c> is <c>Right</c>, the checkbox will be placed right to the content of the list item.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.Mode">
            <summary>
            Gets or sets a value that indicates the mode of selection in the listbox.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.DropDowns.SelectionMode"/> enumeration. The default value is <c>Multile</c>.
            </value>
            <remarks>
            If the <c>SelectionMode</c> is <c>Single</c>, allows single selection.
            If the <c>SelectionMode</c> is <c>Multiple</c>, alloes multiple selection.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.ShowCheckbox">
            <summary>
            Gets or sets a value that indicates whether to enable or disable the checkox selection in listbox.
            </summary>
            <value>
            <c>true</c>, if the checkox selection is enabled for listbox. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.ShowSelectAll">
            <summary>
            Gets or sets a value that indicates whether to enable or disable the select all checkox option in listbox.
            </summary>
            <value>
            <c>true</c>, if the select all checkox option is enabled for listbox. The default value is <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1">
            <summary>
            Specifies custom templates for list items in ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1.ItemTemplate">
            <summary>
            Gets or sets a value that indicates the template design and assigns it to each list item present in the listbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1.NoRecordsTemplate">
            <summary>
            Gets or sets a value that indicates the template design and assigns it to listbox, when no data is available on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings">
            <summary>
            Specifies the ListBox tool bar settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings.Items">
            <summary>
            Gets or sets a value that indicates the list of toolbar items used in dual listbox.
            </summary>
            <value>
            The predefined tools are 'MoveUp', 'MoveDown', 'MoveTo', 'MoveFrom', 'MoveAllTo', and 'MoveAllFrom'
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings.Position">
            <summary>
            Gets or sets a value that indicates the position of toolbar in the listbox.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.DropDowns.ToolBarPosition"/> enumeration. The default value is <c>Left</c>.
            </value>
            <remarks>
            If the <c>ToolBarPosition</c> is <c>Left</c>, the toolbar will be positioned to the left of the ListBox.
            If the <c>ToolBarPosition</c> is <c>Right</c>, the toolbar will be positioned to the right of the ListBox.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionValueSelectedEventArgs`1">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.ValueSelected"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionValueSelectedEventArgs`1.ItemData">
            <summary>
            Gets the selected item from the DataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionValueSelectedEventArgs`1.Value">
            <summary>
            Gets the selected value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionFilteringEventArgs`1">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Filtering"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFilteringEventArgs`1.Cancel">
            <summary>
            Gets or sets the whether the current filter action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFilteringEventArgs`1.Text">
            <summary>
            Gets the current typed text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFilteringEventArgs`1.FilteredData">
            <summary>
            Gets or sets filtered IEnumerable data values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionOpeningEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Opening"/> event being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionClosingEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Closing"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClosingEventArgs.Cancel">
            <summary>
            Gets or sets the whether the dropdown popup close action should be canceled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionValueSelectingEventArgs`1">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.ValueSelecting"/> event being raised.
            </summary>
            <typeparam name="T">T value of the Mention component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionValueSelectingEventArgs`1.Cancel">
            <summary>
            Gets or sets the whether the item selection action should be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionValueSelectingEventArgs`1.IsInteracted">
            <summary>
            Gets the if the event is triggered by user interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionValueSelectingEventArgs`1.ItemData">
            <summary>
            Gets or set the selected item IEnumerable Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionItemModel">
            <summary>
            Specifies the data item.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionItemModel.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionItemModel.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.EnableRtl">
            <summary>
            Gets whether the popup is in rtl mode or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.ZIndex">
            <summary>
            Gets the z-index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.PopupWidth">
            <summary>
            Gets the popup width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.PopupHeight">
            <summary>
            Gets the popup height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.HasDisplayTemplate">
            <summary>
            Gets whether the Mention component has a DisplayTemplate.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.IgnoreCase">
            <summary>
            Gets whether case-sensitivity is enabled or disabled when searching for suggestions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.Target">
            <summary>
            Gets the target selector where the Mention component needs to be displayed. The Mention component listens to the target's user input and displays suggestions as soon as the user inputs the Mention character.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.MentionChar">
            <summary>
            Gets the symbol or single character which triggers the search action in the Mention component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.ShowMentionChar">
            <summary>
            Gets whether to show the configured MentionChar with the text.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.AllowSpaces">
            <summary>
            Gets whether to allow the space between mentions character or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.SuffixText">
            <summary>
            Gets the custom suffix that will be used to replace the selected text.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.SuggestionCount">
            <summary>
            Gets the integer corresponding to the number of list items displayed in the suggestion popup. 
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionClientProperties.MinLength">
            <summary>
            Gets the integer to specify the minimum search character length; the search action will be executed after the minimum characters are entered.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MentionFieldSettings">
            <summary>
            The <c>MentionFieldSettings</c> class is a configuration class that is used to specify which fields in a data source should be used for different aspects of a mention list,
            For example, you can use this class to specify which fields in a data source should be used for the text and value of each item in the mention list, as well as an optional field for grouping items.
            </summary>
            <remarks>
            This allows the mention list to be populated with data from the specified data source, making it easier for users to select items from the list. 
            This can be useful in scenarios where users need to select items from a large or complex data set, such as selecting names from a list of contacts or selecting products from a catalog.
            </remarks>
            <example> 
            In this example, the <c>MentionFieldSettings</c> class is used to specify that the <c>Text</c> and <c>ID</c> fields in the data source should be used for the text and value of each item in the mention list, respectively. 
            <code><![CDATA[ 
            <SfMention TItem="Games" DataSource="@GamesData">
              <ChildContent>
                <MentionFieldSettings Value="ID" Text="Text"/>
              </ChildContent>
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention>
            @code{
               public class Games
               {  
                   public string ID { get; set; }
                   public string Text { get; set; }
               }
               
               List<Games> GamesData = new List<Games> {
                   new Games() { ID= "Game1", Text= "American Football" },
                   new Games() { ID= "Game2", Text= "Badminton" },
                   new Games() { ID= "Game3", Text= "Basketball" },
                   new Games() { ID= "Game4", Text= "Cricket" },
                   new Games() { ID= "Game5", Text= "Football" },
                   new Games() { ID= "Game6", Text= "Golf" }
                 };
            }
            ]]></code> 
            </example> 
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFieldSettings.GroupBy">
            <summary>
            Gets or sets a field in the data source that should be used for grouping items in the mention list.
            </summary>
            <value>
            A field in the data source that should be used for grouping items in the mention list.
            The default value is <c>string.Empty</c>. 
            This is optional and does not have to be specified if you do not want to group items in the mention list. 
            If you do not specify a <c>GroupBy</c>, all items in the mention list will be displayed in a single, ungrouped list.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFieldSettings.IconCss">
            <summary>
            Gets or sets the CSS class which is used to specify the field in the data source that contains the CSS class name for the icon that should be displayed for each item in the mention list.
            </summary>
            <value>
            A field in data source that contains the CSS class name for the icon that should be displayed for each item in the mention list.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFieldSettings.Text">
            <summary>
            Gets or sets a field that is used to specify the field in a data source that should be used as the display text for each item in the mention list.
            </summary>
            <value>
            A field that is used to specify the field in a data source that should be used as the display text for each item in the mention list.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MentionFieldSettings.Value">
            <summary>
            Gets or sets a field that is used to specify the field in a data source that should be used as the value for each item in the mention list.
            </summary>
            <value>
            A field that is used to specify the field in a data source that should be used as the value for each item in the mention list.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MentionFieldSettings.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MentionFieldSettings.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfMention`1">
            <summary>
            The <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component displays a list of suggested items from which users can select or tag one.
            Enter the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.MentionChar"/> in the editable element and tag the any item from the suggestion list.
            </summary>
            <example> 
            <code><![CDATA[ 
            <SfMention TItem="Games" DataSource="@GamesData">
              <ChildContent>
                <MentionFieldSettings Value="ID" Text="Text"></MentionFieldSettings>
              </ChildContent>
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention>
            @code{
               public class Games
                 {  
                   public string ID { get; set; }
                   public string Text { get; set; }
               }
               List<Games> GamesData = new List<Games> {
                   new Games() { ID= "Game1", Text= "American Football" },
                   new Games() { ID= "Game2", Text= "Badminton" },
                   new Games() { ID= "Game3", Text= "Basketball" },
                   new Games() { ID= "Game4", Text= "Cricket" },
                   new Games() { ID= "Game5", Text= "Football" },
                   new Games() { ID= "Game6", Text= "Golf" }
                 };
            }
            ]]></code> 
            </example>
            <typeparam name="TItem">Specifies the type of data source.</typeparam>
            <summary>
            The <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component displays a list of suggested items from which users can choose or tag one.
            The selected item inserted in target in a predefined highlight format.
            Enter the mention character in the editable element and tag the users from the suggestion list.
            </summary>
            <summary>
            The <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component displays a list of suggested items from which users can choose or tag one.
            Enter the mention character in the editable element and tag the users from the suggestion list.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.OnParametersSetAsync">
            <summary>
            Triggers when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after each time the component has been rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.InitializePopupAsync">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.UpdateListSelectionAsync(`0,System.String,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which update list selection.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="className">Specifies the class name.</param>
            <param name="keyAction"></param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.HighLightSearch(System.String,System.Boolean,Syncfusion.Blazor.DropDowns.FilterType,System.String)">
            <summary>
            Highlight the searched characters on suggested list items.
            </summary>
            <param name="textValue">highlight the list item.</param>
            <param name="ignoreCase">performing the search  text based on casing.</param>
            <param name="filtertype">Determines on which filter type, the highlight text update on the text.</param>
            <param name="highLighText"> Higlighted the char based on hightligh text and this is  optional. If not provide the highlightText, it wil get the filter value.</param>
            <returns>Returns highlight string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.OnMouseClickAsync(Syncfusion.Blazor.DropDowns.ListOptions{`0},Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers when mouse click is performed.
            </summary>
            <param name="args">Specifies the ListOptions arguments.</param>
            <param name="eventArgs">Specifies the MouseEventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.UpdateSelectedItemAsync(`0,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.UpdateSelectItemAsync(`0,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.SearchListAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.FilteringActionAsync(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            Task which specifies the filtering action.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.GetItemData(`0)">
            <summary>
            Method which gets item data.
            </summary>
            <param name="item">Specifies the item.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.InvokeChangeEvent(System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <param name="keyArgs">Specifies KeyActions arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ListItemCreated(Syncfusion.Blazor.DropDowns.ListOptions{`0})">
            <summary>
            Task which specifies the list item created event.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <returns>ListOptions.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.InvokeBeforeOpen">
            <summary>
            Triggers before popup get opened.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ActionBegin(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which performs the action begin event.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ActionComplete(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which performs the action complete event.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ActionFailure(System.Object)">
            <summary>
            Task which performs the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.RenderEqualItemsAsync">
            <summary>
            Update the custom value to the list
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.UpdateChildProperties(System.Object)">
            <summary>
            Update the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.FilterAsync(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.MentionFieldSettings)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.ID">
            <summary>
            Gets or sets the id of the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component.
            </summary>
            <value> 
            It sets the unique ID for the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Target">
            <summary>
            Gets or sets the target selector for displaying the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component. 
            The <c>SfMention</c> component listens to user input on the target element displays suggestions as soon as the user enters the mention character. 
            This allows users to easily select items from the list of suggestions by typing the mention character and then selecting an item from the list.
            </summary>
            <value>
            An element on the page should be used as the target for the <c>SfMention</c> component, 
            so that mention component displays suggestion list opens relative to the elements cursor position.
            </value>
            <remarks>
            The <c>Target</c> property is required and must be specified.
            </remarks>
            <example> 
            <code><![CDATA[ 
            <SfMention DataSource="@SizeData">
            <TargetComponent>
                <div id="mentionTarget" ></div>
            </TargetComponent>
            </SfMention>
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example> 
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.ChildContent">
            <summary>
            Gets or sets the content that has to be passed.
            </summary>
            <value>
            The value used to build the content.
            </value>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.CssClass">
            <summary>
            Gets or sets the class/multiple classes separated by a space for the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component. 
            </summary>
            <value> 
            Accepts a CSS class string separated by space to include for <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> popup element. The default value is <c>String.Empty</c>.
            </value>
            <example> 
            <code><![CDATA[ 
            <SfMention CssClass="custom-mention" DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
               .custom-mention .e-dropdownbase .e-list-item.e-active {
                  color: #eec5d2;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.MentionChar">
            <summary>
            Gets or sets the symbol or single character which triggers the search action in the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component.
            The <c>SfMention</c> component listens to user input on the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Target"/> element displays suggestions as soon as the user enters the mention character.
            </summary>
            <value> 
            A character of symbol. By default, the trigger character is the <c>@</c> symbol..
            </value>
            <example> 
            <code><![CDATA[ 
            <SfMention MentionChar='#' DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention>
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.ShowMentionChar">
            <summary>
            Gets or sets whether to show the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.MentionChar"/> along with with the text when displaying selected mention item in target.
            </summary>
            <value>
            <c>true</c>, the selected mention item displayed along with the mention character. The default value is <c>false</c>.
            </value>
            <remarks>
            If <c>ShowMentionChar</c> is set to <c>true</c>, the <c>mention</c> component will display the mention character along with the text of the mentioned item. 
            For example, if the mention character is <c>@</c> and the user mentions the item "John Doe", the mention will be displayed as @John Doe.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.FilterType">
            <summary>
            Gets or sets the filter type that specifies the match criteria while searching for mentions. The possible values for the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.FilterType"/> property are:
            <list type="bullet">
            <item>
            <term>StartsWith</term>
            <description>lists the items if the start of the text in the item matches with the search term or input string.</description>
            </item>
            <item>
            <term>EndsWith</term>
            <description>lists the items if the end of the text in the item matches with the search term or input string.</description>
            </item>
            <item>
            <term>Contains</term>
            <description>lists the items if the item text contains the search term or input string.</description>
            </item>
            </list>
            </summary>
            <value> 
            One of the <see cref="T:Syncfusion.Blazor.DropDowns.FilterType"/> enumeration that specifies the match criteria while searching.
            The default value is <see cref="F:Syncfusion.Blazor.DropDowns.FilterType.Contains"/>.
            </value>
            <example> 
            <code><![CDATA[ 
            <SfMention FilterType="FilterType.Contains" DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.AllowSpaces">
            <summary>
            Gets or sets whether to continue search action if user enter space after mention character while searching.
            </summary>
            <value> 
            <c>true</c>, the search action takes place even after a space, if the DataSource data's are matched. The default value is <c>false</c>.
            </value>
            <remarks>
            By default, the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component will only search for mentions when the mention character is immediately followed by a non-whitespace character (e.g. @john but not @ john). 
            However, you can change this behavior and allow the SfMention component to continue searching for mentions even if the user enters a space after the mention character by setting the <c>AllowSpaces</c> property to true.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.SuffixText">
            <summary>
            Gets or sets the custom suffix that will be appended to the end of the mentioned item's text when it is inserted into the target editor. 
            </summary>
            <value> 
            Accepts <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.SuffixText"/> as string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            When a item is selected, the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component will automatically insert the text of the mentioned item into the target editor. 
            By default, the mention component will insert the text of the mentioned item without any additional text or characters. 
            However, you can specify a custom suffix that will be appended to the end of the mentioned item's text when it is inserted into the target editor.
            </remarks>
            <example> 
            <code><![CDATA[ 
            <SfMention SuffixText="&nbsp;" DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.SuggestionCount">
            <summary>
            Gets or sets the maximum number of items that will be displayed in the suggestion list.
            </summary>
            <value> 
            The maximum number of items that will be displayed in the suggestion list. The default value is <c>25</c>.
            </value>
            <remarks>
            </remarks>
            By default, the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component will display all of the items in the suggestions list. 
            However, you can limit the number of items that are displayed in the list by setting the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.SuggestionCount"/> property.
            <example> 
            <code><![CDATA[ 
            <SfMention SuggestionCount=15 DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.MinLength">
            <summary>
            Gets or sets the minimum length of user input that is required to initiate the search action.
            </summary>
            <value> 
            The minimum number of characters user input that is required to initiate the search action.The default value is <c>0</c>.
            </value>
            <remarks>
            By default, the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component will initiate a search as soon as the user begins typing in the editable element.
            You can change this behavior by setting the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.MinLength"/> property.
            </remarks>
            <example> 
            For example, if you wanted to require the user to enter at least <c>3</c> characters before a search is initiated, you could use the following code:
            <code><![CDATA[ 
            <SfMention MinLength=3 DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Highlight">
            <summary>
            Gets or sets whether to highlight the searched characters on suggestion list items.
            </summary>
            <value> 
            <c>true</c>, enable the highlighting of the searched characters in the suggestions list. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.PopupHeight">
            <summary>
            Gets or sets the popup's height value in pixels/number/percentage. If a number value is specified, it will be treated as pixels. 
            </summary>
            <value> 
            Accepts <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.PopupHeight"/> property accepts a value in pixels, number, or percentage. The default value is <c>300px</c>.
            </value>
            <example> 
            For example, if you wanted to set the height of the popup to 200 pixels, you could use the following code:
            <code><![CDATA[ 
            <SfMention PopupHeight="200px" DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.PopupWidth">
            <summary>
            Gets or sets the popup's width value in pixels/number/percentage. If a number value is specified, it will be treated as pixels.
            </summary>
            <value> 
            Accepts <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.PopupWidth"/> property accepts a value in pixels, number, or percentage. The default value is <c>auto</c>.
            </value>
            <example>
            For example, if you wanted to set the width of the popup to 250 pixels, you could use the following code:
            <code><![CDATA[ 
            <SfMention PopupWidth="250px" DataSource="@SizeData">
              <TargetComponent>
                <div id="mentionTarget" ></div>
              </TargetComponent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.SpinnerTemplate">
            <summary>
            Gets or sets a template that defines the appearance of the loading initiator in the popup. 
            This template is displayed until the data for the suggestions has been loaded.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <example> 
            <code><![CDATA[ 
            <SfMention TItem="EmployeeData" Query="@Query" PopupWidth="250px">
                <TargetComponent>
                    <div id="mentionTarget" ></div>
                </TargetComponent>
                <SpinnerTemplate>
                    <div class="spinner_loader"></div>
                 </SpinnerTemplate>
                <ChildContent>
                    <SfDataManager Url="https://ej2services.syncfusion.com/production/web-services/api/Orders" Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>
                    <MentionFieldSettings Value="ShipCity" Text="ShipName"></MentionFieldSettings>
                </ChildContent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               public class EmployeeData
               {
                    public string FirstName { get; set; }
                    public string Country { get; set; }
               }
               public EmployeeData Data = new EmployeeData();
               public Query Query = new Query();
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.DisplayTemplate">
            <summary>
            Gets or sets a template that defines how the selected value will be displayed in the editable component.
            The <c>TItem"</c> is passed as a context to the template, allowing it to access information about the suggested item, such as its <see cref="P:Syncfusion.Blazor.DropDowns.MentionFieldSettings.Value"/> and <see cref="P:Syncfusion.Blazor.DropDowns.MentionFieldSettings.Text"/>.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <example> 
            <code><![CDATA[ 
            <SfMention TItem="EmployeeData" Query="@Query" PopupWidth="250px">
                <TargetComponent>
                   <div id="mentionTarget" ></div>
                </TargetComponent>
                <DisplayTemplate>
                   <span class='name'>@@@((context as EmployeeData).FirstName)</span>
                </DisplayTemplate>
                <ChildContent>
                    <SfDataManager Url="https://ej2services.syncfusion.com/production/web-services/api/Orders" Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>
                    <MentionFieldSettings Value="ShipCity" Text="ShipName"></MentionFieldSettings>
                </ChildContent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               public class EmployeeData
               {
                    public string FirstName { get; set; }
                    public string Country { get; set; }
               }
               public EmployeeData Data = new EmployeeData();
               public Query Query = new Query();
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.TargetComponent">
            <summary>
            Gets or sets the target component for displaying the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component. 
            The <c>SfMention</c> component listens to user input on the target component displays suggestions as soon as the user enters the mention character. 
            This allows users to easily select items from the list of suggestions by typing the mention character and then selecting an item from the list.
            </summary>
            <value> 
            The template content. The default value is <c>null</c>. 
            </value>
            <remarks>
            <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> is attached to the first element of the TargetComponent.
            </remarks>
            <example> 
            <code><![CDATA[ 
            <div id="mentionTarget" ></div>
            <SfMention TItem="EmployeeData" Query="@Query" PopupWidth="250px">
                <TargetComponent>
                   <div id="mentionTarget"></div>
                </TargetComponent>
                <ChildContent>
                    <SfDataManager Url="https://ej2services.syncfusion.com/production/web-services/api/Orders" Adaptor="Adaptors.WebApiAdaptor"></SfDataManager>
                    <MentionFieldSettings Value="ShipCity" Text="ShipName"></MentionFieldSettings>
                </ChildContent>
            </SfMention> 
            <style>
               #mentionTarget {
                  border: 2px solid grey;
                  min-height: 200px;
               }
            </style>
            @code{
               public class EmployeeData
               {
                    public string FirstName { get; set; }
                    public string Country { get; set; }
               }
               public EmployeeData Data = new EmployeeData();
               public Query Query = new Query();
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Created">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Created"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Destroyed">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Destroyed"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionBegin">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionBegin"/> event callback. 
            </summary>
            <remarks>
            You can prevent the action using <see cref="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" OnActionBegin="@OnActionBeginHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public void OnActionBeginHandler(ActionBeginEventArgs args) {
                    args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionComplete">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionComplete"/> event callback. 
            </summary>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" OnActionComplete="@OnActionCompleteHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public void OnActionCompleteHandler(ActionBeginEventArgs<string> args) {
                    args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionFailure">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.OnActionFailure"/> event callback. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Filtering">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Filtering"/> event callback. 
            </summary>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" Filtering="@OnFilteringHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public async Task OnFilteringHandler(MentionFilteringEventArgs args) {
                    
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Opening">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Opening"/> event callback. 
            </summary>
            <remarks>
            You can prevent the popup open action using <see cref="!:MentionOpeningEventArgs.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" Opening="@OnOpeningHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public void OnOpeningHandler(MentionOpeningEventArgs args) {
                    args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Closing">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Closing"/> event callback.
            </summary>
            <remarks>
            You can prevent the popup close action using <see cref="P:Syncfusion.Blazor.DropDowns.MentionClosingEventArgs.Cancel"/> and the popup remains opened always.
            </remarks>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" Closing="@OnClosingHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public void OnClosingHandler(MentionClosingEventArgs args) {
                    args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Opened">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Opened"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.Closed">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.Closed"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.ValueSelected">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.ValueSelected"/> event callback.
            </summary>
            <remarks>
            This event triggers when an item in a popup is selected or when the model value is changed by user.
            </remarks>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" ValueSelected="@OnValueSelectedHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public void OnValueSelectedHandler(MentionValueSelectedEventArgs<TItem> args) {
                    
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMention`1.ValueSelecting">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.DropDowns.SfMention`1.ValueSelecting"/> event callback.
            </summary>
            <remarks>
            You can prevent the item selection action using <see cref="P:Syncfusion.Blazor.DropDowns.MentionValueSelectingEventArgs`1.Cancel"/>.
            </remarks>
            <example>
            <code><![CDATA[
            <SfMention TItem="string" DataSource="@SizeData" ValueSelecting="@OnValueSelectingHandler"></SfMention>
            @code{
                protected List<string> SizeData = new List<string>() { "Small", "Medium", "Large" };
                public void OnValueSelectingHandler(MentionValueSelectingEventArgs<string> args) {
                    if(args.ItemData== "Medium")
                        args.Cancel = true;
                }
              }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ShowSpinnerAsync">
            <summary>
            Shows the spinner loader.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.HideSpinnerAsync">
            <summary>
            Hides the spinner loader.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ClosePopupAsync">
            <summary>
            Invoke the before the popup close.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.KeyActionHandlerAsync(Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Invoke the key action handler.
            </summary>
            <param name="args">Specifies KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.OnSearchAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,System.String)">
            <summary>
            Specifies the keyup event of filter event.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <param name="searchChar">Specifies the character to be searched.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.ShowPopupAsync">
            <summary>
            To display the suggestion list in the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component. 
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.HidePopupAsync">
            <summary>
            To hide the suggestion list in the <see cref="T:Syncfusion.Blazor.DropDowns.SfMention`1"/> component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMention`1.SearchAsync(System.String,System.String,System.String)">
            <summary>
            The method for displaying a suggestion list based on position X and Y values and text.
            </summary>
            <param name="text">Specify the search character.</param>
            <param name="positionX">Specify the popup X position.</param>
            <param name="positionY">Specify the popup Y position.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfMultiSelect`2">
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfMultiSelect.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ID">
            <summary>
            Specifies the id of the MultiSelect component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the component allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnablePersistence">
            <summary>
            <para>Enable or disable persisting component's state between page reloads.</para>
            <para>If enabled,  the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.AllowCustomValue">
            <summary>
            Allows user to add a
            Custom value the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ItemsCount">
            <summary>
            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.AllowFiltering">
            <summary>
            <para>To enable the filtering option in this component.</para>
            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>
            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the EnabledChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableCloseOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableGroupCheckBox">
            <summary>
            <para>Specifies a boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.</para>
            <para>By default, there is no checkbox provided for group headers.</para>
            <para>This property allows you to render checkbox for group headers and to select
            all the grouped items at once.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.
            <para>Possible values are: </para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the MultiSelect.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.MaximumSelectionLength">
            <summary>
            <para>Sets limitation to the value selection.</para>
            <para>Based on the limitation, list selection will be prevented.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default, it renders based on its list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Readonly">
            <summary>
            Specifies the boolean value whether the MultiSelect allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Text">
            <summary>
            Selects the list item which maps the data `Text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Value">
            <summary>
            Selects the list item which maps the data `Value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.TabIndex">
            <summary>
            Specifies the tab order of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnKeyUp">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.MultiSelectParent">
            <summary>
            Parent component of MultiSelect.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusIn">
            <summary>
            Sets the focus to the MultiSelect component for interaction.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusAsync">
            <summary>
            Sets the focus to the MultiSelect component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusOut">
            <summary>
            Remove the focus from the MultiSelect component, if the component is in focus state.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusOutAsync">
            <summary>
            Remove the focus from the MultiSelect component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSpinnerAsync">
            <summary>
            Hides the spinner loader.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.RefreshDataAsync">
            <summary>
            Refreshes the popup list items. The method is useful if the popup list item changed externally. 
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSpinnerAsync">
            <summary>
            Shows the spinner loader.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAll(System.Boolean)">
            <summary>
            <para>Based on the state parameter, entire list item will be selected/deselected.</para>
            <para>parameter.</para>
            <list type="bullet">
            <item>
            <term>True</term>
            <description>Selects entire list items.</description>
            </item>
            <item>
            <term>False</term>
            <description>Un Selects entire list items.</description>
            </item>
            </list>
            </summary>
            <param name="state">Specifies the state.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAllAsync(System.Boolean)">
             <summary>
             <para>Based on the state parameter, entire list item will be selected/deselected.</para>
             <para>parameter</para>
             <list type="bullet">
             <item>
             <term>True</term>
             <description>Selects entire list items.</description>
            </item>
             <item>
             <term>False</term>
             <description>Un Selects entire list items.</description>
             </item>
             </list>
             </summary>
             <param name="state">Specifies the state.</param>
             <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Clear">
            <summary>
            Allows you to clear the selected values from the MultiSelect component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClearAsync">
            <summary>
            Allows you to clear the selected values from the MultiSelect component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItemsAsync">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetDataByValueAsync(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetDataByValue(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterAsync(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HidePopupAsync">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowPopupAsync">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HidePopup">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Hide">
            <summary>
            Hides the MultiSelect popup.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.InvokeBlur">
            <summary>
            Invoke the blur event for the MultiSelect input.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.RemainCount(System.Double)">
            <summary>
            Invoke the RemainCount event for the return the MultiSelect remainder count.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.VirtualScrollHandler">
            <summary>
            Invoke the scroll handler.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.IsFilter">
            <summary>
            Task which specifies whether filter action is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.IncrementSearch">
            <summary>
            Task which incrment the search.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PasteHandler">
            <summary>
            Triggers when paste action is performes.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterClear">
            <summary>
            Triggers when filter clear icon is clicked.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilteringAction(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            Task which specifies the filtering action.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SetRTL">
            <summary>
            Method which set RTL to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SetCssClass">
            <summary>
            Method which set css class to the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdatePlaceholder">
            <summary>
            Triggers while updating the placeholder value.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.RefreshPopup">
            <summary>
            Task used to refresh the popup list items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SetInputValue">
            <summary>
            Invoke the client side method for update the input value while focusing out the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OpenEventArgs">
            <summary>
            Specifies the open event.
            </summary>
            <returns>PopupEventArgs arguments.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which pecifies the action begin event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdatePopupState">
            <summary>
            Method which updates the popup state.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CompareValues(`1,`1)">
            <summary>
            Method which serializes two values and compares it  
            </summary>
            <param name="newValue">Specifies the new value to be comapred with old value.</param>
            <param name="oldValue">Specifies the old value to be comapred with new value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateListSelection(Syncfusion.Blazor.DropDowns.ListOptions{`1},System.String,System.Boolean,System.EventArgs)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <param name="className">Specifies the class name..</param>
            <param name="isAdd">Specifies whether to add the item or not.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the MultiSelect fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateSelectedItem(Syncfusion.Blazor.DropDowns.ListOptions{`1},System.EventArgs,Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,System.Boolean,System.Boolean)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <param name="isGroupBy">Specifies whether the items should be grouped or not.</param>
            <param name="isGroupHeader">Specifies whether the selected item is group header.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnChangeEvent(System.EventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateValue">
            <summary>
            Task which updates the value.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItemData(`1)">
            <summary>
            Method which gets item data.
            </summary>
            <param name="item">Specifies the item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2">
            <summary>
            Specifies the MultiSelect Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of MultiSelectEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ValueChange">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ChipSelected">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.CustomValueSpecifier">
            <summary>
            Triggers when the CustomValue is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Opened">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ValueRemoved">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnValueRemove">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Cleared">
            <summary>
            Fires after cleared all item using clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnChipTag">
            <summary>
            Fires before set the selected item as chip in the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1">
            <summary>
            The MulitSelect has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of MultiSelectTemplates.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.LocaleData">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.LocaleData" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.Dropdowns">
            <summary>
            Gets or sets the Dropdowns property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.DropDownList">
            <summary>
            Gets or sets the DropDownList property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.ComboBox">
            <summary>
            Gets or sets the ComboBox property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.AutoComplete">
            <summary>
            Gets or sets the AutoComplete property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.MultiSelect">
            <summary>
            Gets or sets the MultiSelect property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.ListBox">
            <summary>
            Gets or sets the ListBox property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropdownsLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.DropdownsLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.OverflowCountTemplate">
            <summary>
            Gets or sets the OverflowCountTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.SelectAllText">
            <summary>
            Gets or sets the SelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.UnSelectAllText">
            <summary>
            Gets or sets the UnSelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.TotalCountTemplate">
            <summary>
            Gets or sets the TotalCountTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDownListLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.DropDownListLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDownListLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDownListLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ComboBoxLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.ComboBoxLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ComboBoxLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ComboBoxLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.AutoCompleteLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.AutoCompleteLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.AutoCompleteLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.AutoCompleteLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.MultiSelectLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.MultiSelectLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.OverflowCountTemplate">
            <summary>
            Gets or sets the OverflowCountTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.SelectAllText">
            <summary>
            Gets or sets the SelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.UnSelectAllText">
            <summary>
            Gets or sets the UnSelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.TotalCountTemplate">
            <summary>
            Gets or sets the TotalCountTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ListBoxLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.ListBoxLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.SelectAllText">
            <summary>
            Gets or sets the SelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.UnSelectAllText">
            <summary>
            Gets or sets the UnSelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveUp">
            <summary>
            Gets or sets the MoveUp property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveDown">
            <summary>
            Gets or sets the MoveDown property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveTo">
            <summary>
            Gets or sets the MoveTo property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveFrom">
            <summary>
            Gets or sets the MoveFrom property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveAllTo">
            <summary>
            Gets or sets the MoveAllTo property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveAllFrom">
            <summary>
            Gets or sets the MoveAllFrom property.
            </summary>
        </member>
    </members>
</doc>
